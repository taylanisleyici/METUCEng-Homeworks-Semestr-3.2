

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Wed May 24 14:58:25 2023

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    21                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    27                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    28                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    29                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    30                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    31  0000                     
    32                           ; Version 2.20
    33                           ; Generated 12/02/2020 GMT
    34                           ; 
    35                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC18F4620 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66  0000                     
    67                           	psect	idataCOMRAM
    68  000606                     __pidataCOMRAM:
    69                           	callstack 0
    70                           
    71                           ;initializer for _locations
    72  000606  03                 	db	3
    73  000607  02                 	db	2
    74  000608  03                 	db	3
    75  000609  03                 	db	3
    76  00060A  0E                 	db	14
    77  00060B  02                 	db	2
    78  00060C  0E                 	db	14
    79  00060D  03                 	db	3
    80  00060E  09                 	db	9
    81  00060F  02                 	db	2
    82                           
    83                           ;initializer for _character
    84  000610  00                 	db	0
    85  000611  00                 	db	0
    86  000612  0A                 	db	10
    87  000613  1F                 	db	31
    88  000614  1F                 	db	31
    89  000615  0E                 	db	14
    90  000616  04                 	db	4
    91  000617  00                 	db	0
    92                           
    93                           ;initializer for _lcd_y
    94  000618  01                 	db	1
    95                           
    96                           ;initializer for _lcd_x
    97  000619  01                 	db	1
    98                           
    99                           ;initializer for _frisbee_target
   100  00061A  0E                 	db	14
   101  00061B  11                 	db	17
   102  00061C  11                 	db	17
   103  00061D  11                 	db	17
   104  00061E  0E                 	db	14
   105  00061F  00                 	db	0
   106  000620  00                 	db	0
   107  000621  00                 	db	0
   108                           
   109                           ;initializer for _frisbee
   110  000622  0E                 	db	14
   111  000623  1F                 	db	31
   112  000624  1F                 	db	31
   113  000625  1F                 	db	31
   114  000626  0E                 	db	14
   115  000627  00                 	db	0
   116  000628  00                 	db	0
   117  000629  00                 	db	0
   118                           
   119                           ;initializer for _selected_teamB_player_with_frisbee
   120  00062A  1F                 	db	31
   121  00062B  15                 	db	21
   122  00062C  0A                 	db	10
   123  00062D  04                 	db	4
   124  00062E  0E                 	db	14
   125  00062F  1F                 	db	31
   126  000630  0A                 	db	10
   127  000631  1F                 	db	31
   128                           
   129                           ;initializer for _selected_teamA_player_with_frisbee
   130  000632  1F                 	db	31
   131  000633  15                 	db	21
   132  000634  0A                 	db	10
   133  000635  04                 	db	4
   134  000636  04                 	db	4
   135  000637  04                 	db	4
   136  000638  0A                 	db	10
   137  000639  1F                 	db	31
   138                           
   139                           ;initializer for _selected_teamB_player
   140  00063A  11                 	db	17
   141  00063B  15                 	db	21
   142  00063C  0A                 	db	10
   143  00063D  04                 	db	4
   144  00063E  0E                 	db	14
   145  00063F  1F                 	db	31
   146  000640  0A                 	db	10
   147  000641  1F                 	db	31
   148                           
   149                           ;initializer for _selected_teamA_player
   150  000642  11                 	db	17
   151  000643  15                 	db	21
   152  000644  0A                 	db	10
   153  000645  04                 	db	4
   154  000646  04                 	db	4
   155  000647  04                 	db	4
   156  000648  0A                 	db	10
   157  000649  1F                 	db	31
   158                           
   159                           ;initializer for _teamB_player
   160  00064A  11                 	db	17
   161  00064B  15                 	db	21
   162  00064C  0A                 	db	10
   163  00064D  04                 	db	4
   164  00064E  0E                 	db	14
   165  00064F  1F                 	db	31
   166  000650  0A                 	db	10
   167  000651  0A                 	db	10
   168                           
   169                           ;initializer for _teamA_player
   170  000652  11                 	db	17
   171  000653  15                 	db	21
   172  000654  0A                 	db	10
   173  000655  04                 	db	4
   174  000656  04                 	db	4
   175  000657  04                 	db	4
   176  000658  0A                 	db	10
   177  000659  0A                 	db	10
   178  0000                     _LATBbits	set	3978
   179  0000                     _TRISBbits	set	3987
   180  0000                     _PORTBbits	set	3969
   181  0000                     _INTCONbits	set	4082
   182  0000                     _TRISD	set	3989
   183  0000                     _TRISEbits	set	3990
   184  0000                     _PORTD	set	3971
   185  0000                     _PORTEbits	set	3972
   186  0000                     _ADCON2bits	set	4032
   187  0000                     _TRISAbits	set	3986
   188  0000                     _ADCON1bits	set	4033
   189  0000                     _ADRESL	set	4035
   190  0000                     _ADRESH	set	4036
   191  0000                     _PIR1bits	set	3998
   192  0000                     _ADCON0bits	set	4034
   193                           
   194                           ; #config settings
   195                           
   196                           	psect	cinit
   197  00065A                     __pcinit:
   198                           	callstack 0
   199  00065A                     start_initialization:
   200                           	callstack 0
   201  00065A                     __initialization:
   202                           	callstack 0
   203                           
   204                           ; Initialize objects allocated to COMRAM (84 bytes)
   205                           ; load TBLPTR registers with __pidataCOMRAM
   206  00065A  0E06               	movlw	low __pidataCOMRAM
   207  00065C  6EF6               	movwf	tblptrl,c
   208  00065E  0E06               	movlw	high __pidataCOMRAM
   209  000660  6EF7               	movwf	tblptrh,c
   210  000662  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   211  000664  6EF8               	movwf	tblptru,c
   212  000666  EE00  F001         	lfsr	0,__pdataCOMRAM
   213  00066A  EE10 F054          	lfsr	1,84
   214  00066E                     copy_data0:
   215  00066E  0009               	tblrd		*+
   216  000670  CFF5 FFEE          	movff	tablat,postinc0
   217  000674  50E5               	movf	postdec1,w,c
   218  000676  50E1               	movf	fsr1l,w,c
   219  000678  E1FA               	bnz	copy_data0
   220                           
   221                           ; Clear objects allocated to BANK0 (70 bytes)
   222  00067A  EE00  F080         	lfsr	0,__pbssBANK0
   223  00067E  0E46               	movlw	70
   224  000680                     clear_0:
   225  000680  6AEE               	clrf	postinc0,c
   226  000682  06E8               	decf	wreg,f,c
   227  000684  E1FD               	bnz	clear_0
   228                           
   229                           ; Clear objects allocated to COMRAM (3 bytes)
   230  000686  6A6A               	clrf	(__pbssCOMRAM+2)& (0+255),c
   231  000688  6A69               	clrf	(__pbssCOMRAM+1)& (0+255),c
   232  00068A  6A68               	clrf	__pbssCOMRAM& (0+255),c
   233  00068C                     end_of_initialization:
   234                           	callstack 0
   235  00068C                     __end_of__initialization:
   236                           	callstack 0
   237  00068C  906B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   238  00068E  926B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   239  000690  0E00               	movlw	low (__Lmediumconst shr (0+16))
   240  000692  6EF8               	movwf	tblptru,c
   241  000694  0100               	movlb	0
   242  000696  EF25  F002         	goto	_main	;jump to C main() function
   243                           
   244                           	psect	bssCOMRAM
   245  000068                     __pbssCOMRAM:
   246                           	callstack 0
   247  000068                     _selectedChar:
   248                           	callstack 0
   249  000068                     	ds	2
   250  00006A                     _CONVERT:
   251                           	callstack 0
   252  00006A                     	ds	1
   253                           
   254                           	psect	dataCOMRAM
   255  000001                     __pdataCOMRAM:
   256                           	callstack 0
   257  000001                     _locations:
   258                           	callstack 0
   259  000001                     	ds	10
   260  00000B                     _character:
   261                           	callstack 0
   262  00000B                     	ds	8
   263  000013                     _lcd_y:
   264                           	callstack 0
   265  000013                     	ds	1
   266  000014                     _lcd_x:
   267                           	callstack 0
   268  000014                     	ds	1
   269  000015                     _frisbee_target:
   270                           	callstack 0
   271  000015                     	ds	8
   272  00001D                     _frisbee:
   273                           	callstack 0
   274  00001D                     	ds	8
   275  000025                     _selected_teamB_player_with_frisbee:
   276                           	callstack 0
   277  000025                     	ds	8
   278  00002D                     _selected_teamA_player_with_frisbee:
   279                           	callstack 0
   280  00002D                     	ds	8
   281  000035                     _selected_teamB_player:
   282                           	callstack 0
   283  000035                     	ds	8
   284  00003D                     _selected_teamA_player:
   285                           	callstack 0
   286  00003D                     	ds	8
   287  000045                     _teamB_player:
   288                           	callstack 0
   289  000045                     	ds	8
   290  00004D                     _teamA_player:
   291                           	callstack 0
   292  00004D                     	ds	8
   293                           
   294                           	psect	bssBANK0
   295  000080                     __pbssBANK0:
   296                           	callstack 0
   297  000080                     _frisbee_steps:
   298                           	callstack 0
   299  000080                     	ds	60
   300  0000BC                     	ds	10
   301                           
   302                           	psect	cstackBANK0
   303  0000C6                     __pcstackBANK0:
   304                           	callstack 0
   305  0000C6                     main@values:
   306                           	callstack 0
   307                           
   308                           ; 10 bytes @ 0x0
   309  0000C6                     	ds	10
   310                           
   311                           	psect	cstackCOMRAM
   312  000055                     __pcstackCOMRAM:
   313                           	callstack 0
   314  000055                     ??i2_LCDCmd:
   315  000055                     ??i2_LCDDat:
   316  000055                     
   317                           ; 1 bytes @ 0x0
   318  000055                     	ds	1
   319  000056                     i2LCDCmd@cmd:
   320                           	callstack 0
   321  000056                     i2LCDDat@dat:
   322                           	callstack 0
   323                           
   324                           ; 1 bytes @ 0x1
   325  000056                     	ds	1
   326  000057                     i2LCDGoto@p_1:
   327                           	callstack 0
   328                           
   329                           ; 1 bytes @ 0x2
   330  000057                     	ds	1
   331  000058                     i2LCDGoto@p_2:
   332                           	callstack 0
   333                           
   334                           ; 1 bytes @ 0x3
   335  000058                     	ds	1
   336  000059                     ??i2_setLCD:
   337                           
   338                           ; 1 bytes @ 0x4
   339  000059                     	ds	2
   340  00005B                     i2setLCD@i:
   341                           	callstack 0
   342                           
   343                           ; 2 bytes @ 0x6
   344  00005B                     	ds	2
   345  00005D                     ??_FNC:
   346                           
   347                           ; 1 bytes @ 0x8
   348  00005D                     	ds	3
   349  000060                     ??_LCDCmd:
   350  000060                     ??_LCDDat:
   351                           
   352                           ; 1 bytes @ 0xB
   353  000060                     	ds	1
   354  000061                     LCDCmd@cmd:
   355                           	callstack 0
   356  000061                     LCDDat@dat:
   357                           	callstack 0
   358                           
   359                           ; 1 bytes @ 0xC
   360  000061                     	ds	1
   361  000062                     LCDGoto@p_1:
   362                           	callstack 0
   363  000062                     LCDAddSpecialCharacter@data:
   364                           	callstack 0
   365                           
   366                           ; 2 bytes @ 0xD
   367  000062                     	ds	1
   368  000063                     LCDGoto@p_2:
   369                           	callstack 0
   370                           
   371                           ; 1 bytes @ 0xE
   372  000063                     	ds	1
   373  000064                     ??_setLCD:
   374  000064                     LCDAddSpecialCharacter@character_index:
   375                           	callstack 0
   376                           
   377                           ; 1 bytes @ 0xF
   378  000064                     	ds	1
   379  000065                     LCDAddSpecialCharacter@i:
   380                           	callstack 0
   381                           
   382                           ; 1 bytes @ 0x10
   383  000065                     	ds	1
   384  000066                     setLCD@i:
   385                           	callstack 0
   386                           
   387                           ; 2 bytes @ 0x11
   388  000066                     	ds	2
   389  000068                     
   390                           ; 1 bytes @ 0x13
   391 ;;
   392 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   393 ;;
   394 ;; *************** function _main *****************
   395 ;; Defined at:
   396 ;;		line 106 in file "main.c"
   397 ;; Parameters:    Size  Location     Type
   398 ;;		None
   399 ;; Auto vars:     Size  Location     Type
   400 ;;  values         10    0[BANK0 ] unsigned char [10]
   401 ;;  convertion      2    0        unsigned short 
   402 ;; Return value:  Size  Location     Type
   403 ;;                  1    wreg      void 
   404 ;; Registers used:
   405 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   406 ;; Tracked objects:
   407 ;;		On entry : 0/0
   408 ;;		On exit  : 0/0
   409 ;;		Unchanged: 0/0
   410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   412 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   414 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   415 ;;Total ram usage:       12 bytes
   416 ;; Hardware stack levels required when called:    7
   417 ;; This function calls:
   418 ;;		_InitLCD
   419 ;;		_LCDAddSpecialCharacter
   420 ;;		_LCDCmd
   421 ;;		_initADC
   422 ;;		_setLCD
   423 ;; This function is called by:
   424 ;;		Startup code after reset
   425 ;; This function uses a non-reentrant model
   426 ;;
   427                           
   428                           	psect	text0
   429  00044A                     __ptext0:
   430                           	callstack 0
   431  00044A                     _main:
   432                           	callstack 24
   433  00044A                     
   434                           ;main.c: 108:     initADC();
   435  00044A  ECE4  F003         	call	_initADC	;wreg free
   436  00044E                     
   437                           ;main.c: 110:     InitLCD();
   438  00044E  EC82  F003         	call	_InitLCD	;wreg free
   439  000452                     
   440                           ;main.c: 112:     LCDAddSpecialCharacter(0, teamA_player);
   441  000452  0E4D               	movlw	low _teamA_player
   442  000454  6E62               	movwf	LCDAddSpecialCharacter@data^0,c
   443  000456  0E00               	movlw	high _teamA_player
   444  000458  6E63               	movwf	(LCDAddSpecialCharacter@data+1)^0,c
   445  00045A  0E00               	movlw	0
   446  00045C  EC4D  F003         	call	_LCDAddSpecialCharacter
   447  000460                     
   448                           ;main.c: 113:     LCDAddSpecialCharacter(1, selected_teamA_player);
   449  000460  0E3D               	movlw	low _selected_teamA_player
   450  000462  6E62               	movwf	LCDAddSpecialCharacter@data^0,c
   451  000464  0E00               	movlw	high _selected_teamA_player
   452  000466  6E63               	movwf	(LCDAddSpecialCharacter@data+1)^0,c
   453  000468  0E01               	movlw	1
   454  00046A  EC4D  F003         	call	_LCDAddSpecialCharacter
   455  00046E                     
   456                           ;main.c: 114:     LCDAddSpecialCharacter(2, selected_teamA_player_with_frisbee);
   457  00046E  0E2D               	movlw	low _selected_teamA_player_with_frisbee
   458  000470  6E62               	movwf	LCDAddSpecialCharacter@data^0,c
   459  000472  0E00               	movlw	high _selected_teamA_player_with_frisbee
   460  000474  6E63               	movwf	(LCDAddSpecialCharacter@data+1)^0,c
   461  000476  0E02               	movlw	2
   462  000478  EC4D  F003         	call	_LCDAddSpecialCharacter
   463  00047C                     
   464                           ;main.c: 115:     LCDAddSpecialCharacter(3, teamB_player);
   465  00047C  0E45               	movlw	low _teamB_player
   466  00047E  6E62               	movwf	LCDAddSpecialCharacter@data^0,c
   467  000480  0E00               	movlw	high _teamB_player
   468  000482  6E63               	movwf	(LCDAddSpecialCharacter@data+1)^0,c
   469  000484  0E03               	movlw	3
   470  000486  EC4D  F003         	call	_LCDAddSpecialCharacter
   471  00048A                     
   472                           ;main.c: 116:     LCDAddSpecialCharacter(4, selected_teamB_player);
   473  00048A  0E35               	movlw	low _selected_teamB_player
   474  00048C  6E62               	movwf	LCDAddSpecialCharacter@data^0,c
   475  00048E  0E00               	movlw	high _selected_teamB_player
   476  000490  6E63               	movwf	(LCDAddSpecialCharacter@data+1)^0,c
   477  000492  0E04               	movlw	4
   478  000494  EC4D  F003         	call	_LCDAddSpecialCharacter
   479  000498                     
   480                           ;main.c: 117:     LCDAddSpecialCharacter(5, selected_teamB_player_with_frisbee);
   481  000498  0E25               	movlw	low _selected_teamB_player_with_frisbee
   482  00049A  6E62               	movwf	LCDAddSpecialCharacter@data^0,c
   483  00049C  0E00               	movlw	high _selected_teamB_player_with_frisbee
   484  00049E  6E63               	movwf	(LCDAddSpecialCharacter@data+1)^0,c
   485  0004A0  0E05               	movlw	5
   486  0004A2  EC4D  F003         	call	_LCDAddSpecialCharacter
   487  0004A6                     
   488                           ;main.c: 118:     LCDAddSpecialCharacter(6, frisbee);
   489  0004A6  0E1D               	movlw	low _frisbee
   490  0004A8  6E62               	movwf	LCDAddSpecialCharacter@data^0,c
   491  0004AA  0E00               	movlw	high _frisbee
   492  0004AC  6E63               	movwf	(LCDAddSpecialCharacter@data+1)^0,c
   493  0004AE  0E06               	movlw	6
   494  0004B0  EC4D  F003         	call	_LCDAddSpecialCharacter
   495  0004B4                     
   496                           ;main.c: 119:     LCDAddSpecialCharacter(7, frisbee_target);
   497  0004B4  0E15               	movlw	low _frisbee_target
   498  0004B6  6E62               	movwf	LCDAddSpecialCharacter@data^0,c
   499  0004B8  0E00               	movlw	high _frisbee_target
   500  0004BA  6E63               	movwf	(LCDAddSpecialCharacter@data+1)^0,c
   501  0004BC  0E07               	movlw	7
   502  0004BE  EC4D  F003         	call	_LCDAddSpecialCharacter
   503  0004C2                     
   504                           ;main.c: 121:     char values[10] = {0};
   505  0004C2  EE20  F0C6         	lfsr	2,main@values
   506  0004C6  0E09               	movlw	9
   507  0004C8                     u941:
   508  0004C8  6ADE               	clrf	postinc2,c
   509  0004CA  06E8               	decf	wreg,f,c
   510  0004CC  E2FD               	bc	u941
   511  0004CE                     
   512                           ;main.c: 127:     TRISBbits.RB0 = 1;
   513  0004CE  8093               	bsf	147,0,c	;volatile
   514  0004D0                     
   515                           ;main.c: 128:     INTCONbits.INT0IE = 1;
   516  0004D0  88F2               	bsf	242,4,c	;volatile
   517  0004D2                     
   518                           ;main.c: 129:     INTCONbits.INT0IF = 0;
   519  0004D2  92F2               	bcf	242,1,c	;volatile
   520  0004D4                     
   521                           ;main.c: 130:     INTCONbits.GIE = 1;
   522  0004D4  8EF2               	bsf	242,7,c	;volatile
   523  0004D6                     
   524                           ;main.c: 131:     INTCONbits.PEIE = 1;
   525  0004D6  8CF2               	bsf	242,6,c	;volatile
   526  0004D8                     
   527                           ;main.c: 134:     LATBbits.LATB4 = 0;
   528  0004D8  988A               	bcf	138,4,c	;volatile
   529  0004DA                     
   530                           ;main.c: 135:     LATBbits.LATB5 = 0;
   531  0004DA  9A8A               	bcf	138,5,c	;volatile
   532  0004DC                     
   533                           ;main.c: 136:     LATBbits.LATB6 = 0;
   534  0004DC  9C8A               	bcf	138,6,c	;volatile
   535  0004DE                     
   536                           ;main.c: 137:     LATBbits.LATB7 = 0;
   537  0004DE  9E8A               	bcf	138,7,c	;volatile
   538  0004E0                     
   539                           ;main.c: 138:     PORTBbits.RB4 = 0;
   540  0004E0  9881               	bcf	129,4,c	;volatile
   541  0004E2                     
   542                           ;main.c: 139:     PORTBbits.RB5 = 0;
   543  0004E2  9A81               	bcf	129,5,c	;volatile
   544  0004E4                     
   545                           ;main.c: 140:     PORTBbits.RB6 = 0;
   546  0004E4  9C81               	bcf	129,6,c	;volatile
   547  0004E6                     
   548                           ;main.c: 141:     PORTBbits.RB7 = 0;
   549  0004E6  9E81               	bcf	129,7,c	;volatile
   550  0004E8                     
   551                           ;main.c: 142:     TRISBbits.RB4 = 1;
   552  0004E8  8893               	bsf	147,4,c	;volatile
   553  0004EA                     
   554                           ;main.c: 143:     TRISBbits.RB5 = 1;
   555  0004EA  8A93               	bsf	147,5,c	;volatile
   556  0004EC                     
   557                           ;main.c: 144:     TRISBbits.RB6 = 1;
   558  0004EC  8C93               	bsf	147,6,c	;volatile
   559  0004EE                     
   560                           ;main.c: 145:     TRISBbits.RB7 = 1;
   561  0004EE  8E93               	bsf	147,7,c	;volatile
   562  0004F0                     
   563                           ;main.c: 146:     INTCONbits.RBIF = 0;
   564  0004F0  90F2               	bcf	242,0,c	;volatile
   565  0004F2                     
   566                           ;main.c: 147:     INTCONbits.RBIE = 1;
   567  0004F2  86F2               	bsf	242,3,c	;volatile
   568  0004F4                     
   569                           ;main.c: 157:     setLCD();
   570  0004F4  EC09  F000         	call	_setLCD	;wreg free
   571  0004F8                     l1911:
   572                           
   573                           ;main.c: 161:     {;main.c: 162:         if(CONVERT == 1)
   574  0004F8  046A               	decf	_CONVERT^0,w,c	;volatile
   575  0004FA  A4D8               	btfss	status,2,c
   576  0004FC  EF82  F002         	goto	u951
   577  000500  EF84  F002         	goto	u950
   578  000504                     u951:
   579  000504  EF7C  F002         	goto	l1911
   580  000508                     u950:
   581  000508                     
   582                           ;main.c: 163:         {;main.c: 164:             LCDCmd(0x01);
   583  000508  0E01               	movlw	1
   584  00050A  ECB4  F003         	call	_LCDCmd
   585  00050E                     
   586                           ;main.c: 165:             setLCD();
   587  00050E  EC09  F000         	call	_setLCD	;wreg free
   588  000512                     
   589                           ;main.c: 167:             CONVERT = 0;
   590  000512  0E00               	movlw	0
   591  000514  6E6A               	movwf	_CONVERT^0,c	;volatile
   592  000516  EF7C  F002         	goto	l1911
   593  00051A  EF07  F000         	goto	start
   594  00051E                     __end_of_main:
   595                           	callstack 0
   596                           
   597 ;; *************** function _setLCD *****************
   598 ;; Defined at:
   599 ;;		line 63 in file "main.c"
   600 ;; Parameters:    Size  Location     Type
   601 ;;		None
   602 ;; Auto vars:     Size  Location     Type
   603 ;;  i               2   17[COMRAM] unsigned short 
   604 ;; Return value:  Size  Location     Type
   605 ;;                  1    wreg      void 
   606 ;; Registers used:
   607 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   608 ;; Tracked objects:
   609 ;;		On entry : 0/0
   610 ;;		On exit  : 0/0
   611 ;;		Unchanged: 0/0
   612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   614 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   615 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   616 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   617 ;;Total ram usage:        4 bytes
   618 ;; Hardware stack levels used:    1
   619 ;; Hardware stack levels required when called:    6
   620 ;; This function calls:
   621 ;;		_LCDDat
   622 ;;		_LCDGoto
   623 ;; This function is called by:
   624 ;;		_main
   625 ;; This function uses a non-reentrant model
   626 ;;
   627                           
   628                           	psect	text1
   629  000012                     __ptext1:
   630                           	callstack 0
   631  000012                     _setLCD:
   632                           	callstack 24
   633  000012                     
   634                           ;main.c: 65:     for(unsigned short i = 0; i < 5; i++)
   635  000012  0E00               	movlw	0
   636  000014  6E67               	movwf	(setLCD@i+1)^0,c
   637  000016  0E00               	movlw	0
   638  000018  6E66               	movwf	setLCD@i^0,c
   639  00001A                     l1791:
   640                           
   641                           ;main.c: 66:     {;main.c: 67:         if(selectedChar == i)
   642  00001A  5066               	movf	setLCD@i^0,w,c
   643  00001C  1868               	xorwf	_selectedChar^0,w,c
   644  00001E  E107               	bnz	u881
   645  000020  5067               	movf	(setLCD@i+1)^0,w,c
   646  000022  1869               	xorwf	(_selectedChar+1)^0,w,c
   647  000024  A4D8               	btfss	status,2,c
   648  000026  EF17  F000         	goto	u881
   649  00002A  EF19  F000         	goto	u880
   650  00002E                     u881:
   651  00002E  EF5C  F000         	goto	l1803
   652  000032                     u880:
   653  000032                     
   654                           ;main.c: 68:         {;main.c: 69:             if(i < 2)
   655  000032  5067               	movf	(setLCD@i+1)^0,w,c
   656  000034  E107               	bnz	u891
   657  000036  0E02               	movlw	2
   658  000038  5C66               	subwf	setLCD@i^0,w,c
   659  00003A  B0D8               	btfsc	status,0,c
   660  00003C  EF22  F000         	goto	u891
   661  000040  EF24  F000         	goto	u890
   662  000044                     u891:
   663  000044  EF40  F000         	goto	l1799
   664  000048                     u890:
   665  000048                     
   666                           ;main.c: 70:             {;main.c: 71:                 LCDGoto(locations[i][0],locations
      +                          [i][1]);
   667  000048  90D8               	bcf	status,0,c
   668  00004A  3466               	rlcf	setLCD@i^0,w,c
   669  00004C  6ED9               	movwf	fsr2l,c
   670  00004E  3467               	rlcf	(setLCD@i+1)^0,w,c
   671  000050  6EDA               	movwf	fsr2h,c
   672  000052  0E02               	movlw	low (_locations+1)
   673  000054  26D9               	addwf	fsr2l,f,c
   674  000056  0E00               	movlw	high (_locations+1)
   675  000058  22DA               	addwfc	fsr2h,f,c
   676  00005A  50DF               	movf	indf2,w,c
   677  00005C  6E62               	movwf	LCDGoto@p_1^0,c
   678  00005E  90D8               	bcf	status,0,c
   679  000060  3466               	rlcf	setLCD@i^0,w,c
   680  000062  6ED9               	movwf	fsr2l,c
   681  000064  3467               	rlcf	(setLCD@i+1)^0,w,c
   682  000066  6EDA               	movwf	fsr2h,c
   683  000068  0E01               	movlw	low _locations
   684  00006A  26D9               	addwf	fsr2l,f,c
   685  00006C  0E00               	movlw	high _locations
   686  00006E  22DA               	addwfc	fsr2h,f,c
   687  000070  50DF               	movf	indf2,w,c
   688  000072  EC8F  F002         	call	_LCDGoto
   689  000076                     
   690                           ;main.c: 72:                 LCDDat(1);
   691  000076  0E01               	movlw	1
   692  000078  EC69  F003         	call	_LCDDat
   693                           
   694                           ;main.c: 73:             }
   695  00007C  EFB0  F000         	goto	l1819
   696  000080                     l1799:
   697                           
   698                           ;main.c: 75:             {;main.c: 76:                 LCDGoto(locations[i][0],locations
      +                          [i][1]);
   699  000080  90D8               	bcf	status,0,c
   700  000082  3466               	rlcf	setLCD@i^0,w,c
   701  000084  6ED9               	movwf	fsr2l,c
   702  000086  3467               	rlcf	(setLCD@i+1)^0,w,c
   703  000088  6EDA               	movwf	fsr2h,c
   704  00008A  0E02               	movlw	low (_locations+1)
   705  00008C  26D9               	addwf	fsr2l,f,c
   706  00008E  0E00               	movlw	high (_locations+1)
   707  000090  22DA               	addwfc	fsr2h,f,c
   708  000092  50DF               	movf	indf2,w,c
   709  000094  6E62               	movwf	LCDGoto@p_1^0,c
   710  000096  90D8               	bcf	status,0,c
   711  000098  3466               	rlcf	setLCD@i^0,w,c
   712  00009A  6ED9               	movwf	fsr2l,c
   713  00009C  3467               	rlcf	(setLCD@i+1)^0,w,c
   714  00009E  6EDA               	movwf	fsr2h,c
   715  0000A0  0E01               	movlw	low _locations
   716  0000A2  26D9               	addwf	fsr2l,f,c
   717  0000A4  0E00               	movlw	high _locations
   718  0000A6  22DA               	addwfc	fsr2h,f,c
   719  0000A8  50DF               	movf	indf2,w,c
   720  0000AA  EC8F  F002         	call	_LCDGoto
   721  0000AE                     
   722                           ;main.c: 77:                 LCDDat(4);
   723  0000AE  0E04               	movlw	4
   724  0000B0  EC69  F003         	call	_LCDDat
   725  0000B4  EFB0  F000         	goto	l1819
   726  0000B8                     l1803:
   727                           
   728                           ;main.c: 81:         {;main.c: 82:             LCDGoto(locations[i][0],locations[i][1]);
   729  0000B8  90D8               	bcf	status,0,c
   730  0000BA  3466               	rlcf	setLCD@i^0,w,c
   731  0000BC  6ED9               	movwf	fsr2l,c
   732  0000BE  3467               	rlcf	(setLCD@i+1)^0,w,c
   733  0000C0  6EDA               	movwf	fsr2h,c
   734  0000C2  0E02               	movlw	low (_locations+1)
   735  0000C4  26D9               	addwf	fsr2l,f,c
   736  0000C6  0E00               	movlw	high (_locations+1)
   737  0000C8  22DA               	addwfc	fsr2h,f,c
   738  0000CA  50DF               	movf	indf2,w,c
   739  0000CC  6E62               	movwf	LCDGoto@p_1^0,c
   740  0000CE  90D8               	bcf	status,0,c
   741  0000D0  3466               	rlcf	setLCD@i^0,w,c
   742  0000D2  6ED9               	movwf	fsr2l,c
   743  0000D4  3467               	rlcf	(setLCD@i+1)^0,w,c
   744  0000D6  6EDA               	movwf	fsr2h,c
   745  0000D8  0E01               	movlw	low _locations
   746  0000DA  26D9               	addwf	fsr2l,f,c
   747  0000DC  0E00               	movlw	high _locations
   748  0000DE  22DA               	addwfc	fsr2h,f,c
   749  0000E0  50DF               	movf	indf2,w,c
   750  0000E2  EC8F  F002         	call	_LCDGoto
   751                           
   752                           ;main.c: 83:             switch(i)
   753  0000E6  EF8E  F000         	goto	l1817
   754  0000EA                     l1805:
   755                           
   756                           ;main.c: 86:                     LCDDat(0);
   757  0000EA  0E00               	movlw	0
   758  0000EC  EC69  F003         	call	_LCDDat
   759                           
   760                           ;main.c: 87:                     break;
   761  0000F0  EFB0  F000         	goto	l1819
   762  0000F4                     l1807:
   763                           
   764                           ;main.c: 89:                     LCDDat(0);
   765  0000F4  0E00               	movlw	0
   766  0000F6  EC69  F003         	call	_LCDDat
   767                           
   768                           ;main.c: 90:                     break;
   769  0000FA  EFB0  F000         	goto	l1819
   770  0000FE                     l1809:
   771                           
   772                           ;main.c: 92:                     LCDDat(3);
   773  0000FE  0E03               	movlw	3
   774  000100  EC69  F003         	call	_LCDDat
   775                           
   776                           ;main.c: 93:                     break;
   777  000104  EFB0  F000         	goto	l1819
   778  000108                     l1811:
   779                           
   780                           ;main.c: 95:                     LCDDat(3);
   781  000108  0E03               	movlw	3
   782  00010A  EC69  F003         	call	_LCDDat
   783                           
   784                           ;main.c: 96:                     break;
   785  00010E  EFB0  F000         	goto	l1819
   786  000112                     l1813:
   787                           
   788                           ;main.c: 98:                     LCDDat(6);
   789  000112  0E06               	movlw	6
   790  000114  EC69  F003         	call	_LCDDat
   791                           
   792                           ;main.c: 99:                     break;
   793  000118  EFB0  F000         	goto	l1819
   794  00011C                     l1817:
   795  00011C  C066  F064         	movff	setLCD@i,??_setLCD
   796  000120  C067  F065         	movff	setLCD@i+1,??_setLCD+1
   797                           
   798                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   799                           ; Switch size 1, requested type "simple"
   800                           ; Number of cases is 1, Range of values is 0 to 0
   801                           ; switch strategies available:
   802                           ; Name         Instructions Cycles
   803                           ; simple_byte            4     3 (average)
   804                           ;	Chosen strategy is simple_byte
   805  000124  5065               	movf	(??_setLCD+1)^0,w,c
   806  000126  0A00               	xorlw	0	; case 0
   807  000128  B4D8               	btfsc	status,2,c
   808  00012A  EF99  F000         	goto	l1927
   809  00012E  EFB0  F000         	goto	l1819
   810  000132                     l1927:
   811                           
   812                           ; Switch size 1, requested type "simple"
   813                           ; Number of cases is 5, Range of values is 0 to 4
   814                           ; switch strategies available:
   815                           ; Name         Instructions Cycles
   816                           ; simple_byte           16     9 (average)
   817                           ;	Chosen strategy is simple_byte
   818  000132  5064               	movf	??_setLCD^0,w,c
   819  000134  0A00               	xorlw	0	; case 0
   820  000136  B4D8               	btfsc	status,2,c
   821  000138  EF75  F000         	goto	l1805
   822  00013C  0A01               	xorlw	1	; case 1
   823  00013E  B4D8               	btfsc	status,2,c
   824  000140  EF7A  F000         	goto	l1807
   825  000144  0A03               	xorlw	3	; case 2
   826  000146  B4D8               	btfsc	status,2,c
   827  000148  EF7F  F000         	goto	l1809
   828  00014C  0A01               	xorlw	1	; case 3
   829  00014E  B4D8               	btfsc	status,2,c
   830  000150  EF84  F000         	goto	l1811
   831  000154  0A07               	xorlw	7	; case 4
   832  000156  B4D8               	btfsc	status,2,c
   833  000158  EF89  F000         	goto	l1813
   834  00015C  EFB0  F000         	goto	l1819
   835  000160                     l1819:
   836                           
   837                           ;main.c: 102:     }
   838  000160  4A66               	infsnz	setLCD@i^0,f,c
   839  000162  2A67               	incf	(setLCD@i+1)^0,f,c
   840  000164  5067               	movf	(setLCD@i+1)^0,w,c
   841  000166  E109               	bnz	u900
   842  000168  0E05               	movlw	5
   843  00016A  5C66               	subwf	setLCD@i^0,w,c
   844  00016C  A0D8               	btfss	status,0,c
   845  00016E  EFBB  F000         	goto	u901
   846  000172  EFBD  F000         	goto	u900
   847  000176                     u901:
   848  000176  EF0D  F000         	goto	l1791
   849  00017A                     u900:
   850  00017A  0012               	return		;funcret
   851  00017C                     __end_of_setLCD:
   852                           	callstack 0
   853                           
   854 ;; *************** function _LCDGoto *****************
   855 ;; Defined at:
   856 ;;		line 72 in file "./lcd.h"
   857 ;; Parameters:    Size  Location     Type
   858 ;;  p_2             1    wreg     unsigned char 
   859 ;;  p_1             1   13[COMRAM] unsigned char 
   860 ;; Auto vars:     Size  Location     Type
   861 ;;  p_2             1   14[COMRAM] unsigned char 
   862 ;; Return value:  Size  Location     Type
   863 ;;                  1    wreg      void 
   864 ;; Registers used:
   865 ;;		wreg, status,2, status,0, cstack
   866 ;; Tracked objects:
   867 ;;		On entry : 0/0
   868 ;;		On exit  : 0/0
   869 ;;		Unchanged: 0/0
   870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   871 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   872 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   874 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   875 ;;Total ram usage:        2 bytes
   876 ;; Hardware stack levels used:    1
   877 ;; Hardware stack levels required when called:    5
   878 ;; This function calls:
   879 ;;		_LCDCmd
   880 ;; This function is called by:
   881 ;;		_setLCD
   882 ;; This function uses a non-reentrant model
   883 ;;
   884                           
   885                           	psect	text2
   886  00051E                     __ptext2:
   887                           	callstack 0
   888  00051E                     _LCDGoto:
   889                           	callstack 24
   890                           
   891                           ;incstack = 0
   892                           ;LCDGoto@p_2 stored from wreg
   893  00051E  6E63               	movwf	LCDGoto@p_2^0,c
   894  000520                     
   895                           ;./lcd.h: 73:   if(p_1==1) {
   896  000520  0462               	decf	LCDGoto@p_1^0,w,c
   897  000522  A4D8               	btfss	status,2,c
   898  000524  EF96  F002         	goto	u841
   899  000528  EF98  F002         	goto	u840
   900  00052C                     u841:
   901  00052C  EF9F  F002         	goto	l1735
   902  000530                     u840:
   903  000530                     
   904                           ;./lcd.h: 74:     LCDCmd(0x80 +((p_2-1)%16));
   905  000530  0463               	decf	LCDGoto@p_2^0,w,c
   906  000532  0B0F               	andlw	15
   907  000534  0F80               	addlw	128
   908  000536  ECB4  F003         	call	_LCDCmd
   909                           
   910                           ;./lcd.h: 75:   }
   911  00053A  EFC4  F002         	goto	l1745
   912  00053E                     l1735:
   913  00053E  0E02               	movlw	2
   914  000540  1862               	xorwf	LCDGoto@p_1^0,w,c
   915  000542  A4D8               	btfss	status,2,c
   916  000544  EFA6  F002         	goto	u851
   917  000548  EFA8  F002         	goto	u850
   918  00054C                     u851:
   919  00054C  EFAF  F002         	goto	l1739
   920  000550                     u850:
   921  000550                     
   922                           ;./lcd.h: 77:     LCDCmd(0xC0 +((p_2-1)%16));
   923  000550  0463               	decf	LCDGoto@p_2^0,w,c
   924  000552  0B0F               	andlw	15
   925  000554  0FC0               	addlw	192
   926  000556  ECB4  F003         	call	_LCDCmd
   927                           
   928                           ;./lcd.h: 78:   }
   929  00055A  EFC4  F002         	goto	l1745
   930  00055E                     l1739:
   931  00055E  0E03               	movlw	3
   932  000560  1862               	xorwf	LCDGoto@p_1^0,w,c
   933  000562  A4D8               	btfss	status,2,c
   934  000564  EFB6  F002         	goto	u861
   935  000568  EFB8  F002         	goto	u860
   936  00056C                     u861:
   937  00056C  EFBF  F002         	goto	l1743
   938  000570                     u860:
   939  000570                     
   940                           ;./lcd.h: 80:     LCDCmd(0x90 +((p_2-1)%16));
   941  000570  0463               	decf	LCDGoto@p_2^0,w,c
   942  000572  0B0F               	andlw	15
   943  000574  0F90               	addlw	144
   944  000576  ECB4  F003         	call	_LCDCmd
   945                           
   946                           ;./lcd.h: 81:   }
   947  00057A  EFC4  F002         	goto	l1745
   948  00057E                     l1743:
   949                           
   950                           ;./lcd.h: 83:     LCDCmd(0xD0 +((p_2-1)%16));
   951  00057E  0463               	decf	LCDGoto@p_2^0,w,c
   952  000580  0B0F               	andlw	15
   953  000582  0FD0               	addlw	208
   954  000584  ECB4  F003         	call	_LCDCmd
   955  000588                     l1745:
   956                           
   957                           ;./lcd.h: 85:   lcd_x = p_2;
   958  000588  C063  F014         	movff	LCDGoto@p_2,_lcd_x
   959  00058C                     
   960                           ;./lcd.h: 86:   lcd_y = p_1;
   961  00058C  C062  F013         	movff	LCDGoto@p_1,_lcd_y
   962  000590  0012               	return		;funcret
   963  000592                     __end_of_LCDGoto:
   964                           	callstack 0
   965                           
   966 ;; *************** function _initADC *****************
   967 ;; Defined at:
   968 ;;		line 35 in file "./adc.h"
   969 ;; Parameters:    Size  Location     Type
   970 ;;		None
   971 ;; Auto vars:     Size  Location     Type
   972 ;;		None
   973 ;; Return value:  Size  Location     Type
   974 ;;                  1    wreg      void 
   975 ;; Registers used:
   976 ;;		None
   977 ;; Tracked objects:
   978 ;;		On entry : 0/0
   979 ;;		On exit  : 0/0
   980 ;;		Unchanged: 0/0
   981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   985 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   986 ;;Total ram usage:        0 bytes
   987 ;; Hardware stack levels used:    1
   988 ;; Hardware stack levels required when called:    4
   989 ;; This function calls:
   990 ;;		Nothing
   991 ;; This function is called by:
   992 ;;		_main
   993 ;; This function uses a non-reentrant model
   994 ;;
   995                           
   996                           	psect	text3
   997  0007C8                     __ptext3:
   998                           	callstack 0
   999  0007C8                     _initADC:
  1000                           	callstack 26
  1001  0007C8                     
  1002                           ;./adc.h: 37:         ADCON1bits.PCFG3 = 1;
  1003  0007C8  86C1               	bsf	193,3,c	;volatile
  1004                           
  1005                           ;./adc.h: 38:         ADCON1bits.PCFG2 = 1;
  1006  0007CA  84C1               	bsf	193,2,c	;volatile
  1007                           
  1008                           ;./adc.h: 39:         ADCON1bits.PCFG1 = 0;
  1009  0007CC  92C1               	bcf	193,1,c	;volatile
  1010                           
  1011                           ;./adc.h: 40:         ADCON1bits.PCFG0 = 0;
  1012  0007CE  90C1               	bcf	193,0,c	;volatile
  1013                           
  1014                           ;./adc.h: 42:         ADCON1bits.VCFG0 = 0;
  1015  0007D0  98C1               	bcf	193,4,c	;volatile
  1016                           
  1017                           ;./adc.h: 43:         ADCON1bits.VCFG1 = 0;
  1018  0007D2  9AC1               	bcf	193,5,c	;volatile
  1019                           
  1020                           ;./adc.h: 45:         TRISAbits.RA0 = 1;
  1021  0007D4  8092               	bsf	146,0,c	;volatile
  1022                           
  1023                           ;./adc.h: 46:         TRISAbits.RA1 = 1;
  1024  0007D6  8292               	bsf	146,1,c	;volatile
  1025                           
  1026                           ;./adc.h: 47:         TRISAbits.RA2 = 0;
  1027  0007D8  9492               	bcf	146,2,c	;volatile
  1028                           
  1029                           ;./adc.h: 56:         ADCON2bits.ADCS2 = 0;
  1030  0007DA  94C0               	bcf	192,2,c	;volatile
  1031                           
  1032                           ;./adc.h: 57:         ADCON2bits.ADCS1 = 1;
  1033  0007DC  82C0               	bsf	192,1,c	;volatile
  1034                           
  1035                           ;./adc.h: 58:         ADCON2bits.ADCS0 = 0;
  1036  0007DE  90C0               	bcf	192,0,c	;volatile
  1037                           
  1038                           ;./adc.h: 60:         ADCON2bits.ACQT2 = 0;
  1039  0007E0  9AC0               	bcf	192,5,c	;volatile
  1040                           
  1041                           ;./adc.h: 61:         ADCON2bits.ACQT1 = 1;
  1042  0007E2  88C0               	bsf	192,4,c	;volatile
  1043                           
  1044                           ;./adc.h: 62:         ADCON2bits.ACQT0 = 0;
  1045  0007E4  96C0               	bcf	192,3,c	;volatile
  1046                           
  1047                           ;./adc.h: 64:         ADCON2bits.ADFM = 1;
  1048  0007E6  8EC0               	bsf	192,7,c	;volatile
  1049                           
  1050                           ;./adc.h: 66:         ADCON0bits.ADON = 1;
  1051  0007E8  80C2               	bsf	194,0,c	;volatile
  1052  0007EA  0012               	return		;funcret
  1053  0007EC                     __end_of_initADC:
  1054                           	callstack 0
  1055                           
  1056 ;; *************** function _LCDAddSpecialCharacter *****************
  1057 ;; Defined at:
  1058 ;;		line 129 in file "./lcd.h"
  1059 ;; Parameters:    Size  Location     Type
  1060 ;;  character_in    1    wreg     unsigned char 
  1061 ;;  data            2   13[COMRAM] PTR unsigned char 
  1062 ;;		 -> frisbee_target(8), frisbee(8), selected_teamB_player_with_frisbee(8), selected_teamB_player(8), 
  1063 ;;		 -> teamB_player(8), selected_teamA_player_with_frisbee(8), selected_teamA_player(8), teamA_player(8), 
  1064 ;; Auto vars:     Size  Location     Type
  1065 ;;  character_in    1   15[COMRAM] unsigned char 
  1066 ;;  i               1   16[COMRAM] unsigned char 
  1067 ;; Return value:  Size  Location     Type
  1068 ;;                  1    wreg      void 
  1069 ;; Registers used:
  1070 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1071 ;; Tracked objects:
  1072 ;;		On entry : 0/0
  1073 ;;		On exit  : 0/0
  1074 ;;		Unchanged: 0/0
  1075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1076 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1077 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1079 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1080 ;;Total ram usage:        4 bytes
  1081 ;; Hardware stack levels used:    1
  1082 ;; Hardware stack levels required when called:    5
  1083 ;; This function calls:
  1084 ;;		_LCDCmd
  1085 ;;		_LCDDat
  1086 ;; This function is called by:
  1087 ;;		_main
  1088 ;; This function uses a non-reentrant model
  1089 ;;
  1090                           
  1091                           	psect	text4
  1092  00069A                     __ptext4:
  1093                           	callstack 0
  1094  00069A                     _LCDAddSpecialCharacter:
  1095                           	callstack 25
  1096                           
  1097                           ;incstack = 0
  1098                           ;LCDAddSpecialCharacter@character_index stored from wreg
  1099  00069A  6E64               	movwf	LCDAddSpecialCharacter@character_index^0,c
  1100  00069C                     
  1101                           ;./lcd.h: 135:     LCDCmd(0b01000000+(character_index*8));
  1102  00069C  5064               	movf	LCDAddSpecialCharacter@character_index^0,w,c
  1103  00069E  0D08               	mullw	8
  1104  0006A0  50F3               	movf	243,w,c
  1105  0006A2  0F40               	addlw	64
  1106  0006A4  ECB4  F003         	call	_LCDCmd
  1107  0006A8                     
  1108                           ;./lcd.h: 136:     for(byte i=0; i < 8; i++) {
  1109  0006A8  0E00               	movlw	0
  1110  0006AA  6E65               	movwf	LCDAddSpecialCharacter@i^0,c
  1111  0006AC                     l1779:
  1112                           
  1113                           ;./lcd.h: 137:         LCDDat(data[i]);
  1114  0006AC  5065               	movf	LCDAddSpecialCharacter@i^0,w,c
  1115  0006AE  2462               	addwf	LCDAddSpecialCharacter@data^0,w,c
  1116  0006B0  6ED9               	movwf	fsr2l,c
  1117  0006B2  0E00               	movlw	0
  1118  0006B4  2063               	addwfc	(LCDAddSpecialCharacter@data+1)^0,w,c
  1119  0006B6  6EDA               	movwf	fsr2h,c
  1120  0006B8  50DF               	movf	indf2,w,c
  1121  0006BA  EC69  F003         	call	_LCDDat
  1122  0006BE                     
  1123                           ;./lcd.h: 138:     }
  1124  0006BE  2A65               	incf	LCDAddSpecialCharacter@i^0,f,c
  1125  0006C0  0E07               	movlw	7
  1126  0006C2  6465               	cpfsgt	LCDAddSpecialCharacter@i^0,c
  1127  0006C4  EF66  F003         	goto	u871
  1128  0006C8  EF68  F003         	goto	u870
  1129  0006CC                     u871:
  1130  0006CC  EF56  F003         	goto	l1779
  1131  0006D0                     u870:
  1132  0006D0  0012               	return		;funcret
  1133  0006D2                     __end_of_LCDAddSpecialCharacter:
  1134                           	callstack 0
  1135                           
  1136 ;; *************** function _LCDDat *****************
  1137 ;; Defined at:
  1138 ;;		line 58 in file "./lcd.h"
  1139 ;; Parameters:    Size  Location     Type
  1140 ;;  dat             1    wreg     unsigned char 
  1141 ;; Auto vars:     Size  Location     Type
  1142 ;;  dat             1   12[COMRAM] unsigned char 
  1143 ;; Return value:  Size  Location     Type
  1144 ;;                  1    wreg      void 
  1145 ;; Registers used:
  1146 ;;		wreg
  1147 ;; Tracked objects:
  1148 ;;		On entry : 0/0
  1149 ;;		On exit  : 0/0
  1150 ;;		Unchanged: 0/0
  1151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1153 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1154 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1155 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1156 ;;Total ram usage:        2 bytes
  1157 ;; Hardware stack levels used:    1
  1158 ;; Hardware stack levels required when called:    4
  1159 ;; This function calls:
  1160 ;;		Nothing
  1161 ;; This function is called by:
  1162 ;;		_LCDAddSpecialCharacter
  1163 ;;		_setLCD
  1164 ;;		_LCDStr
  1165 ;; This function uses a non-reentrant model
  1166 ;;
  1167                           
  1168                           	psect	text5
  1169  0006D2                     __ptext5:
  1170                           	callstack 0
  1171  0006D2                     _LCDDat:
  1172                           	callstack 25
  1173                           
  1174                           ;incstack = 0
  1175                           ;LCDDat@dat stored from wreg
  1176  0006D2  6E61               	movwf	LCDDat@dat^0,c
  1177  0006D4                     
  1178                           ;./lcd.h: 59:   PORTEbits.RE1 = 0;
  1179  0006D4  9284               	bcf	132,1,c	;volatile
  1180                           
  1181                           ;./lcd.h: 60:   PORTEbits.RE2 = 1;
  1182  0006D6  8484               	bsf	132,2,c	;volatile
  1183  0006D8                     
  1184                           ;./lcd.h: 61:   PORTD = dat;
  1185  0006D8  C061  FF83         	movff	LCDDat@dat,3971	;volatile
  1186  0006DC                     
  1187                           ;./lcd.h: 62:   PORTEbits.RE1 = 1;
  1188  0006DC  8284               	bsf	132,1,c	;volatile
  1189  0006DE                     
  1190                           ;./lcd.h: 63:   _delay((unsigned long)((2000)*(40000000L/4000000.0)));
  1191  0006DE  0E1A               	movlw	26
  1192  0006E0  6E60               	movwf	??_LCDDat^0,c
  1193  0006E2  0EF8               	movlw	248
  1194  0006E4                     u967:
  1195  0006E4  2EE8               	decfsz	wreg,f,c
  1196  0006E6  D7FE               	bra	u967
  1197  0006E8  2E60               	decfsz	??_LCDDat^0,f,c
  1198  0006EA  D7FC               	bra	u967
  1199  0006EC  D000               	nop2	
  1200  0006EE                     
  1201                           ;./lcd.h: 64:   PORTEbits.RE1 = 0;
  1202  0006EE  9284               	bcf	132,1,c	;volatile
  1203  0006F0                     
  1204                           ;./lcd.h: 65:   _delay((unsigned long)((2000)*(40000000L/4000000.0)));
  1205  0006F0  0E1A               	movlw	26
  1206  0006F2  6E60               	movwf	??_LCDDat^0,c
  1207  0006F4  0EF8               	movlw	248
  1208  0006F6                     u977:
  1209  0006F6  2EE8               	decfsz	wreg,f,c
  1210  0006F8  D7FE               	bra	u977
  1211  0006FA  2E60               	decfsz	??_LCDDat^0,f,c
  1212  0006FC  D7FC               	bra	u977
  1213  0006FE  D000               	nop2	
  1214  000700                     
  1215                           ;./lcd.h: 66:   PORTEbits.RE2 = 0;
  1216  000700  9484               	bcf	132,2,c	;volatile
  1217  000702  0012               	return		;funcret
  1218  000704                     __end_of_LCDDat:
  1219                           	callstack 0
  1220                           
  1221 ;; *************** function _InitLCD *****************
  1222 ;; Defined at:
  1223 ;;		line 108 in file "./lcd.h"
  1224 ;; Parameters:    Size  Location     Type
  1225 ;;		None
  1226 ;; Auto vars:     Size  Location     Type
  1227 ;;		None
  1228 ;; Return value:  Size  Location     Type
  1229 ;;                  1    wreg      void 
  1230 ;; Registers used:
  1231 ;;		wreg, status,2, cstack
  1232 ;; Tracked objects:
  1233 ;;		On entry : 0/0
  1234 ;;		On exit  : 0/0
  1235 ;;		Unchanged: 0/0
  1236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1240 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1241 ;;Total ram usage:        0 bytes
  1242 ;; Hardware stack levels used:    1
  1243 ;; Hardware stack levels required when called:    5
  1244 ;; This function calls:
  1245 ;;		_LCDCmd
  1246 ;; This function is called by:
  1247 ;;		_main
  1248 ;; This function uses a non-reentrant model
  1249 ;;
  1250                           
  1251                           	psect	text6
  1252  000704                     __ptext6:
  1253                           	callstack 0
  1254  000704                     _InitLCD:
  1255                           	callstack 25
  1256  000704                     
  1257                           ;./lcd.h: 109:   TRISEbits.RE1 = 0;
  1258  000704  9296               	bcf	150,1,c	;volatile
  1259                           
  1260                           ;./lcd.h: 110:   TRISEbits.RE2 = 0;
  1261  000706  9496               	bcf	150,2,c	;volatile
  1262  000708                     
  1263                           ;./lcd.h: 111:   TRISD = 0;
  1264  000708  0E00               	movlw	0
  1265  00070A  6E95               	movwf	149,c	;volatile
  1266  00070C                     
  1267                           ;./lcd.h: 113:   PORTEbits.RE1 = 0;
  1268  00070C  9284               	bcf	132,1,c	;volatile
  1269  00070E                     
  1270                           ;./lcd.h: 114:   PORTEbits.RE2 = 0;
  1271  00070E  9484               	bcf	132,2,c	;volatile
  1272  000710                     
  1273                           ;./lcd.h: 115:   LCDCmd(0x38);
  1274  000710  0E38               	movlw	56
  1275  000712  ECB4  F003         	call	_LCDCmd
  1276  000716                     
  1277                           ;./lcd.h: 116:   LCDCmd(0x08);
  1278  000716  0E08               	movlw	8
  1279  000718  ECB4  F003         	call	_LCDCmd
  1280  00071C                     
  1281                           ;./lcd.h: 117:   LCDCmd(0x0C);
  1282  00071C  0E0C               	movlw	12
  1283  00071E  ECB4  F003         	call	_LCDCmd
  1284  000722                     
  1285                           ;./lcd.h: 118:   LCDCmd(0x06);
  1286  000722  0E06               	movlw	6
  1287  000724  ECB4  F003         	call	_LCDCmd
  1288  000728                     
  1289                           ;./lcd.h: 119:   LCDCmd(0x01);
  1290  000728  0E01               	movlw	1
  1291  00072A  ECB4  F003         	call	_LCDCmd
  1292  00072E                     
  1293                           ;./lcd.h: 120:   LCDCmd(0x80);
  1294  00072E  0E80               	movlw	128
  1295  000730  ECB4  F003         	call	_LCDCmd
  1296  000734  0012               	return		;funcret
  1297  000736                     __end_of_InitLCD:
  1298                           	callstack 0
  1299                           
  1300 ;; *************** function _LCDCmd *****************
  1301 ;; Defined at:
  1302 ;;		line 48 in file "./lcd.h"
  1303 ;; Parameters:    Size  Location     Type
  1304 ;;  cmd             1    wreg     unsigned char 
  1305 ;; Auto vars:     Size  Location     Type
  1306 ;;  cmd             1   12[COMRAM] unsigned char 
  1307 ;; Return value:  Size  Location     Type
  1308 ;;                  1    wreg      void 
  1309 ;; Registers used:
  1310 ;;		wreg
  1311 ;; Tracked objects:
  1312 ;;		On entry : 0/0
  1313 ;;		On exit  : 0/0
  1314 ;;		Unchanged: 0/0
  1315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1317 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1318 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1319 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1320 ;;Total ram usage:        2 bytes
  1321 ;; Hardware stack levels used:    1
  1322 ;; Hardware stack levels required when called:    4
  1323 ;; This function calls:
  1324 ;;		Nothing
  1325 ;; This function is called by:
  1326 ;;		_LCDGoto
  1327 ;;		_InitLCD
  1328 ;;		_LCDAddSpecialCharacter
  1329 ;;		_main
  1330 ;; This function uses a non-reentrant model
  1331 ;;
  1332                           
  1333                           	psect	text7
  1334  000768                     __ptext7:
  1335                           	callstack 0
  1336  000768                     _LCDCmd:
  1337                           	callstack 24
  1338                           
  1339                           ;incstack = 0
  1340                           ;LCDCmd@cmd stored from wreg
  1341  000768  6E61               	movwf	LCDCmd@cmd^0,c
  1342  00076A                     
  1343                           ;./lcd.h: 49:   PORTEbits.RE1 = 0;
  1344  00076A  9284               	bcf	132,1,c	;volatile
  1345                           
  1346                           ;./lcd.h: 50:   PORTEbits.RE2 = 0;
  1347  00076C  9484               	bcf	132,2,c	;volatile
  1348  00076E                     
  1349                           ;./lcd.h: 51:   PORTD = cmd;
  1350  00076E  C061  FF83         	movff	LCDCmd@cmd,3971	;volatile
  1351  000772                     
  1352                           ;./lcd.h: 52:   PORTEbits.RE1 = 1;
  1353  000772  8284               	bsf	132,1,c	;volatile
  1354  000774                     
  1355                           ;./lcd.h: 53:   _delay((unsigned long)((2000)*(40000000L/4000000.0)));
  1356  000774  0E1A               	movlw	26
  1357  000776  6E60               	movwf	??_LCDCmd^0,c
  1358  000778  0EF8               	movlw	248
  1359  00077A                     u987:
  1360  00077A  2EE8               	decfsz	wreg,f,c
  1361  00077C  D7FE               	bra	u987
  1362  00077E  2E60               	decfsz	??_LCDCmd^0,f,c
  1363  000780  D7FC               	bra	u987
  1364  000782  D000               	nop2	
  1365  000784                     
  1366                           ;./lcd.h: 54:   PORTEbits.RE1 = 0;
  1367  000784  9284               	bcf	132,1,c	;volatile
  1368  000786                     
  1369                           ;./lcd.h: 55:   _delay((unsigned long)((2000)*(40000000L/4000000.0)));
  1370  000786  0E1A               	movlw	26
  1371  000788  6E60               	movwf	??_LCDCmd^0,c
  1372  00078A  0EF8               	movlw	248
  1373  00078C                     u997:
  1374  00078C  2EE8               	decfsz	wreg,f,c
  1375  00078E  D7FE               	bra	u997
  1376  000790  2E60               	decfsz	??_LCDCmd^0,f,c
  1377  000792  D7FC               	bra	u997
  1378  000794  D000               	nop2	
  1379  000796  0012               	return		;funcret
  1380  000798                     __end_of_LCDCmd:
  1381                           	callstack 0
  1382                           
  1383 ;; *************** function _FNC *****************
  1384 ;; Defined at:
  1385 ;;		line 30 in file "main.c"
  1386 ;; Parameters:    Size  Location     Type
  1387 ;;		None
  1388 ;; Auto vars:     Size  Location     Type
  1389 ;;		None
  1390 ;; Return value:  Size  Location     Type
  1391 ;;                  1    wreg      void 
  1392 ;; Registers used:
  1393 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1394 ;; Tracked objects:
  1395 ;;		On entry : 0/0
  1396 ;;		On exit  : 0/0
  1397 ;;		Unchanged: 0/0
  1398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1401 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1402 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1403 ;;Total ram usage:        3 bytes
  1404 ;; Hardware stack levels used:    1
  1405 ;; Hardware stack levels required when called:    3
  1406 ;; This function calls:
  1407 ;;		i2_LCDCmd
  1408 ;;		i2_setLCD
  1409 ;; This function is called by:
  1410 ;;		Interrupt level 2
  1411 ;; This function uses a non-reentrant model
  1412 ;;
  1413                           
  1414                           	psect	intcode
  1415  000008                     __pintcode:
  1416                           	callstack 0
  1417  000008                     _FNC:
  1418                           	callstack 24
  1419                           
  1420                           ;incstack = 0
  1421  000008  826B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1422  00000A  ED73  F001         	call	int_func,f	;refresh shadow registers
  1423                           
  1424                           	psect	intcode_body
  1425  0002E6                     __pintcode_body:
  1426                           	callstack 24
  1427  0002E6                     int_func:
  1428                           	callstack 24
  1429  0002E6  0006               	pop		; remove dummy address from shadow register refresh
  1430  0002E8  CFD9 F05E          	movff	fsr2l,??_FNC+1
  1431  0002EC  CFDA F05F          	movff	fsr2h,??_FNC+2
  1432  0002F0                     
  1433                           ;main.c: 32:     if(INTCONbits.INT0IF)
  1434  0002F0  A2F2               	btfss	242,1,c	;volatile
  1435  0002F2  EF7D  F001         	goto	i2u72_41
  1436  0002F6  EF7F  F001         	goto	i2u72_40
  1437  0002FA                     i2u72_41:
  1438  0002FA  EF82  F001         	goto	i2l1599
  1439  0002FE                     i2u72_40:
  1440  0002FE                     
  1441                           ;main.c: 33:     {;main.c: 35:         CONVERT = 1;
  1442  0002FE  0E01               	movlw	1
  1443  000300  6E6A               	movwf	_CONVERT^0,c	;volatile
  1444  000302                     
  1445                           ;main.c: 36:         INTCONbits.INT0IF = 0;
  1446  000302  92F2               	bcf	242,1,c	;volatile
  1447  000304                     i2l1599:
  1448                           
  1449                           ;main.c: 38:     if(INTCONbits.RBIF)
  1450  000304  A0F2               	btfss	242,0,c	;volatile
  1451  000306  EF87  F001         	goto	i2u73_41
  1452  00030A  EF89  F001         	goto	i2u73_40
  1453  00030E                     i2u73_41:
  1454  00030E  EF1F  F002         	goto	i2l162
  1455  000312                     i2u73_40:
  1456  000312                     
  1457                           ;main.c: 39:     {;main.c: 40:         if (PORTBbits.RB4 == 1)
  1458  000312  A881               	btfss	129,4,c	;volatile
  1459  000314  EF8E  F001         	goto	i2u74_41
  1460  000318  EF90  F001         	goto	i2u74_40
  1461  00031C                     i2u74_41:
  1462  00031C  EFAD  F001         	goto	i2l151
  1463  000320                     i2u74_40:
  1464  000320                     
  1465                           ;main.c: 41:         {;main.c: 42:             if(locations[selectedChar][1] != 1) locat
      +                          ions[selectedChar][1]--;
  1466  000320  90D8               	bcf	status,0,c
  1467  000322  3468               	rlcf	_selectedChar^0,w,c
  1468  000324  6ED9               	movwf	fsr2l,c
  1469  000326  3469               	rlcf	(_selectedChar+1)^0,w,c
  1470  000328  6EDA               	movwf	fsr2h,c
  1471  00032A  0E02               	movlw	low (_locations+1)
  1472  00032C  26D9               	addwf	fsr2l,f,c
  1473  00032E  0E00               	movlw	high (_locations+1)
  1474  000330  22DA               	addwfc	fsr2h,f,c
  1475  000332  04DE               	decf	postinc2,w,c
  1476  000334  B4D8               	btfsc	status,2,c
  1477  000336  EF9F  F001         	goto	i2u75_41
  1478  00033A  EFA1  F001         	goto	i2u75_40
  1479  00033E                     i2u75_41:
  1480  00033E  EF19  F002         	goto	i2l1619
  1481  000342                     i2u75_40:
  1482  000342  90D8               	bcf	status,0,c
  1483  000344  3468               	rlcf	_selectedChar^0,w,c
  1484  000346  6ED9               	movwf	fsr2l,c
  1485  000348  3469               	rlcf	(_selectedChar+1)^0,w,c
  1486  00034A  6EDA               	movwf	fsr2h,c
  1487  00034C  0E02               	movlw	low (_locations+1)
  1488  00034E  26D9               	addwf	fsr2l,f,c
  1489  000350  0E00               	movlw	high (_locations+1)
  1490  000352  22DA               	addwfc	fsr2h,f,c
  1491  000354  06DF               	decf	indf2,f,c
  1492  000356  EF19  F002         	goto	i2l1619
  1493  00035A                     i2l151:
  1494  00035A  AA81               	btfss	129,5,c	;volatile
  1495  00035C  EFB2  F001         	goto	i2u76_41
  1496  000360  EFB4  F001         	goto	i2u76_40
  1497  000364                     i2u76_41:
  1498  000364  EFD2  F001         	goto	i2l154
  1499  000368                     i2u76_40:
  1500  000368                     
  1501                           ;main.c: 45:         {;main.c: 46:             if(locations[selectedChar][0] != 16) loca
      +                          tions[selectedChar][0]++;
  1502  000368  90D8               	bcf	status,0,c
  1503  00036A  3468               	rlcf	_selectedChar^0,w,c
  1504  00036C  6ED9               	movwf	fsr2l,c
  1505  00036E  3469               	rlcf	(_selectedChar+1)^0,w,c
  1506  000370  6EDA               	movwf	fsr2h,c
  1507  000372  0E01               	movlw	low _locations
  1508  000374  26D9               	addwf	fsr2l,f,c
  1509  000376  0E00               	movlw	high _locations
  1510  000378  22DA               	addwfc	fsr2h,f,c
  1511  00037A  0E10               	movlw	16
  1512  00037C  18DE               	xorwf	postinc2,w,c
  1513  00037E  B4D8               	btfsc	status,2,c
  1514  000380  EFC4  F001         	goto	i2u77_41
  1515  000384  EFC6  F001         	goto	i2u77_40
  1516  000388                     i2u77_41:
  1517  000388  EF19  F002         	goto	i2l1619
  1518  00038C                     i2u77_40:
  1519  00038C  90D8               	bcf	status,0,c
  1520  00038E  3468               	rlcf	_selectedChar^0,w,c
  1521  000390  6ED9               	movwf	fsr2l,c
  1522  000392  3469               	rlcf	(_selectedChar+1)^0,w,c
  1523  000394  6EDA               	movwf	fsr2h,c
  1524  000396  0E01               	movlw	low _locations
  1525  000398  26D9               	addwf	fsr2l,f,c
  1526  00039A  0E00               	movlw	high _locations
  1527  00039C  22DA               	addwfc	fsr2h,f,c
  1528  00039E  2ADF               	incf	indf2,f,c
  1529  0003A0  EF19  F002         	goto	i2l1619
  1530  0003A4                     i2l154:
  1531  0003A4  AC81               	btfss	129,6,c	;volatile
  1532  0003A6  EFD7  F001         	goto	i2u78_41
  1533  0003AA  EFD9  F001         	goto	i2u78_40
  1534  0003AE                     i2u78_41:
  1535  0003AE  EFF7  F001         	goto	i2l157
  1536  0003B2                     i2u78_40:
  1537  0003B2                     
  1538                           ;main.c: 49:         {;main.c: 50:             if(locations[selectedChar][1] != 4) locat
      +                          ions[selectedChar][1]++;
  1539  0003B2  90D8               	bcf	status,0,c
  1540  0003B4  3468               	rlcf	_selectedChar^0,w,c
  1541  0003B6  6ED9               	movwf	fsr2l,c
  1542  0003B8  3469               	rlcf	(_selectedChar+1)^0,w,c
  1543  0003BA  6EDA               	movwf	fsr2h,c
  1544  0003BC  0E02               	movlw	low (_locations+1)
  1545  0003BE  26D9               	addwf	fsr2l,f,c
  1546  0003C0  0E00               	movlw	high (_locations+1)
  1547  0003C2  22DA               	addwfc	fsr2h,f,c
  1548  0003C4  0E04               	movlw	4
  1549  0003C6  18DE               	xorwf	postinc2,w,c
  1550  0003C8  B4D8               	btfsc	status,2,c
  1551  0003CA  EFE9  F001         	goto	i2u79_41
  1552  0003CE  EFEB  F001         	goto	i2u79_40
  1553  0003D2                     i2u79_41:
  1554  0003D2  EF19  F002         	goto	i2l1619
  1555  0003D6                     i2u79_40:
  1556  0003D6  90D8               	bcf	status,0,c
  1557  0003D8  3468               	rlcf	_selectedChar^0,w,c
  1558  0003DA  6ED9               	movwf	fsr2l,c
  1559  0003DC  3469               	rlcf	(_selectedChar+1)^0,w,c
  1560  0003DE  6EDA               	movwf	fsr2h,c
  1561  0003E0  0E02               	movlw	low (_locations+1)
  1562  0003E2  26D9               	addwf	fsr2l,f,c
  1563  0003E4  0E00               	movlw	high (_locations+1)
  1564  0003E6  22DA               	addwfc	fsr2h,f,c
  1565  0003E8  2ADF               	incf	indf2,f,c
  1566  0003EA  EF19  F002         	goto	i2l1619
  1567  0003EE                     i2l157:
  1568  0003EE  AE81               	btfss	129,7,c	;volatile
  1569  0003F0  EFFC  F001         	goto	i2u80_41
  1570  0003F4  EFFE  F001         	goto	i2u80_40
  1571  0003F8                     i2u80_41:
  1572  0003F8  EF19  F002         	goto	i2l1619
  1573  0003FC                     i2u80_40:
  1574  0003FC                     
  1575                           ;main.c: 53:         {;main.c: 54:             if(locations[selectedChar][0] != 1) locat
      +                          ions[selectedChar][0]--;
  1576  0003FC  90D8               	bcf	status,0,c
  1577  0003FE  3468               	rlcf	_selectedChar^0,w,c
  1578  000400  6ED9               	movwf	fsr2l,c
  1579  000402  3469               	rlcf	(_selectedChar+1)^0,w,c
  1580  000404  6EDA               	movwf	fsr2h,c
  1581  000406  0E01               	movlw	low _locations
  1582  000408  26D9               	addwf	fsr2l,f,c
  1583  00040A  0E00               	movlw	high _locations
  1584  00040C  22DA               	addwfc	fsr2h,f,c
  1585  00040E  04DE               	decf	postinc2,w,c
  1586  000410  B4D8               	btfsc	status,2,c
  1587  000412  EF0D  F002         	goto	i2u81_41
  1588  000416  EF0F  F002         	goto	i2u81_40
  1589  00041A                     i2u81_41:
  1590  00041A  EF19  F002         	goto	i2l1619
  1591  00041E                     i2u81_40:
  1592  00041E  90D8               	bcf	status,0,c
  1593  000420  3468               	rlcf	_selectedChar^0,w,c
  1594  000422  6ED9               	movwf	fsr2l,c
  1595  000424  3469               	rlcf	(_selectedChar+1)^0,w,c
  1596  000426  6EDA               	movwf	fsr2h,c
  1597  000428  0E01               	movlw	low _locations
  1598  00042A  26D9               	addwf	fsr2l,f,c
  1599  00042C  0E00               	movlw	high _locations
  1600  00042E  22DA               	addwfc	fsr2h,f,c
  1601  000430  06DF               	decf	indf2,f,c
  1602  000432                     i2l1619:
  1603                           
  1604                           ;main.c: 56:             LCDCmd(0x01);
  1605  000432  0E01               	movlw	1
  1606  000434  ECCC  F003         	call	i2_LCDCmd
  1607  000438                     
  1608                           ;main.c: 57:             setLCD();
  1609  000438  ECBE  F000         	call	i2_setLCD	;wreg free
  1610  00043C                     
  1611                           ;main.c: 59:             INTCONbits.RBIF = 0;
  1612  00043C  90F2               	bcf	242,0,c	;volatile
  1613  00043E                     i2l162:
  1614  00043E  C05F  FFDA         	movff	??_FNC+2,fsr2h
  1615  000442  C05E  FFD9         	movff	??_FNC+1,fsr2l
  1616  000446  926B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1617  000448  0011               	retfie		f
  1618  00044A                     __end_of_FNC:
  1619                           	callstack 0
  1620                           
  1621 ;; *************** function i2_setLCD *****************
  1622 ;; Defined at:
  1623 ;;		line 63 in file "main.c"
  1624 ;; Parameters:    Size  Location     Type
  1625 ;;		None
  1626 ;; Auto vars:     Size  Location     Type
  1627 ;;  i               2    6[COMRAM] unsigned short 
  1628 ;; Return value:  Size  Location     Type
  1629 ;;                  1    wreg      void 
  1630 ;; Registers used:
  1631 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1632 ;; Tracked objects:
  1633 ;;		On entry : 0/0
  1634 ;;		On exit  : 0/0
  1635 ;;		Unchanged: 0/0
  1636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1638 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1639 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1640 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1641 ;;Total ram usage:        4 bytes
  1642 ;; Hardware stack levels used:    1
  1643 ;; Hardware stack levels required when called:    2
  1644 ;; This function calls:
  1645 ;;		i2_LCDDat
  1646 ;;		i2_LCDGoto
  1647 ;; This function is called by:
  1648 ;;		_FNC
  1649 ;; This function uses a non-reentrant model
  1650 ;;
  1651                           
  1652                           	psect	text9
  1653  00017C                     __ptext9:
  1654                           	callstack 0
  1655  00017C                     i2_setLCD:
  1656                           	callstack 24
  1657  00017C                     
  1658                           ;main.c: 65:     for(unsigned short i = 0; i < 5; i++)
  1659  00017C  0E00               	movlw	0
  1660  00017E  6E5C               	movwf	(i2setLCD@i+1)^0,c
  1661  000180  0E00               	movlw	0
  1662  000182  6E5B               	movwf	i2setLCD@i^0,c
  1663  000184                     i2l1461:
  1664                           
  1665                           ;main.c: 66:     {;main.c: 67:         if(selectedChar == i)
  1666  000184  505B               	movf	i2setLCD@i^0,w,c
  1667  000186  1868               	xorwf	_selectedChar^0,w,c
  1668  000188  E107               	bnz	i2u53_41
  1669  00018A  505C               	movf	(i2setLCD@i+1)^0,w,c
  1670  00018C  1869               	xorwf	(_selectedChar+1)^0,w,c
  1671  00018E  A4D8               	btfss	status,2,c
  1672  000190  EFCC  F000         	goto	i2u53_41
  1673  000194  EFCE  F000         	goto	i2u53_40
  1674  000198                     i2u53_41:
  1675  000198  EF11  F001         	goto	i2l1473
  1676  00019C                     i2u53_40:
  1677  00019C                     
  1678                           ;main.c: 68:         {;main.c: 69:             if(i < 2)
  1679  00019C  505C               	movf	(i2setLCD@i+1)^0,w,c
  1680  00019E  E107               	bnz	i2u54_41
  1681  0001A0  0E02               	movlw	2
  1682  0001A2  5C5B               	subwf	i2setLCD@i^0,w,c
  1683  0001A4  B0D8               	btfsc	status,0,c
  1684  0001A6  EFD7  F000         	goto	i2u54_41
  1685  0001AA  EFD9  F000         	goto	i2u54_40
  1686  0001AE                     i2u54_41:
  1687  0001AE  EFF5  F000         	goto	i2l1469
  1688  0001B2                     i2u54_40:
  1689  0001B2                     
  1690                           ;main.c: 70:             {;main.c: 71:                 LCDGoto(locations[i][0],locations
      +                          [i][1]);
  1691  0001B2  90D8               	bcf	status,0,c
  1692  0001B4  345B               	rlcf	i2setLCD@i^0,w,c
  1693  0001B6  6ED9               	movwf	fsr2l,c
  1694  0001B8  345C               	rlcf	(i2setLCD@i+1)^0,w,c
  1695  0001BA  6EDA               	movwf	fsr2h,c
  1696  0001BC  0E02               	movlw	low (_locations+1)
  1697  0001BE  26D9               	addwf	fsr2l,f,c
  1698  0001C0  0E00               	movlw	high (_locations+1)
  1699  0001C2  22DA               	addwfc	fsr2h,f,c
  1700  0001C4  50DF               	movf	indf2,w,c
  1701  0001C6  6E57               	movwf	i2LCDGoto@p_1^0,c
  1702  0001C8  90D8               	bcf	status,0,c
  1703  0001CA  345B               	rlcf	i2setLCD@i^0,w,c
  1704  0001CC  6ED9               	movwf	fsr2l,c
  1705  0001CE  345C               	rlcf	(i2setLCD@i+1)^0,w,c
  1706  0001D0  6EDA               	movwf	fsr2h,c
  1707  0001D2  0E01               	movlw	low _locations
  1708  0001D4  26D9               	addwf	fsr2l,f,c
  1709  0001D6  0E00               	movlw	high _locations
  1710  0001D8  22DA               	addwfc	fsr2h,f,c
  1711  0001DA  50DF               	movf	indf2,w,c
  1712  0001DC  ECC9  F002         	call	i2_LCDGoto
  1713  0001E0                     
  1714                           ;main.c: 72:                 LCDDat(1);
  1715  0001E0  0E01               	movlw	1
  1716  0001E2  EC9B  F003         	call	i2_LCDDat
  1717                           
  1718                           ;main.c: 73:             }
  1719  0001E6  EF65  F001         	goto	i2l1489
  1720  0001EA                     i2l1469:
  1721                           
  1722                           ;main.c: 75:             {;main.c: 76:                 LCDGoto(locations[i][0],locations
      +                          [i][1]);
  1723  0001EA  90D8               	bcf	status,0,c
  1724  0001EC  345B               	rlcf	i2setLCD@i^0,w,c
  1725  0001EE  6ED9               	movwf	fsr2l,c
  1726  0001F0  345C               	rlcf	(i2setLCD@i+1)^0,w,c
  1727  0001F2  6EDA               	movwf	fsr2h,c
  1728  0001F4  0E02               	movlw	low (_locations+1)
  1729  0001F6  26D9               	addwf	fsr2l,f,c
  1730  0001F8  0E00               	movlw	high (_locations+1)
  1731  0001FA  22DA               	addwfc	fsr2h,f,c
  1732  0001FC  50DF               	movf	indf2,w,c
  1733  0001FE  6E57               	movwf	i2LCDGoto@p_1^0,c
  1734  000200  90D8               	bcf	status,0,c
  1735  000202  345B               	rlcf	i2setLCD@i^0,w,c
  1736  000204  6ED9               	movwf	fsr2l,c
  1737  000206  345C               	rlcf	(i2setLCD@i+1)^0,w,c
  1738  000208  6EDA               	movwf	fsr2h,c
  1739  00020A  0E01               	movlw	low _locations
  1740  00020C  26D9               	addwf	fsr2l,f,c
  1741  00020E  0E00               	movlw	high _locations
  1742  000210  22DA               	addwfc	fsr2h,f,c
  1743  000212  50DF               	movf	indf2,w,c
  1744  000214  ECC9  F002         	call	i2_LCDGoto
  1745  000218                     
  1746                           ;main.c: 77:                 LCDDat(4);
  1747  000218  0E04               	movlw	4
  1748  00021A  EC9B  F003         	call	i2_LCDDat
  1749  00021E  EF65  F001         	goto	i2l1489
  1750  000222                     i2l1473:
  1751                           
  1752                           ;main.c: 81:         {;main.c: 82:             LCDGoto(locations[i][0],locations[i][1]);
  1753  000222  90D8               	bcf	status,0,c
  1754  000224  345B               	rlcf	i2setLCD@i^0,w,c
  1755  000226  6ED9               	movwf	fsr2l,c
  1756  000228  345C               	rlcf	(i2setLCD@i+1)^0,w,c
  1757  00022A  6EDA               	movwf	fsr2h,c
  1758  00022C  0E02               	movlw	low (_locations+1)
  1759  00022E  26D9               	addwf	fsr2l,f,c
  1760  000230  0E00               	movlw	high (_locations+1)
  1761  000232  22DA               	addwfc	fsr2h,f,c
  1762  000234  50DF               	movf	indf2,w,c
  1763  000236  6E57               	movwf	i2LCDGoto@p_1^0,c
  1764  000238  90D8               	bcf	status,0,c
  1765  00023A  345B               	rlcf	i2setLCD@i^0,w,c
  1766  00023C  6ED9               	movwf	fsr2l,c
  1767  00023E  345C               	rlcf	(i2setLCD@i+1)^0,w,c
  1768  000240  6EDA               	movwf	fsr2h,c
  1769  000242  0E01               	movlw	low _locations
  1770  000244  26D9               	addwf	fsr2l,f,c
  1771  000246  0E00               	movlw	high _locations
  1772  000248  22DA               	addwfc	fsr2h,f,c
  1773  00024A  50DF               	movf	indf2,w,c
  1774  00024C  ECC9  F002         	call	i2_LCDGoto
  1775                           
  1776                           ;main.c: 83:             switch(i)
  1777  000250  EF43  F001         	goto	i2l1487
  1778  000254                     i2l1475:
  1779                           
  1780                           ;main.c: 86:                     LCDDat(0);
  1781  000254  0E00               	movlw	0
  1782  000256  EC9B  F003         	call	i2_LCDDat
  1783                           
  1784                           ;main.c: 87:                     break;
  1785  00025A  EF65  F001         	goto	i2l1489
  1786  00025E                     i2l1477:
  1787                           
  1788                           ;main.c: 89:                     LCDDat(0);
  1789  00025E  0E00               	movlw	0
  1790  000260  EC9B  F003         	call	i2_LCDDat
  1791                           
  1792                           ;main.c: 90:                     break;
  1793  000264  EF65  F001         	goto	i2l1489
  1794  000268                     i2l1479:
  1795                           
  1796                           ;main.c: 92:                     LCDDat(3);
  1797  000268  0E03               	movlw	3
  1798  00026A  EC9B  F003         	call	i2_LCDDat
  1799                           
  1800                           ;main.c: 93:                     break;
  1801  00026E  EF65  F001         	goto	i2l1489
  1802  000272                     i2l1481:
  1803                           
  1804                           ;main.c: 95:                     LCDDat(3);
  1805  000272  0E03               	movlw	3
  1806  000274  EC9B  F003         	call	i2_LCDDat
  1807                           
  1808                           ;main.c: 96:                     break;
  1809  000278  EF65  F001         	goto	i2l1489
  1810  00027C                     i2l1483:
  1811                           
  1812                           ;main.c: 98:                     LCDDat(6);
  1813  00027C  0E06               	movlw	6
  1814  00027E  EC9B  F003         	call	i2_LCDDat
  1815                           
  1816                           ;main.c: 99:                     break;
  1817  000282  EF65  F001         	goto	i2l1489
  1818  000286                     i2l1487:
  1819  000286  C05B  F059         	movff	i2setLCD@i,??i2_setLCD
  1820  00028A  C05C  F05A         	movff	i2setLCD@i+1,??i2_setLCD+1
  1821                           
  1822                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1823                           ; Switch size 1, requested type "simple"
  1824                           ; Number of cases is 1, Range of values is 0 to 0
  1825                           ; switch strategies available:
  1826                           ; Name         Instructions Cycles
  1827                           ; simple_byte            4     3 (average)
  1828                           ;	Chosen strategy is simple_byte
  1829  00028E  505A               	movf	(??i2_setLCD+1)^0,w,c
  1830  000290  0A00               	xorlw	0	; case 0
  1831  000292  B4D8               	btfsc	status,2,c
  1832  000294  EF4E  F001         	goto	i2l1929
  1833  000298  EF65  F001         	goto	i2l1489
  1834  00029C                     i2l1929:
  1835                           
  1836                           ; Switch size 1, requested type "simple"
  1837                           ; Number of cases is 5, Range of values is 0 to 4
  1838                           ; switch strategies available:
  1839                           ; Name         Instructions Cycles
  1840                           ; simple_byte           16     9 (average)
  1841                           ;	Chosen strategy is simple_byte
  1842  00029C  5059               	movf	??i2_setLCD^0,w,c
  1843  00029E  0A00               	xorlw	0	; case 0
  1844  0002A0  B4D8               	btfsc	status,2,c
  1845  0002A2  EF2A  F001         	goto	i2l1475
  1846  0002A6  0A01               	xorlw	1	; case 1
  1847  0002A8  B4D8               	btfsc	status,2,c
  1848  0002AA  EF2F  F001         	goto	i2l1477
  1849  0002AE  0A03               	xorlw	3	; case 2
  1850  0002B0  B4D8               	btfsc	status,2,c
  1851  0002B2  EF34  F001         	goto	i2l1479
  1852  0002B6  0A01               	xorlw	1	; case 3
  1853  0002B8  B4D8               	btfsc	status,2,c
  1854  0002BA  EF39  F001         	goto	i2l1481
  1855  0002BE  0A07               	xorlw	7	; case 4
  1856  0002C0  B4D8               	btfsc	status,2,c
  1857  0002C2  EF3E  F001         	goto	i2l1483
  1858  0002C6  EF65  F001         	goto	i2l1489
  1859  0002CA                     i2l1489:
  1860                           
  1861                           ;main.c: 102:     }
  1862  0002CA  4A5B               	infsnz	i2setLCD@i^0,f,c
  1863  0002CC  2A5C               	incf	(i2setLCD@i+1)^0,f,c
  1864  0002CE  505C               	movf	(i2setLCD@i+1)^0,w,c
  1865  0002D0  E109               	bnz	i2u55_40
  1866  0002D2  0E05               	movlw	5
  1867  0002D4  5C5B               	subwf	i2setLCD@i^0,w,c
  1868  0002D6  A0D8               	btfss	status,0,c
  1869  0002D8  EF70  F001         	goto	i2u55_41
  1870  0002DC  EF72  F001         	goto	i2u55_40
  1871  0002E0                     i2u55_41:
  1872  0002E0  EFC2  F000         	goto	i2l1461
  1873  0002E4                     i2u55_40:
  1874  0002E4  0012               	return		;funcret
  1875  0002E6                     __end_ofi2_setLCD:
  1876                           	callstack 0
  1877                           
  1878 ;; *************** function i2_LCDGoto *****************
  1879 ;; Defined at:
  1880 ;;		line 72 in file "./lcd.h"
  1881 ;; Parameters:    Size  Location     Type
  1882 ;;  p_2             1    wreg     unsigned char 
  1883 ;;  p_1             1    2[COMRAM] unsigned char 
  1884 ;; Auto vars:     Size  Location     Type
  1885 ;;  p_2             1    3[COMRAM] unsigned char 
  1886 ;; Return value:  Size  Location     Type
  1887 ;;                  1    wreg      void 
  1888 ;; Registers used:
  1889 ;;		wreg, status,2, status,0, cstack
  1890 ;; Tracked objects:
  1891 ;;		On entry : 0/0
  1892 ;;		On exit  : 0/0
  1893 ;;		Unchanged: 0/0
  1894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1895 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1896 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1898 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1899 ;;Total ram usage:        2 bytes
  1900 ;; Hardware stack levels used:    1
  1901 ;; Hardware stack levels required when called:    1
  1902 ;; This function calls:
  1903 ;;		i2_LCDCmd
  1904 ;; This function is called by:
  1905 ;;		i2_setLCD
  1906 ;; This function uses a non-reentrant model
  1907 ;;
  1908                           
  1909                           	psect	text10
  1910  000592                     __ptext10:
  1911                           	callstack 0
  1912  000592                     i2_LCDGoto:
  1913                           	callstack 24
  1914                           
  1915                           ;incstack = 0
  1916                           ;i2LCDGoto@p_2 stored from wreg
  1917  000592  6E58               	movwf	i2LCDGoto@p_2^0,c
  1918  000594                     
  1919                           ;./lcd.h: 73:   if(p_1==1) {
  1920  000594  0457               	decf	i2LCDGoto@p_1^0,w,c
  1921  000596  A4D8               	btfss	status,2,c
  1922  000598  EFD0  F002         	goto	i2u46_41
  1923  00059C  EFD2  F002         	goto	i2u46_40
  1924  0005A0                     i2u46_41:
  1925  0005A0  EFD9  F002         	goto	i2l1363
  1926  0005A4                     i2u46_40:
  1927  0005A4                     
  1928                           ;./lcd.h: 74:     LCDCmd(0x80 +((p_2-1)%16));
  1929  0005A4  0458               	decf	i2LCDGoto@p_2^0,w,c
  1930  0005A6  0B0F               	andlw	15
  1931  0005A8  0F80               	addlw	128
  1932  0005AA  ECCC  F003         	call	i2_LCDCmd
  1933                           
  1934                           ;./lcd.h: 75:   }
  1935  0005AE  EFFE  F002         	goto	i2l1373
  1936  0005B2                     i2l1363:
  1937  0005B2  0E02               	movlw	2
  1938  0005B4  1857               	xorwf	i2LCDGoto@p_1^0,w,c
  1939  0005B6  A4D8               	btfss	status,2,c
  1940  0005B8  EFE0  F002         	goto	i2u47_41
  1941  0005BC  EFE2  F002         	goto	i2u47_40
  1942  0005C0                     i2u47_41:
  1943  0005C0  EFE9  F002         	goto	i2l1367
  1944  0005C4                     i2u47_40:
  1945  0005C4                     
  1946                           ;./lcd.h: 77:     LCDCmd(0xC0 +((p_2-1)%16));
  1947  0005C4  0458               	decf	i2LCDGoto@p_2^0,w,c
  1948  0005C6  0B0F               	andlw	15
  1949  0005C8  0FC0               	addlw	192
  1950  0005CA  ECCC  F003         	call	i2_LCDCmd
  1951                           
  1952                           ;./lcd.h: 78:   }
  1953  0005CE  EFFE  F002         	goto	i2l1373
  1954  0005D2                     i2l1367:
  1955  0005D2  0E03               	movlw	3
  1956  0005D4  1857               	xorwf	i2LCDGoto@p_1^0,w,c
  1957  0005D6  A4D8               	btfss	status,2,c
  1958  0005D8  EFF0  F002         	goto	i2u48_41
  1959  0005DC  EFF2  F002         	goto	i2u48_40
  1960  0005E0                     i2u48_41:
  1961  0005E0  EFF9  F002         	goto	i2l1371
  1962  0005E4                     i2u48_40:
  1963  0005E4                     
  1964                           ;./lcd.h: 80:     LCDCmd(0x90 +((p_2-1)%16));
  1965  0005E4  0458               	decf	i2LCDGoto@p_2^0,w,c
  1966  0005E6  0B0F               	andlw	15
  1967  0005E8  0F90               	addlw	144
  1968  0005EA  ECCC  F003         	call	i2_LCDCmd
  1969                           
  1970                           ;./lcd.h: 81:   }
  1971  0005EE  EFFE  F002         	goto	i2l1373
  1972  0005F2                     i2l1371:
  1973                           
  1974                           ;./lcd.h: 83:     LCDCmd(0xD0 +((p_2-1)%16));
  1975  0005F2  0458               	decf	i2LCDGoto@p_2^0,w,c
  1976  0005F4  0B0F               	andlw	15
  1977  0005F6  0FD0               	addlw	208
  1978  0005F8  ECCC  F003         	call	i2_LCDCmd
  1979  0005FC                     i2l1373:
  1980                           
  1981                           ;./lcd.h: 85:   lcd_x = p_2;
  1982  0005FC  C058  F014         	movff	i2LCDGoto@p_2,_lcd_x
  1983  000600                     
  1984                           ;./lcd.h: 86:   lcd_y = p_1;
  1985  000600  C057  F013         	movff	i2LCDGoto@p_1,_lcd_y
  1986  000604  0012               	return		;funcret
  1987  000606                     __end_ofi2_LCDGoto:
  1988                           	callstack 0
  1989                           
  1990 ;; *************** function i2_LCDCmd *****************
  1991 ;; Defined at:
  1992 ;;		line 48 in file "./lcd.h"
  1993 ;; Parameters:    Size  Location     Type
  1994 ;;  cmd             1    wreg     unsigned char 
  1995 ;; Auto vars:     Size  Location     Type
  1996 ;;  cmd             1    1[COMRAM] unsigned char 
  1997 ;; Return value:  Size  Location     Type
  1998 ;;                  1    wreg      void 
  1999 ;; Registers used:
  2000 ;;		wreg
  2001 ;; Tracked objects:
  2002 ;;		On entry : 0/0
  2003 ;;		On exit  : 0/0
  2004 ;;		Unchanged: 0/0
  2005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2007 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2008 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2009 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2010 ;;Total ram usage:        2 bytes
  2011 ;; Hardware stack levels used:    1
  2012 ;; This function calls:
  2013 ;;		Nothing
  2014 ;; This function is called by:
  2015 ;;		_FNC
  2016 ;;		i2_LCDGoto
  2017 ;; This function uses a non-reentrant model
  2018 ;;
  2019                           
  2020                           	psect	text11
  2021  000798                     __ptext11:
  2022                           	callstack 0
  2023  000798                     i2_LCDCmd:
  2024                           	callstack 24
  2025                           
  2026                           ;incstack = 0
  2027                           ;i2LCDCmd@cmd stored from wreg
  2028  000798  6E56               	movwf	i2LCDCmd@cmd^0,c
  2029  00079A                     
  2030                           ;./lcd.h: 49:   PORTEbits.RE1 = 0;
  2031  00079A  9284               	bcf	132,1,c	;volatile
  2032                           
  2033                           ;./lcd.h: 50:   PORTEbits.RE2 = 0;
  2034  00079C  9484               	bcf	132,2,c	;volatile
  2035  00079E                     
  2036                           ;./lcd.h: 51:   PORTD = cmd;
  2037  00079E  C056  FF83         	movff	i2LCDCmd@cmd,3971	;volatile
  2038  0007A2                     
  2039                           ;./lcd.h: 52:   PORTEbits.RE1 = 1;
  2040  0007A2  8284               	bsf	132,1,c	;volatile
  2041  0007A4                     
  2042                           ;./lcd.h: 53:   _delay((unsigned long)((2000)*(40000000L/4000000.0)));
  2043  0007A4  0E1A               	movlw	26
  2044  0007A6  6E55               	movwf	??i2_LCDCmd^0,c
  2045  0007A8  0EF8               	movlw	248
  2046  0007AA                     i2u100_47:
  2047  0007AA  2EE8               	decfsz	wreg,f,c
  2048  0007AC  D7FE               	bra	i2u100_47
  2049  0007AE  2E55               	decfsz	??i2_LCDCmd^0,f,c
  2050  0007B0  D7FC               	bra	i2u100_47
  2051  0007B2  D000               	nop2	
  2052  0007B4                     
  2053                           ;./lcd.h: 54:   PORTEbits.RE1 = 0;
  2054  0007B4  9284               	bcf	132,1,c	;volatile
  2055  0007B6                     
  2056                           ;./lcd.h: 55:   _delay((unsigned long)((2000)*(40000000L/4000000.0)));
  2057  0007B6  0E1A               	movlw	26
  2058  0007B8  6E55               	movwf	??i2_LCDCmd^0,c
  2059  0007BA  0EF8               	movlw	248
  2060  0007BC                     i2u101_47:
  2061  0007BC  2EE8               	decfsz	wreg,f,c
  2062  0007BE  D7FE               	bra	i2u101_47
  2063  0007C0  2E55               	decfsz	??i2_LCDCmd^0,f,c
  2064  0007C2  D7FC               	bra	i2u101_47
  2065  0007C4  D000               	nop2	
  2066  0007C6  0012               	return		;funcret
  2067  0007C8                     __end_ofi2_LCDCmd:
  2068                           	callstack 0
  2069                           
  2070 ;; *************** function i2_LCDDat *****************
  2071 ;; Defined at:
  2072 ;;		line 58 in file "./lcd.h"
  2073 ;; Parameters:    Size  Location     Type
  2074 ;;  dat             1    wreg     unsigned char 
  2075 ;; Auto vars:     Size  Location     Type
  2076 ;;  dat             1    1[COMRAM] unsigned char 
  2077 ;; Return value:  Size  Location     Type
  2078 ;;                  1    wreg      void 
  2079 ;; Registers used:
  2080 ;;		wreg
  2081 ;; Tracked objects:
  2082 ;;		On entry : 0/0
  2083 ;;		On exit  : 0/0
  2084 ;;		Unchanged: 0/0
  2085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2087 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2088 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2089 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2090 ;;Total ram usage:        2 bytes
  2091 ;; Hardware stack levels used:    1
  2092 ;; This function calls:
  2093 ;;		Nothing
  2094 ;; This function is called by:
  2095 ;;		i2_setLCD
  2096 ;; This function uses a non-reentrant model
  2097 ;;
  2098                           
  2099                           	psect	text12
  2100  000736                     __ptext12:
  2101                           	callstack 0
  2102  000736                     i2_LCDDat:
  2103                           	callstack 25
  2104                           
  2105                           ;incstack = 0
  2106                           ;i2LCDDat@dat stored from wreg
  2107  000736  6E56               	movwf	i2LCDDat@dat^0,c
  2108  000738                     
  2109                           ;./lcd.h: 59:   PORTEbits.RE1 = 0;
  2110  000738  9284               	bcf	132,1,c	;volatile
  2111                           
  2112                           ;./lcd.h: 60:   PORTEbits.RE2 = 1;
  2113  00073A  8484               	bsf	132,2,c	;volatile
  2114  00073C                     
  2115                           ;./lcd.h: 61:   PORTD = dat;
  2116  00073C  C056  FF83         	movff	i2LCDDat@dat,3971	;volatile
  2117  000740                     
  2118                           ;./lcd.h: 62:   PORTEbits.RE1 = 1;
  2119  000740  8284               	bsf	132,1,c	;volatile
  2120  000742                     
  2121                           ;./lcd.h: 63:   _delay((unsigned long)((2000)*(40000000L/4000000.0)));
  2122  000742  0E1A               	movlw	26
  2123  000744  6E55               	movwf	??i2_LCDDat^0,c
  2124  000746  0EF8               	movlw	248
  2125  000748                     i2u102_47:
  2126  000748  2EE8               	decfsz	wreg,f,c
  2127  00074A  D7FE               	bra	i2u102_47
  2128  00074C  2E55               	decfsz	??i2_LCDDat^0,f,c
  2129  00074E  D7FC               	bra	i2u102_47
  2130  000750  D000               	nop2	
  2131  000752                     
  2132                           ;./lcd.h: 64:   PORTEbits.RE1 = 0;
  2133  000752  9284               	bcf	132,1,c	;volatile
  2134  000754                     
  2135                           ;./lcd.h: 65:   _delay((unsigned long)((2000)*(40000000L/4000000.0)));
  2136  000754  0E1A               	movlw	26
  2137  000756  6E55               	movwf	??i2_LCDDat^0,c
  2138  000758  0EF8               	movlw	248
  2139  00075A                     i2u103_47:
  2140  00075A  2EE8               	decfsz	wreg,f,c
  2141  00075C  D7FE               	bra	i2u103_47
  2142  00075E  2E55               	decfsz	??i2_LCDDat^0,f,c
  2143  000760  D7FC               	bra	i2u103_47
  2144  000762  D000               	nop2	
  2145  000764                     
  2146                           ;./lcd.h: 66:   PORTEbits.RE2 = 0;
  2147  000764  9484               	bcf	132,2,c	;volatile
  2148  000766  0012               	return		;funcret
  2149  000768                     __end_ofi2_LCDDat:
  2150                           	callstack 0
  2151  0000                     
  2152                           	psect	rparam
  2153  0000                     
  2154                           	psect	temp
  2155  00006B                     btemp:
  2156                           	callstack 0
  2157  00006B                     	ds	1
  2158  0000                     int$flags	set	btemp
  2159  0000                     wtemp8	set	btemp+1
  2160  0000                     ttemp5	set	btemp+1
  2161  0000                     ttemp6	set	btemp+4
  2162  0000                     ttemp7	set	btemp+8
  2163                           
  2164                           	psect	idloc
  2165                           
  2166                           ;Config register IDLOC0 @ 0x200000
  2167                           ;	unspecified, using default values
  2168  200000                     	org	2097152
  2169  200000  FF                 	db	255
  2170                           
  2171                           ;Config register IDLOC1 @ 0x200001
  2172                           ;	unspecified, using default values
  2173  200001                     	org	2097153
  2174  200001  FF                 	db	255
  2175                           
  2176                           ;Config register IDLOC2 @ 0x200002
  2177                           ;	unspecified, using default values
  2178  200002                     	org	2097154
  2179  200002  FF                 	db	255
  2180                           
  2181                           ;Config register IDLOC3 @ 0x200003
  2182                           ;	unspecified, using default values
  2183  200003                     	org	2097155
  2184  200003  FF                 	db	255
  2185                           
  2186                           ;Config register IDLOC4 @ 0x200004
  2187                           ;	unspecified, using default values
  2188  200004                     	org	2097156
  2189  200004  FF                 	db	255
  2190                           
  2191                           ;Config register IDLOC5 @ 0x200005
  2192                           ;	unspecified, using default values
  2193  200005                     	org	2097157
  2194  200005  FF                 	db	255
  2195                           
  2196                           ;Config register IDLOC6 @ 0x200006
  2197                           ;	unspecified, using default values
  2198  200006                     	org	2097158
  2199  200006  FF                 	db	255
  2200                           
  2201                           ;Config register IDLOC7 @ 0x200007
  2202                           ;	unspecified, using default values
  2203  200007                     	org	2097159
  2204  200007  FF                 	db	255
  2205                           
  2206                           	psect	config
  2207                           
  2208                           ; Padding undefined space
  2209  300000                     	org	3145728
  2210  300000  FF                 	db	255
  2211                           
  2212                           ;Config register CONFIG1H @ 0x300001
  2213                           ;	Oscillator Selection bits
  2214                           ;	OSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  2215                           ;	Fail-Safe Clock Monitor Enable bit
  2216                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2217                           ;	Internal/External Oscillator Switchover bit
  2218                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2219  300001                     	org	3145729
  2220  300001  08                 	db	8
  2221                           
  2222                           ;Config register CONFIG2L @ 0x300002
  2223                           ;	Power-up Timer Enable bit
  2224                           ;	PWRT = OFF, PWRT disabled
  2225                           ;	Brown-out Reset Enable bits
  2226                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  2227                           ;	Brown Out Reset Voltage bits
  2228                           ;	BORV = 3, Minimum setting
  2229  300002                     	org	3145730
  2230  300002  1F                 	db	31
  2231                           
  2232                           ;Config register CONFIG2H @ 0x300003
  2233                           ;	Watchdog Timer Enable bit
  2234                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2235                           ;	Watchdog Timer Postscale Select bits
  2236                           ;	WDTPS = 32768, 1:32768
  2237  300003                     	org	3145731
  2238  300003  1E                 	db	30
  2239                           
  2240                           ; Padding undefined space
  2241  300004                     	org	3145732
  2242  300004  FF                 	db	255
  2243                           
  2244                           ;Config register CONFIG3H @ 0x300005
  2245                           ;	CCP2 MUX bit
  2246                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  2247                           ;	PORTB A/D Enable bit
  2248                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  2249                           ;	Low-Power Timer1 Oscillator Enable bit
  2250                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2251                           ;	MCLR Pin Enable bit
  2252                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2253  300005                     	org	3145733
  2254  300005  83                 	db	131
  2255                           
  2256                           ;Config register CONFIG4L @ 0x300006
  2257                           ;	Stack Full/Underflow Reset Enable bit
  2258                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2259                           ;	Single-Supply ICSP Enable bit
  2260                           ;	LVP = OFF, Single-Supply ICSP disabled
  2261                           ;	Extended Instruction Set Enable bit
  2262                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2263                           ;	Background Debugger Enable bit
  2264                           ;	DEBUG = 0x1, unprogrammed default
  2265  300006                     	org	3145734
  2266  300006  81                 	db	129
  2267                           
  2268                           ; Padding undefined space
  2269  300007                     	org	3145735
  2270  300007  FF                 	db	255
  2271                           
  2272                           ;Config register CONFIG5L @ 0x300008
  2273                           ;	Code Protection bit
  2274                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  2275                           ;	Code Protection bit
  2276                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  2277                           ;	Code Protection bit
  2278                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  2279                           ;	Code Protection bit
  2280                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  2281  300008                     	org	3145736
  2282  300008  0F                 	db	15
  2283                           
  2284                           ;Config register CONFIG5H @ 0x300009
  2285                           ;	Boot Block Code Protection bit
  2286                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  2287                           ;	Data EEPROM Code Protection bit
  2288                           ;	CPD = OFF, Data EEPROM not code-protected
  2289  300009                     	org	3145737
  2290  300009  C0                 	db	192
  2291                           
  2292                           ;Config register CONFIG6L @ 0x30000A
  2293                           ;	Write Protection bit
  2294                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  2295                           ;	Write Protection bit
  2296                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  2297                           ;	Write Protection bit
  2298                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  2299                           ;	Write Protection bit
  2300                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  2301  30000A                     	org	3145738
  2302  30000A  0F                 	db	15
  2303                           
  2304                           ;Config register CONFIG6H @ 0x30000B
  2305                           ;	Configuration Register Write Protection bit
  2306                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2307                           ;	Boot Block Write Protection bit
  2308                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  2309                           ;	Data EEPROM Write Protection bit
  2310                           ;	WRTD = OFF, Data EEPROM not write-protected
  2311  30000B                     	org	3145739
  2312  30000B  E0                 	db	224
  2313                           
  2314                           ;Config register CONFIG7L @ 0x30000C
  2315                           ;	Table Read Protection bit
  2316                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  2317                           ;	Table Read Protection bit
  2318                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2319                           ;	Table Read Protection bit
  2320                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  2321                           ;	Table Read Protection bit
  2322                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  2323  30000C                     	org	3145740
  2324  30000C  0F                 	db	15
  2325                           
  2326                           ;Config register CONFIG7H @ 0x30000D
  2327                           ;	Boot Block Table Read Protection bit
  2328                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  2329  30000D                     	org	3145741
  2330  30000D  40                 	db	64
  2331                           tosu	equ	0xFFF
  2332                           tosh	equ	0xFFE
  2333                           tosl	equ	0xFFD
  2334                           stkptr	equ	0xFFC
  2335                           pclatu	equ	0xFFB
  2336                           pclath	equ	0xFFA
  2337                           pcl	equ	0xFF9
  2338                           tblptru	equ	0xFF8
  2339                           tblptrh	equ	0xFF7
  2340                           tblptrl	equ	0xFF6
  2341                           tablat	equ	0xFF5
  2342                           prodh	equ	0xFF4
  2343                           prodl	equ	0xFF3
  2344                           indf0	equ	0xFEF
  2345                           postinc0	equ	0xFEE
  2346                           postdec0	equ	0xFED
  2347                           preinc0	equ	0xFEC
  2348                           plusw0	equ	0xFEB
  2349                           fsr0h	equ	0xFEA
  2350                           fsr0l	equ	0xFE9
  2351                           wreg	equ	0xFE8
  2352                           indf1	equ	0xFE7
  2353                           postinc1	equ	0xFE6
  2354                           postdec1	equ	0xFE5
  2355                           preinc1	equ	0xFE4
  2356                           plusw1	equ	0xFE3
  2357                           fsr1h	equ	0xFE2
  2358                           fsr1l	equ	0xFE1
  2359                           bsr	equ	0xFE0
  2360                           indf2	equ	0xFDF
  2361                           postinc2	equ	0xFDE
  2362                           postdec2	equ	0xFDD
  2363                           preinc2	equ	0xFDC
  2364                           plusw2	equ	0xFDB
  2365                           fsr2h	equ	0xFDA
  2366                           fsr2l	equ	0xFD9
  2367                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        84
    BSS         73
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     19     106
    BANK0           128     12      82
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    LCDAddSpecialCharacter@data	PTR unsigned char  size(2) Largest target is 8
		 -> frisbee_target(COMRAM[8]), frisbee(COMRAM[8]), selected_teamB_player_with_frisbee(COMRAM[8]), selected_teamB_player(COMRAM[8]), 
		 -> teamB_player(COMRAM[8]), selected_teamA_player_with_frisbee(COMRAM[8]), selected_teamA_player(COMRAM[8]), teamA_player(COMRAM[8]), 


Critical Paths under _main in COMRAM

    _main->_setLCD
    _setLCD->_LCDGoto
    _LCDGoto->_LCDCmd
    _LCDAddSpecialCharacter->_LCDCmd
    _LCDAddSpecialCharacter->_LCDDat
    _InitLCD->_LCDCmd

Critical Paths under _FNC in COMRAM

    _FNC->i2_setLCD
    i2_setLCD->i2_LCDGoto
    i2_LCDGoto->i2_LCDCmd

Critical Paths under _main in BANK0

    None.

Critical Paths under _FNC in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _FNC in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _FNC in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _FNC in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _FNC in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _FNC in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _FNC in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _FNC in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _FNC in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _FNC in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _FNC in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _FNC in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _FNC in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _FNC in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _FNC in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _FNC in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0    1969
                                              0 BANK0     12    12      0
                            _InitLCD
             _LCDAddSpecialCharacter
                             _LCDCmd
                            _initADC
                             _setLCD
 ---------------------------------------------------------------------------------
 (1) _setLCD                                               4     4      0     958
                                             15 COMRAM     4     4      0
                             _LCDDat
                            _LCDGoto
 ---------------------------------------------------------------------------------
 (2) _LCDGoto                                              2     1      1     580
                                             13 COMRAM     2     1      1
                             _LCDCmd
 ---------------------------------------------------------------------------------
 (1) _initADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCDAddSpecialCharacter                               4     2      2     943
                                             13 COMRAM     4     2      2
                             _LCDCmd
                             _LCDDat
 ---------------------------------------------------------------------------------
 (2) _LCDDat                                               2     2      0      31
                                             11 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _InitLCD                                              0     0      0      31
                             _LCDCmd
 ---------------------------------------------------------------------------------
 (3) _LCDCmd                                               2     2      0      31
                                             11 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _FNC                                                  3     3      0     586
                                              8 COMRAM     3     3      0
                           i2_LCDCmd
                           i2_setLCD
 ---------------------------------------------------------------------------------
 (5) i2_setLCD                                             4     4      0     564
                                              4 COMRAM     4     4      0
                           i2_LCDDat
                          i2_LCDGoto
 ---------------------------------------------------------------------------------
 (6) i2_LCDGoto                                            2     1      1     298
                                              2 COMRAM     2     1      1
                           i2_LCDCmd
 ---------------------------------------------------------------------------------
 (7) i2_LCDCmd                                             2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (6) i2_LCDDat                                             2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitLCD
     _LCDCmd
   _LCDAddSpecialCharacter
     _LCDCmd
     _LCDDat
   _LCDCmd
   _initADC
   _setLCD
     _LCDDat
     _LCDGoto
       _LCDCmd

 _FNC (ROOT)
   i2_LCDCmd
   i2_setLCD
     i2_LCDDat
     i2_LCDGoto
       i2_LCDCmd

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      C      52       5       64.1%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     13      6A       1       84.1%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      BC      34        0.0%
DATA                 0      0      BC       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Wed May 24 14:58:25 2023

                                   l52 0796                                     l45 07EA  
                                   l55 0702                                     l80 06D0  
                                   l64 0590                                     l75 0734  
           LCDAddSpecialCharacter@data 0062  LCDAddSpecialCharacter@character_index 0064  
                                  l178 017A                                    _FNC 0008  
                                  u900 017A                                    u901 0176  
                                  u840 0530                                    u841 052C  
                                  u850 0550                                    u851 054C  
                                  u860 0570                                    u861 056C  
                                  u941 04C8                                    u870 06D0  
                                  u950 0508                                    u871 06CC  
                                  u951 0504                                    u880 0032  
                                  u881 002E                                    u890 0048  
                                  u891 0044                                    u967 06E4  
                                  u977 06F6                                    u987 077A  
                                  u997 078C                                    wreg 000FE8  
                      __end_of_LCDGoto 0592                                   ?_FNC 0055  
                                 l1711 0774                                   l1713 0784  
                                 l1705 076A                                   l1721 06DC  
                                 l1801 00AE                                   l1715 0786  
                                 l1707 076E                                   l1723 06DE  
                                 l1731 0520                                   l1811 0108  
                                 l1803 00B8                                   l1709 0772  
                                 l1725 06EE                                   l1717 06D4  
                                 l1741 0570                                   l1733 0530  
                                 l1821 0164                                   l1813 0112  
                                 l1805 00EA                                   l1901 04EC  
                                 l1751 0704                                   l1727 06F0  
                                 l1719 06D8                                   l1743 057E  
                                 l1735 053E                                   l1807 00F4  
                                 l1911 04F8                                   l1903 04EE  
                                 l1761 0716                                   l1753 0708  
                                 l1729 0700                                   l1737 0550  
                                 l1745 0588                                   l1809 00FE  
                                 l1817 011C                                   l1913 0508  
                                 l1905 04F0                                   l1763 071C  
                                 l1755 070C                                   l1771 069C  
                                 l1747 058C                                   l1739 055E  
                                 l1819 0160                                   l1915 050E  
                                 l1907 04F2                                   l1851 0452  
                                 l1765 0722                                   l1757 070E  
                                 l1781 06BE                                   l1773 06A8  
                                 l1749 07C8                                   l1917 0512  
                                 l1909 04F4                                   l1861 0498  
                                 l1853 0460                                   l1767 0728  
                                 l1759 0710                                   l1783 06C0  
                                 l1927 0132                                   l1791 001A  
                                 l1871 04CE                                   l1863 04A6  
                                 l1855 046E                                   l1847 044A  
                                 l1769 072E                                   l1793 0032  
                                 l1785 0012                                   l1881 04D8  
                                 l1873 04D0                                   l1865 04B4  
                                 l1857 047C                                   l1849 044E  
                                 l1779 06AC                                   l1795 0048  
                                 l1891 04E2                                   l1883 04DA  
                                 l1875 04D2                                   l1867 04C2  
                                 l1859 048A                                   l1797 0076  
                                 l1893 04E4                                   l1885 04DC  
                                 l1877 04D4                                   l1869 04CE  
                                 l1799 0080                                   l1895 04E6  
                                 l1887 04DE                                   l1879 04D6  
                                 l1897 04E8                                   l1889 04E0  
                                 l1899 04EA                                   i2l52 07C6  
                                 i2l55 0766                                   i2l64 0604  
                                 _main 044A                                   fsr2h 000FDA  
                                 indf2 000FDF                                   fsr1l 000FE1  
                                 fsr2l 000FD9                                   btemp 006B  
                                 prodl 000FF3                                   start 000E  
                         ___param_bank 000000                        __end_of_InitLCD 0736  
                                ??_FNC 005D                     __size_ofi2_LCDGoto 0074  
                                ?_main 0055                       __end_ofi2_LCDDat 0768  
                     __end_ofi2_LCDCmd 07C8                                  i2l151 035A  
                                i2l154 03A4                                  i2l162 043E  
                                i2l157 03EE                                  i2l178 02E4  
                                _PORTD 000F83                                  _TRISD 000F95  
                      __end_of_initADC 07EC                                  _lcd_x 0014  
                                _lcd_y 0013                                  tablat 000FF5  
                                ttemp5 006C                                  ttemp6 006F  
                                ttemp7 0073                                  status 000FD8  
                                wtemp8 006C                       __end_ofi2_setLCD 02E6  
                      __initialization 065A                           __end_of_main 051E  
                               ??_main 0068                          __activetblptr 000002  
                            ??_LCDGoto 0063                                 _ADRESH 000FC4  
                               _ADRESL 000FC3                                 _LCDDat 06D2  
                               _LCDCmd 0768                      __end_ofi2_LCDGoto 0606  
                               i2l1301 079A                                 i2l1311 07B6  
                               i2l1303 079E                                 i2l1305 07A2  
                               i2l1307 07A4                                 i2l1309 07B4  
                               i2l1351 0742                                 i2l1353 0752  
                               i2l1345 0738                                 i2l1361 05A4  
                               i2l1601 0312                                 i2l1355 0754  
                               i2l1347 073C                                 i2l1371 05F2  
                               i2l1363 05B2                                 i2l1611 03B2  
                               i2l1603 0320                                 i2l1357 0764  
                               i2l1349 0740                                 i2l1365 05C4  
                               i2l1373 05FC                                 i2l1461 0184  
                               i2l1621 0438                                 i2l1613 03D6  
                               i2l1605 0342                                 i2l1375 0600  
                               i2l1367 05D2                                 i2l1359 0594  
                               i2l1471 0218                                 i2l1463 019C  
                               i2l1455 017C                                 i2l1623 043C  
                               i2l1615 03FC                                 i2l1607 0368  
                               i2l1369 05E4                                 i2l1481 0272  
                               i2l1465 01B2                                 i2l1473 0222  
                               i2l1617 041E                                 i2l1609 038C  
                               i2l1491 02CE                                 i2l1483 027C  
                               i2l1475 0254                                 i2l1467 01E0  
                               i2l1619 0432                                 i2l1477 025E  
                               i2l1469 01EA                                 i2l1479 0268  
                               i2l1487 0286                                 i2l1489 02CA  
                               i2l1593 02F0                                 i2l1595 02FE  
                               i2l1597 0302                                 i2l1599 0304  
                               i2l1929 029C                              ??_InitLCD 0062  
                               _setLCD 0012                                 clear_0 0680  
                            ??_initADC 0060                           __pdataCOMRAM 0001  
                        _frisbee_steps 0080                                 tblptrh 000FF7  
                               tblptrl 000FF6                                 tblptru 000FF8  
                            LCDDat@dat 0061                              LCDCmd@cmd 0061  
                           __accesstop 0080                __end_of__initialization 068C  
                        ___rparam_used 000001                              ?i2_LCDDat 0055  
                            ?i2_LCDCmd 0055                         __pcstackCOMRAM 0055  
             ??_LCDAddSpecialCharacter 0064                              ?i2_setLCD 0055  
                              ?_LCDDat 0055                                ?_LCDCmd 0055  
                           __pbssBANK0 0080                           i2LCDGoto@p_1 0057  
                         i2LCDGoto@p_2 0058                             ??i2_LCDDat 0055  
                           ??i2_LCDCmd 0055                                ?_setLCD 0055  
                              _CONVERT 006A                                _LCDGoto 051E  
                           ??i2_setLCD 0059                                i2u53_40 019C  
                              i2u53_41 0198                                i2u46_40 05A4  
                              i2u54_40 01B2                                i2u46_41 05A0  
                              i2u54_41 01AE                                i2u47_40 05C4  
                              i2u55_40 02E4                                i2u47_41 05C0  
                              i2u55_41 02E0                                i2u48_40 05E4  
                              i2u80_40 03FC                                i2u72_40 02FE  
                              i2u48_41 05E0                                i2u80_41 03F8  
                              i2u72_41 02FA                                i2u81_40 041E  
                              i2u73_40 0312                                i2u81_41 041A  
                              i2u73_41 030E                                i2u74_40 0320  
                              i2u74_41 031C                                i2u75_40 0342  
                              i2u75_41 033E                                i2u76_40 0368  
                              i2u76_41 0364                                i2u77_40 038C  
                              i2u77_41 0388                                i2u78_40 03B2  
                              i2u78_41 03AE                                i2u79_40 03D6  
                              i2u79_41 03D2                        __size_of_LCDDat 0032  
                      __size_of_LCDCmd 0030                                _InitLCD 0704  
                              __Hparam 0000                                __Lparam 0000  
      __size_of_LCDAddSpecialCharacter 0038                                __pcinit 065A  
                      __size_of_setLCD 016A                                __ramtop 1000  
                              __ptext0 044A                                __ptext1 0012  
                              __ptext2 051E                                __ptext3 07C8  
                              __ptext4 069A                                __ptext5 06D2  
                              __ptext6 0704                                __ptext7 0768  
                              __ptext9 017C                                _initADC 07C8  
                         __size_of_FNC 0442                                _frisbee 001D  
                       __pintcode_body 02E6                   end_of_initialization 068C  
                       _frisbee_target 0015                                setLCD@i 0066  
                        __Lmediumconst 0000                                int_func 02E6  
                            i2_LCDGoto 0592                                postdec1 000FE5  
                              postinc0 000FEE                                postinc2 000FDE  
                            _PORTBbits 000F81                              _PORTEbits 000F84  
                            _TRISAbits 000F92                              _TRISBbits 000F93  
                            _TRISEbits 000F96                 _LCDAddSpecialCharacter 069A  
                       __end_of_LCDDat 0704                         __end_of_LCDCmd 0798  
                           LCDGoto@p_1 0062                             LCDGoto@p_2 0063  
                           ?i2_LCDGoto 0057                             main@values 00C6  
   _selected_teamA_player_with_frisbee 002D                      __size_ofi2_LCDDat 0032  
                    __size_ofi2_LCDCmd 0030                          __pidataCOMRAM 0606  
                            i2setLCD@i 005B                         __end_of_setLCD 017C  
                  start_initialization 065A                            __end_of_FNC 044A  
                    __size_ofi2_setLCD 016A                               ??_LCDDat 0060  
                             ??_LCDCmd 0060                LCDAddSpecialCharacter@i 0065  
                             ??_setLCD 0064                               ?_LCDGoto 0062  
                          __pbssCOMRAM 0068                          __pcstackBANK0 00C6  
                          i2LCDDat@dat 0056                            i2LCDCmd@cmd 0056  
                             ?_InitLCD 0055                            ??i2_LCDGoto 0058  
                            _character 000B                              __pintcode 0008  
                             ?_initADC 0055                           _teamA_player 004D  
                         _teamB_player 0045                              _locations 0001  
                             _LATBbits 000F8A                  _selected_teamA_player 003D  
                _selected_teamB_player 0035                               i2_LCDDat 0736  
                             i2_LCDCmd 0798                               i2u100_47 07AA  
                             i2u101_47 07BC                               i2u102_47 0748  
                             i2u103_47 075A                               _PIR1bits 000F9E  
                            main@F3012 00BC                             _ADCON0bits 000FC2  
                           _ADCON1bits 000FC1                             _ADCON2bits 000FC0  
                             i2_setLCD 017C                       __size_of_LCDGoto 0074  
              ?_LCDAddSpecialCharacter 0062                              copy_data0 066E  
                     __size_of_InitLCD 0032                               __Hrparam 0000  
                             __Lrparam 0000                           _selectedChar 0068  
       __end_of_LCDAddSpecialCharacter 06D2                       __size_of_initADC 0024  
                             __ptext10 0592                               __ptext11 0798  
                             __ptext12 0736                          __size_of_main 00D4  
   _selected_teamB_player_with_frisbee 0025                               int$flags 006B  
                           _INTCONbits 000FF2                               intlevel2 0000  
