

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Wed May 24 15:38:20 2023

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    21                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    27                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    28                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    29                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    30                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    31  0000                     
    32                           ; Version 2.20
    33                           ; Generated 12/02/2020 GMT
    34                           ; 
    35                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC18F4620 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66  0000                     
    67                           	psect	idataCOMRAM
    68  000602                     __pidataCOMRAM:
    69                           	callstack 0
    70                           
    71                           ;initializer for _locations
    72  000602  03                 	db	3
    73  000603  02                 	db	2
    74  000604  03                 	db	3
    75  000605  03                 	db	3
    76  000606  0E                 	db	14
    77  000607  02                 	db	2
    78  000608  0E                 	db	14
    79  000609  03                 	db	3
    80  00060A  09                 	db	9
    81  00060B  02                 	db	2
    82                           
    83                           ;initializer for _character
    84  00060C  00                 	db	0
    85  00060D  00                 	db	0
    86  00060E  0A                 	db	10
    87  00060F  1F                 	db	31
    88  000610  1F                 	db	31
    89  000611  0E                 	db	14
    90  000612  04                 	db	4
    91  000613  00                 	db	0
    92                           
    93                           ;initializer for _lcd_y
    94  000614  01                 	db	1
    95                           
    96                           ;initializer for _lcd_x
    97  000615  01                 	db	1
    98                           
    99                           ;initializer for _frisbee_target
   100  000616  0E                 	db	14
   101  000617  11                 	db	17
   102  000618  11                 	db	17
   103  000619  11                 	db	17
   104  00061A  0E                 	db	14
   105  00061B  00                 	db	0
   106  00061C  00                 	db	0
   107  00061D  00                 	db	0
   108                           
   109                           ;initializer for _frisbee
   110  00061E  0E                 	db	14
   111  00061F  1F                 	db	31
   112  000620  1F                 	db	31
   113  000621  1F                 	db	31
   114  000622  0E                 	db	14
   115  000623  00                 	db	0
   116  000624  00                 	db	0
   117  000625  00                 	db	0
   118                           
   119                           ;initializer for _selected_teamB_player_with_frisbee
   120  000626  1F                 	db	31
   121  000627  15                 	db	21
   122  000628  0A                 	db	10
   123  000629  04                 	db	4
   124  00062A  0E                 	db	14
   125  00062B  1F                 	db	31
   126  00062C  0A                 	db	10
   127  00062D  1F                 	db	31
   128                           
   129                           ;initializer for _selected_teamA_player_with_frisbee
   130  00062E  1F                 	db	31
   131  00062F  15                 	db	21
   132  000630  0A                 	db	10
   133  000631  04                 	db	4
   134  000632  04                 	db	4
   135  000633  04                 	db	4
   136  000634  0A                 	db	10
   137  000635  1F                 	db	31
   138                           
   139                           ;initializer for _selected_teamB_player
   140  000636  11                 	db	17
   141  000637  15                 	db	21
   142  000638  0A                 	db	10
   143  000639  04                 	db	4
   144  00063A  0E                 	db	14
   145  00063B  1F                 	db	31
   146  00063C  0A                 	db	10
   147  00063D  1F                 	db	31
   148                           
   149                           ;initializer for _selected_teamA_player
   150  00063E  11                 	db	17
   151  00063F  15                 	db	21
   152  000640  0A                 	db	10
   153  000641  04                 	db	4
   154  000642  04                 	db	4
   155  000643  04                 	db	4
   156  000644  0A                 	db	10
   157  000645  1F                 	db	31
   158                           
   159                           ;initializer for _teamB_player
   160  000646  11                 	db	17
   161  000647  15                 	db	21
   162  000648  0A                 	db	10
   163  000649  04                 	db	4
   164  00064A  0E                 	db	14
   165  00064B  1F                 	db	31
   166  00064C  0A                 	db	10
   167  00064D  0A                 	db	10
   168                           
   169                           ;initializer for _teamA_player
   170  00064E  11                 	db	17
   171  00064F  15                 	db	21
   172  000650  0A                 	db	10
   173  000651  04                 	db	4
   174  000652  04                 	db	4
   175  000653  04                 	db	4
   176  000654  0A                 	db	10
   177  000655  0A                 	db	10
   178  0000                     _INTCON2bits	set	4081
   179  0000                     _TRISBbits	set	3987
   180  0000                     _PORTBbits	set	3969
   181  0000                     _INTCONbits	set	4082
   182  0000                     _TRISD	set	3989
   183  0000                     _TRISEbits	set	3990
   184  0000                     _PORTD	set	3971
   185  0000                     _PORTEbits	set	3972
   186  0000                     _ADCON2bits	set	4032
   187  0000                     _TRISAbits	set	3986
   188  0000                     _ADCON1bits	set	4033
   189  0000                     _ADRESL	set	4035
   190  0000                     _ADRESH	set	4036
   191  0000                     _PIR1bits	set	3998
   192  0000                     _ADCON0bits	set	4034
   193                           
   194                           ; #config settings
   195                           
   196                           	psect	cinit
   197  000656                     __pcinit:
   198                           	callstack 0
   199  000656                     start_initialization:
   200                           	callstack 0
   201  000656                     __initialization:
   202                           	callstack 0
   203                           
   204                           ; Initialize objects allocated to COMRAM (84 bytes)
   205                           ; load TBLPTR registers with __pidataCOMRAM
   206  000656  0E02               	movlw	low __pidataCOMRAM
   207  000658  6EF6               	movwf	tblptrl,c
   208  00065A  0E06               	movlw	high __pidataCOMRAM
   209  00065C  6EF7               	movwf	tblptrh,c
   210  00065E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   211  000660  6EF8               	movwf	tblptru,c
   212  000662  EE00  F001         	lfsr	0,__pdataCOMRAM
   213  000666  EE10 F054          	lfsr	1,84
   214  00066A                     copy_data0:
   215  00066A  0009               	tblrd		*+
   216  00066C  CFF5 FFEE          	movff	tablat,postinc0
   217  000670  50E5               	movf	postdec1,w,c
   218  000672  50E1               	movf	fsr1l,w,c
   219  000674  E1FA               	bnz	copy_data0
   220                           
   221                           ; Clear objects allocated to BANK0 (70 bytes)
   222  000676  EE00  F080         	lfsr	0,__pbssBANK0
   223  00067A  0E46               	movlw	70
   224  00067C                     clear_0:
   225  00067C  6AEE               	clrf	postinc0,c
   226  00067E  06E8               	decf	wreg,f,c
   227  000680  E1FD               	bnz	clear_0
   228                           
   229                           ; Clear objects allocated to COMRAM (3 bytes)
   230  000682  6A6A               	clrf	(__pbssCOMRAM+2)& (0+255),c
   231  000684  6A69               	clrf	(__pbssCOMRAM+1)& (0+255),c
   232  000686  6A68               	clrf	__pbssCOMRAM& (0+255),c
   233  000688                     end_of_initialization:
   234                           	callstack 0
   235  000688                     __end_of__initialization:
   236                           	callstack 0
   237  000688  906B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   238  00068A  926B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   239  00068C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   240  00068E  6EF8               	movwf	tblptru,c
   241  000690  0100               	movlb	0
   242  000692  EF25  F002         	goto	_main	;jump to C main() function
   243                           
   244                           	psect	bssCOMRAM
   245  000068                     __pbssCOMRAM:
   246                           	callstack 0
   247  000068                     _selectedChar:
   248                           	callstack 0
   249  000068                     	ds	2
   250  00006A                     _CONVERT:
   251                           	callstack 0
   252  00006A                     	ds	1
   253                           
   254                           	psect	dataCOMRAM
   255  000001                     __pdataCOMRAM:
   256                           	callstack 0
   257  000001                     _locations:
   258                           	callstack 0
   259  000001                     	ds	10
   260  00000B                     _character:
   261                           	callstack 0
   262  00000B                     	ds	8
   263  000013                     _lcd_y:
   264                           	callstack 0
   265  000013                     	ds	1
   266  000014                     _lcd_x:
   267                           	callstack 0
   268  000014                     	ds	1
   269  000015                     _frisbee_target:
   270                           	callstack 0
   271  000015                     	ds	8
   272  00001D                     _frisbee:
   273                           	callstack 0
   274  00001D                     	ds	8
   275  000025                     _selected_teamB_player_with_frisbee:
   276                           	callstack 0
   277  000025                     	ds	8
   278  00002D                     _selected_teamA_player_with_frisbee:
   279                           	callstack 0
   280  00002D                     	ds	8
   281  000035                     _selected_teamB_player:
   282                           	callstack 0
   283  000035                     	ds	8
   284  00003D                     _selected_teamA_player:
   285                           	callstack 0
   286  00003D                     	ds	8
   287  000045                     _teamB_player:
   288                           	callstack 0
   289  000045                     	ds	8
   290  00004D                     _teamA_player:
   291                           	callstack 0
   292  00004D                     	ds	8
   293                           
   294                           	psect	bssBANK0
   295  000080                     __pbssBANK0:
   296                           	callstack 0
   297  000080                     _frisbee_steps:
   298                           	callstack 0
   299  000080                     	ds	60
   300  0000BC                     	ds	10
   301                           
   302                           	psect	cstackBANK0
   303  0000C6                     __pcstackBANK0:
   304                           	callstack 0
   305  0000C6                     main@values:
   306                           	callstack 0
   307                           
   308                           ; 10 bytes @ 0x0
   309  0000C6                     	ds	10
   310                           
   311                           	psect	cstackCOMRAM
   312  000055                     __pcstackCOMRAM:
   313                           	callstack 0
   314  000055                     ??i2_LCDCmd:
   315  000055                     ??i2_LCDDat:
   316  000055                     
   317                           ; 1 bytes @ 0x0
   318  000055                     	ds	1
   319  000056                     i2LCDCmd@cmd:
   320                           	callstack 0
   321  000056                     i2LCDDat@dat:
   322                           	callstack 0
   323                           
   324                           ; 1 bytes @ 0x1
   325  000056                     	ds	1
   326  000057                     i2LCDGoto@p_1:
   327                           	callstack 0
   328                           
   329                           ; 1 bytes @ 0x2
   330  000057                     	ds	1
   331  000058                     i2LCDGoto@p_2:
   332                           	callstack 0
   333                           
   334                           ; 1 bytes @ 0x3
   335  000058                     	ds	1
   336  000059                     ??i2_setLCD:
   337                           
   338                           ; 1 bytes @ 0x4
   339  000059                     	ds	2
   340  00005B                     i2setLCD@i:
   341                           	callstack 0
   342                           
   343                           ; 2 bytes @ 0x6
   344  00005B                     	ds	2
   345  00005D                     ??_FNC:
   346                           
   347                           ; 1 bytes @ 0x8
   348  00005D                     	ds	3
   349  000060                     ??_LCDCmd:
   350  000060                     ??_LCDDat:
   351                           
   352                           ; 1 bytes @ 0xB
   353  000060                     	ds	1
   354  000061                     LCDCmd@cmd:
   355                           	callstack 0
   356  000061                     LCDDat@dat:
   357                           	callstack 0
   358                           
   359                           ; 1 bytes @ 0xC
   360  000061                     	ds	1
   361  000062                     LCDGoto@p_1:
   362                           	callstack 0
   363  000062                     LCDAddSpecialCharacter@data:
   364                           	callstack 0
   365                           
   366                           ; 2 bytes @ 0xD
   367  000062                     	ds	1
   368  000063                     LCDGoto@p_2:
   369                           	callstack 0
   370                           
   371                           ; 1 bytes @ 0xE
   372  000063                     	ds	1
   373  000064                     ??_setLCD:
   374  000064                     LCDAddSpecialCharacter@character_index:
   375                           	callstack 0
   376                           
   377                           ; 1 bytes @ 0xF
   378  000064                     	ds	1
   379  000065                     LCDAddSpecialCharacter@i:
   380                           	callstack 0
   381                           
   382                           ; 1 bytes @ 0x10
   383  000065                     	ds	1
   384  000066                     setLCD@i:
   385                           	callstack 0
   386                           
   387                           ; 2 bytes @ 0x11
   388  000066                     	ds	2
   389  000068                     
   390                           ; 1 bytes @ 0x13
   391 ;;
   392 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   393 ;;
   394 ;; *************** function _main *****************
   395 ;; Defined at:
   396 ;;		line 106 in file "main.c"
   397 ;; Parameters:    Size  Location     Type
   398 ;;		None
   399 ;; Auto vars:     Size  Location     Type
   400 ;;  values         10    0[BANK0 ] unsigned char [10]
   401 ;;  convertion      2    0        unsigned short 
   402 ;; Return value:  Size  Location     Type
   403 ;;                  1    wreg      void 
   404 ;; Registers used:
   405 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   406 ;; Tracked objects:
   407 ;;		On entry : 0/0
   408 ;;		On exit  : 0/0
   409 ;;		Unchanged: 0/0
   410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   412 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   414 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   415 ;;Total ram usage:       12 bytes
   416 ;; Hardware stack levels required when called:    7
   417 ;; This function calls:
   418 ;;		_InitLCD
   419 ;;		_LCDAddSpecialCharacter
   420 ;;		_LCDCmd
   421 ;;		_initADC
   422 ;;		_setLCD
   423 ;; This function is called by:
   424 ;;		Startup code after reset
   425 ;; This function uses a non-reentrant model
   426 ;;
   427                           
   428                           	psect	text0
   429  00044A                     __ptext0:
   430                           	callstack 0
   431  00044A                     _main:
   432                           	callstack 24
   433  00044A                     
   434                           ;main.c: 108:     initADC();
   435  00044A  ECE2  F003         	call	_initADC	;wreg free
   436  00044E                     
   437                           ;main.c: 110:     InitLCD();
   438  00044E  EC80  F003         	call	_InitLCD	;wreg free
   439  000452                     
   440                           ;main.c: 112:     LCDAddSpecialCharacter(0, teamA_player);
   441  000452  0E4D               	movlw	low _teamA_player
   442  000454  6E62               	movwf	LCDAddSpecialCharacter@data^0,c
   443  000456  0E00               	movlw	high _teamA_player
   444  000458  6E63               	movwf	(LCDAddSpecialCharacter@data+1)^0,c
   445  00045A  0E00               	movlw	0
   446  00045C  EC4B  F003         	call	_LCDAddSpecialCharacter
   447  000460                     
   448                           ;main.c: 113:     LCDAddSpecialCharacter(1, selected_teamA_player);
   449  000460  0E3D               	movlw	low _selected_teamA_player
   450  000462  6E62               	movwf	LCDAddSpecialCharacter@data^0,c
   451  000464  0E00               	movlw	high _selected_teamA_player
   452  000466  6E63               	movwf	(LCDAddSpecialCharacter@data+1)^0,c
   453  000468  0E01               	movlw	1
   454  00046A  EC4B  F003         	call	_LCDAddSpecialCharacter
   455  00046E                     
   456                           ;main.c: 114:     LCDAddSpecialCharacter(2, selected_teamA_player_with_frisbee);
   457  00046E  0E2D               	movlw	low _selected_teamA_player_with_frisbee
   458  000470  6E62               	movwf	LCDAddSpecialCharacter@data^0,c
   459  000472  0E00               	movlw	high _selected_teamA_player_with_frisbee
   460  000474  6E63               	movwf	(LCDAddSpecialCharacter@data+1)^0,c
   461  000476  0E02               	movlw	2
   462  000478  EC4B  F003         	call	_LCDAddSpecialCharacter
   463  00047C                     
   464                           ;main.c: 115:     LCDAddSpecialCharacter(3, teamB_player);
   465  00047C  0E45               	movlw	low _teamB_player
   466  00047E  6E62               	movwf	LCDAddSpecialCharacter@data^0,c
   467  000480  0E00               	movlw	high _teamB_player
   468  000482  6E63               	movwf	(LCDAddSpecialCharacter@data+1)^0,c
   469  000484  0E03               	movlw	3
   470  000486  EC4B  F003         	call	_LCDAddSpecialCharacter
   471  00048A                     
   472                           ;main.c: 116:     LCDAddSpecialCharacter(4, selected_teamB_player);
   473  00048A  0E35               	movlw	low _selected_teamB_player
   474  00048C  6E62               	movwf	LCDAddSpecialCharacter@data^0,c
   475  00048E  0E00               	movlw	high _selected_teamB_player
   476  000490  6E63               	movwf	(LCDAddSpecialCharacter@data+1)^0,c
   477  000492  0E04               	movlw	4
   478  000494  EC4B  F003         	call	_LCDAddSpecialCharacter
   479  000498                     
   480                           ;main.c: 117:     LCDAddSpecialCharacter(5, selected_teamB_player_with_frisbee);
   481  000498  0E25               	movlw	low _selected_teamB_player_with_frisbee
   482  00049A  6E62               	movwf	LCDAddSpecialCharacter@data^0,c
   483  00049C  0E00               	movlw	high _selected_teamB_player_with_frisbee
   484  00049E  6E63               	movwf	(LCDAddSpecialCharacter@data+1)^0,c
   485  0004A0  0E05               	movlw	5
   486  0004A2  EC4B  F003         	call	_LCDAddSpecialCharacter
   487  0004A6                     
   488                           ;main.c: 118:     LCDAddSpecialCharacter(6, frisbee);
   489  0004A6  0E1D               	movlw	low _frisbee
   490  0004A8  6E62               	movwf	LCDAddSpecialCharacter@data^0,c
   491  0004AA  0E00               	movlw	high _frisbee
   492  0004AC  6E63               	movwf	(LCDAddSpecialCharacter@data+1)^0,c
   493  0004AE  0E06               	movlw	6
   494  0004B0  EC4B  F003         	call	_LCDAddSpecialCharacter
   495  0004B4                     
   496                           ;main.c: 119:     LCDAddSpecialCharacter(7, frisbee_target);
   497  0004B4  0E15               	movlw	low _frisbee_target
   498  0004B6  6E62               	movwf	LCDAddSpecialCharacter@data^0,c
   499  0004B8  0E00               	movlw	high _frisbee_target
   500  0004BA  6E63               	movwf	(LCDAddSpecialCharacter@data+1)^0,c
   501  0004BC  0E07               	movlw	7
   502  0004BE  EC4B  F003         	call	_LCDAddSpecialCharacter
   503  0004C2                     
   504                           ;main.c: 121:     char values[10] = {0};
   505  0004C2  EE20  F0C6         	lfsr	2,main@values
   506  0004C6  0E09               	movlw	9
   507  0004C8                     u941:
   508  0004C8  6ADE               	clrf	postinc2,c
   509  0004CA  06E8               	decf	wreg,f,c
   510  0004CC  E2FD               	bc	u941
   511  0004CE                     
   512                           ;main.c: 127:     TRISBbits.RB0 = 1;
   513  0004CE  8093               	bsf	147,0,c	;volatile
   514  0004D0                     
   515                           ;main.c: 128:     INTCONbits.INT0IE = 1;
   516  0004D0  88F2               	bsf	242,4,c	;volatile
   517  0004D2                     
   518                           ;main.c: 129:     INTCONbits.INT0IF = 0;
   519  0004D2  92F2               	bcf	242,1,c	;volatile
   520  0004D4                     
   521                           ;main.c: 130:     INTCONbits.GIE = 1;
   522  0004D4  8EF2               	bsf	242,7,c	;volatile
   523  0004D6                     
   524                           ;main.c: 131:     INTCONbits.PEIE = 1;
   525  0004D6  8CF2               	bsf	242,6,c	;volatile
   526  0004D8                     
   527                           ;main.c: 134:     PORTBbits.RB4 = 0;
   528  0004D8  9881               	bcf	129,4,c	;volatile
   529  0004DA                     
   530                           ;main.c: 135:     PORTBbits.RB5 = 0;
   531  0004DA  9A81               	bcf	129,5,c	;volatile
   532  0004DC                     
   533                           ;main.c: 136:     PORTBbits.RB6 = 0;
   534  0004DC  9C81               	bcf	129,6,c	;volatile
   535  0004DE                     
   536                           ;main.c: 137:     PORTBbits.RB7 = 0;
   537  0004DE  9E81               	bcf	129,7,c	;volatile
   538  0004E0                     
   539                           ;main.c: 138:     TRISBbits.RB4 = 1;
   540  0004E0  8893               	bsf	147,4,c	;volatile
   541  0004E2                     
   542                           ;main.c: 139:     TRISBbits.RB5 = 1;
   543  0004E2  8A93               	bsf	147,5,c	;volatile
   544  0004E4                     
   545                           ;main.c: 140:     TRISBbits.RB6 = 1;
   546  0004E4  8C93               	bsf	147,6,c	;volatile
   547  0004E6                     
   548                           ;main.c: 141:     TRISBbits.RB7 = 1;
   549  0004E6  8E93               	bsf	147,7,c	;volatile
   550  0004E8                     
   551                           ;main.c: 143:     INTCONbits.RBIF = 0;
   552  0004E8  90F2               	bcf	242,0,c	;volatile
   553  0004EA                     
   554                           ;main.c: 144:     INTCONbits.RBIE = 1;
   555  0004EA  86F2               	bsf	242,3,c	;volatile
   556  0004EC                     
   557                           ;main.c: 145:     INTCON2bits.RBIP = 1;
   558  0004EC  80F1               	bsf	241,0,c	;volatile
   559  0004EE                     
   560                           ;main.c: 146:     INTCON2bits.RBPU = 0;
   561  0004EE  9EF1               	bcf	241,7,c	;volatile
   562  0004F0                     
   563                           ;main.c: 156:     setLCD();
   564  0004F0  EC09  F000         	call	_setLCD	;wreg free
   565  0004F4                     l1899:
   566                           
   567                           ;main.c: 160:     {;main.c: 161:         if(CONVERT == 1)
   568  0004F4  046A               	decf	_CONVERT^0,w,c	;volatile
   569  0004F6  A4D8               	btfss	status,2,c
   570  0004F8  EF80  F002         	goto	u951
   571  0004FC  EF82  F002         	goto	u950
   572  000500                     u951:
   573  000500  EF7A  F002         	goto	l1899
   574  000504                     u950:
   575  000504                     
   576                           ;main.c: 162:         {;main.c: 163:             LCDCmd(0x01);
   577  000504  0E01               	movlw	1
   578  000506  ECB2  F003         	call	_LCDCmd
   579  00050A                     
   580                           ;main.c: 164:             setLCD();
   581  00050A  EC09  F000         	call	_setLCD	;wreg free
   582  00050E                     
   583                           ;main.c: 166:             CONVERT = 0;
   584  00050E  0E00               	movlw	0
   585  000510  6E6A               	movwf	_CONVERT^0,c	;volatile
   586  000512  EF7A  F002         	goto	l1899
   587  000516  EF07  F000         	goto	start
   588  00051A                     __end_of_main:
   589                           	callstack 0
   590                           
   591 ;; *************** function _setLCD *****************
   592 ;; Defined at:
   593 ;;		line 63 in file "main.c"
   594 ;; Parameters:    Size  Location     Type
   595 ;;		None
   596 ;; Auto vars:     Size  Location     Type
   597 ;;  i               2   17[COMRAM] unsigned short 
   598 ;; Return value:  Size  Location     Type
   599 ;;                  1    wreg      void 
   600 ;; Registers used:
   601 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   602 ;; Tracked objects:
   603 ;;		On entry : 0/0
   604 ;;		On exit  : 0/0
   605 ;;		Unchanged: 0/0
   606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   608 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   609 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   610 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   611 ;;Total ram usage:        4 bytes
   612 ;; Hardware stack levels used:    1
   613 ;; Hardware stack levels required when called:    6
   614 ;; This function calls:
   615 ;;		_LCDDat
   616 ;;		_LCDGoto
   617 ;; This function is called by:
   618 ;;		_main
   619 ;; This function uses a non-reentrant model
   620 ;;
   621                           
   622                           	psect	text1
   623  000012                     __ptext1:
   624                           	callstack 0
   625  000012                     _setLCD:
   626                           	callstack 24
   627  000012                     
   628                           ;main.c: 65:     for(unsigned short i = 0; i < 5; i++)
   629  000012  0E00               	movlw	0
   630  000014  6E67               	movwf	(setLCD@i+1)^0,c
   631  000016  0E00               	movlw	0
   632  000018  6E66               	movwf	setLCD@i^0,c
   633  00001A                     l1783:
   634                           
   635                           ;main.c: 66:     {;main.c: 67:         if(selectedChar == i)
   636  00001A  5066               	movf	setLCD@i^0,w,c
   637  00001C  1868               	xorwf	_selectedChar^0,w,c
   638  00001E  E107               	bnz	u881
   639  000020  5067               	movf	(setLCD@i+1)^0,w,c
   640  000022  1869               	xorwf	(_selectedChar+1)^0,w,c
   641  000024  A4D8               	btfss	status,2,c
   642  000026  EF17  F000         	goto	u881
   643  00002A  EF19  F000         	goto	u880
   644  00002E                     u881:
   645  00002E  EF5C  F000         	goto	l1795
   646  000032                     u880:
   647  000032                     
   648                           ;main.c: 68:         {;main.c: 69:             if(i < 2)
   649  000032  5067               	movf	(setLCD@i+1)^0,w,c
   650  000034  E107               	bnz	u891
   651  000036  0E02               	movlw	2
   652  000038  5C66               	subwf	setLCD@i^0,w,c
   653  00003A  B0D8               	btfsc	status,0,c
   654  00003C  EF22  F000         	goto	u891
   655  000040  EF24  F000         	goto	u890
   656  000044                     u891:
   657  000044  EF40  F000         	goto	l1791
   658  000048                     u890:
   659  000048                     
   660                           ;main.c: 70:             {;main.c: 71:                 LCDGoto(locations[i][0],locations
      +                          [i][1]);
   661  000048  90D8               	bcf	status,0,c
   662  00004A  3466               	rlcf	setLCD@i^0,w,c
   663  00004C  6ED9               	movwf	fsr2l,c
   664  00004E  3467               	rlcf	(setLCD@i+1)^0,w,c
   665  000050  6EDA               	movwf	fsr2h,c
   666  000052  0E02               	movlw	low (_locations+1)
   667  000054  26D9               	addwf	fsr2l,f,c
   668  000056  0E00               	movlw	high (_locations+1)
   669  000058  22DA               	addwfc	fsr2h,f,c
   670  00005A  50DF               	movf	indf2,w,c
   671  00005C  6E62               	movwf	LCDGoto@p_1^0,c
   672  00005E  90D8               	bcf	status,0,c
   673  000060  3466               	rlcf	setLCD@i^0,w,c
   674  000062  6ED9               	movwf	fsr2l,c
   675  000064  3467               	rlcf	(setLCD@i+1)^0,w,c
   676  000066  6EDA               	movwf	fsr2h,c
   677  000068  0E01               	movlw	low _locations
   678  00006A  26D9               	addwf	fsr2l,f,c
   679  00006C  0E00               	movlw	high _locations
   680  00006E  22DA               	addwfc	fsr2h,f,c
   681  000070  50DF               	movf	indf2,w,c
   682  000072  EC8D  F002         	call	_LCDGoto
   683  000076                     
   684                           ;main.c: 72:                 LCDDat(1);
   685  000076  0E01               	movlw	1
   686  000078  EC67  F003         	call	_LCDDat
   687                           
   688                           ;main.c: 73:             }
   689  00007C  EFB0  F000         	goto	l1811
   690  000080                     l1791:
   691                           
   692                           ;main.c: 75:             {;main.c: 76:                 LCDGoto(locations[i][0],locations
      +                          [i][1]);
   693  000080  90D8               	bcf	status,0,c
   694  000082  3466               	rlcf	setLCD@i^0,w,c
   695  000084  6ED9               	movwf	fsr2l,c
   696  000086  3467               	rlcf	(setLCD@i+1)^0,w,c
   697  000088  6EDA               	movwf	fsr2h,c
   698  00008A  0E02               	movlw	low (_locations+1)
   699  00008C  26D9               	addwf	fsr2l,f,c
   700  00008E  0E00               	movlw	high (_locations+1)
   701  000090  22DA               	addwfc	fsr2h,f,c
   702  000092  50DF               	movf	indf2,w,c
   703  000094  6E62               	movwf	LCDGoto@p_1^0,c
   704  000096  90D8               	bcf	status,0,c
   705  000098  3466               	rlcf	setLCD@i^0,w,c
   706  00009A  6ED9               	movwf	fsr2l,c
   707  00009C  3467               	rlcf	(setLCD@i+1)^0,w,c
   708  00009E  6EDA               	movwf	fsr2h,c
   709  0000A0  0E01               	movlw	low _locations
   710  0000A2  26D9               	addwf	fsr2l,f,c
   711  0000A4  0E00               	movlw	high _locations
   712  0000A6  22DA               	addwfc	fsr2h,f,c
   713  0000A8  50DF               	movf	indf2,w,c
   714  0000AA  EC8D  F002         	call	_LCDGoto
   715  0000AE                     
   716                           ;main.c: 77:                 LCDDat(4);
   717  0000AE  0E04               	movlw	4
   718  0000B0  EC67  F003         	call	_LCDDat
   719  0000B4  EFB0  F000         	goto	l1811
   720  0000B8                     l1795:
   721                           
   722                           ;main.c: 81:         {;main.c: 82:             LCDGoto(locations[i][0],locations[i][1]);
   723  0000B8  90D8               	bcf	status,0,c
   724  0000BA  3466               	rlcf	setLCD@i^0,w,c
   725  0000BC  6ED9               	movwf	fsr2l,c
   726  0000BE  3467               	rlcf	(setLCD@i+1)^0,w,c
   727  0000C0  6EDA               	movwf	fsr2h,c
   728  0000C2  0E02               	movlw	low (_locations+1)
   729  0000C4  26D9               	addwf	fsr2l,f,c
   730  0000C6  0E00               	movlw	high (_locations+1)
   731  0000C8  22DA               	addwfc	fsr2h,f,c
   732  0000CA  50DF               	movf	indf2,w,c
   733  0000CC  6E62               	movwf	LCDGoto@p_1^0,c
   734  0000CE  90D8               	bcf	status,0,c
   735  0000D0  3466               	rlcf	setLCD@i^0,w,c
   736  0000D2  6ED9               	movwf	fsr2l,c
   737  0000D4  3467               	rlcf	(setLCD@i+1)^0,w,c
   738  0000D6  6EDA               	movwf	fsr2h,c
   739  0000D8  0E01               	movlw	low _locations
   740  0000DA  26D9               	addwf	fsr2l,f,c
   741  0000DC  0E00               	movlw	high _locations
   742  0000DE  22DA               	addwfc	fsr2h,f,c
   743  0000E0  50DF               	movf	indf2,w,c
   744  0000E2  EC8D  F002         	call	_LCDGoto
   745                           
   746                           ;main.c: 83:             switch(i)
   747  0000E6  EF8E  F000         	goto	l1809
   748  0000EA                     l1797:
   749                           
   750                           ;main.c: 86:                     LCDDat(0);
   751  0000EA  0E00               	movlw	0
   752  0000EC  EC67  F003         	call	_LCDDat
   753                           
   754                           ;main.c: 87:                     break;
   755  0000F0  EFB0  F000         	goto	l1811
   756  0000F4                     l1799:
   757                           
   758                           ;main.c: 89:                     LCDDat(0);
   759  0000F4  0E00               	movlw	0
   760  0000F6  EC67  F003         	call	_LCDDat
   761                           
   762                           ;main.c: 90:                     break;
   763  0000FA  EFB0  F000         	goto	l1811
   764  0000FE                     l1801:
   765                           
   766                           ;main.c: 92:                     LCDDat(3);
   767  0000FE  0E03               	movlw	3
   768  000100  EC67  F003         	call	_LCDDat
   769                           
   770                           ;main.c: 93:                     break;
   771  000104  EFB0  F000         	goto	l1811
   772  000108                     l1803:
   773                           
   774                           ;main.c: 95:                     LCDDat(3);
   775  000108  0E03               	movlw	3
   776  00010A  EC67  F003         	call	_LCDDat
   777                           
   778                           ;main.c: 96:                     break;
   779  00010E  EFB0  F000         	goto	l1811
   780  000112                     l1805:
   781                           
   782                           ;main.c: 98:                     LCDDat(6);
   783  000112  0E06               	movlw	6
   784  000114  EC67  F003         	call	_LCDDat
   785                           
   786                           ;main.c: 99:                     break;
   787  000118  EFB0  F000         	goto	l1811
   788  00011C                     l1809:
   789  00011C  C066  F064         	movff	setLCD@i,??_setLCD
   790  000120  C067  F065         	movff	setLCD@i+1,??_setLCD+1
   791                           
   792                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   793                           ; Switch size 1, requested type "simple"
   794                           ; Number of cases is 1, Range of values is 0 to 0
   795                           ; switch strategies available:
   796                           ; Name         Instructions Cycles
   797                           ; simple_byte            4     3 (average)
   798                           ;	Chosen strategy is simple_byte
   799  000124  5065               	movf	(??_setLCD+1)^0,w,c
   800  000126  0A00               	xorlw	0	; case 0
   801  000128  B4D8               	btfsc	status,2,c
   802  00012A  EF99  F000         	goto	l1915
   803  00012E  EFB0  F000         	goto	l1811
   804  000132                     l1915:
   805                           
   806                           ; Switch size 1, requested type "simple"
   807                           ; Number of cases is 5, Range of values is 0 to 4
   808                           ; switch strategies available:
   809                           ; Name         Instructions Cycles
   810                           ; simple_byte           16     9 (average)
   811                           ;	Chosen strategy is simple_byte
   812  000132  5064               	movf	??_setLCD^0,w,c
   813  000134  0A00               	xorlw	0	; case 0
   814  000136  B4D8               	btfsc	status,2,c
   815  000138  EF75  F000         	goto	l1797
   816  00013C  0A01               	xorlw	1	; case 1
   817  00013E  B4D8               	btfsc	status,2,c
   818  000140  EF7A  F000         	goto	l1799
   819  000144  0A03               	xorlw	3	; case 2
   820  000146  B4D8               	btfsc	status,2,c
   821  000148  EF7F  F000         	goto	l1801
   822  00014C  0A01               	xorlw	1	; case 3
   823  00014E  B4D8               	btfsc	status,2,c
   824  000150  EF84  F000         	goto	l1803
   825  000154  0A07               	xorlw	7	; case 4
   826  000156  B4D8               	btfsc	status,2,c
   827  000158  EF89  F000         	goto	l1805
   828  00015C  EFB0  F000         	goto	l1811
   829  000160                     l1811:
   830                           
   831                           ;main.c: 102:     }
   832  000160  4A66               	infsnz	setLCD@i^0,f,c
   833  000162  2A67               	incf	(setLCD@i+1)^0,f,c
   834  000164  5067               	movf	(setLCD@i+1)^0,w,c
   835  000166  E109               	bnz	u900
   836  000168  0E05               	movlw	5
   837  00016A  5C66               	subwf	setLCD@i^0,w,c
   838  00016C  A0D8               	btfss	status,0,c
   839  00016E  EFBB  F000         	goto	u901
   840  000172  EFBD  F000         	goto	u900
   841  000176                     u901:
   842  000176  EF0D  F000         	goto	l1783
   843  00017A                     u900:
   844  00017A  0012               	return		;funcret
   845  00017C                     __end_of_setLCD:
   846                           	callstack 0
   847                           
   848 ;; *************** function _LCDGoto *****************
   849 ;; Defined at:
   850 ;;		line 72 in file "./lcd.h"
   851 ;; Parameters:    Size  Location     Type
   852 ;;  p_2             1    wreg     unsigned char 
   853 ;;  p_1             1   13[COMRAM] unsigned char 
   854 ;; Auto vars:     Size  Location     Type
   855 ;;  p_2             1   14[COMRAM] unsigned char 
   856 ;; Return value:  Size  Location     Type
   857 ;;                  1    wreg      void 
   858 ;; Registers used:
   859 ;;		wreg, status,2, status,0, cstack
   860 ;; Tracked objects:
   861 ;;		On entry : 0/0
   862 ;;		On exit  : 0/0
   863 ;;		Unchanged: 0/0
   864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   865 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   866 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   868 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   869 ;;Total ram usage:        2 bytes
   870 ;; Hardware stack levels used:    1
   871 ;; Hardware stack levels required when called:    5
   872 ;; This function calls:
   873 ;;		_LCDCmd
   874 ;; This function is called by:
   875 ;;		_setLCD
   876 ;; This function uses a non-reentrant model
   877 ;;
   878                           
   879                           	psect	text2
   880  00051A                     __ptext2:
   881                           	callstack 0
   882  00051A                     _LCDGoto:
   883                           	callstack 24
   884                           
   885                           ;incstack = 0
   886                           ;LCDGoto@p_2 stored from wreg
   887  00051A  6E63               	movwf	LCDGoto@p_2^0,c
   888  00051C                     
   889                           ;./lcd.h: 73:   if(p_1==1) {
   890  00051C  0462               	decf	LCDGoto@p_1^0,w,c
   891  00051E  A4D8               	btfss	status,2,c
   892  000520  EF94  F002         	goto	u841
   893  000524  EF96  F002         	goto	u840
   894  000528                     u841:
   895  000528  EF9D  F002         	goto	l1727
   896  00052C                     u840:
   897  00052C                     
   898                           ;./lcd.h: 74:     LCDCmd(0x80 +((p_2-1)%16));
   899  00052C  0463               	decf	LCDGoto@p_2^0,w,c
   900  00052E  0B0F               	andlw	15
   901  000530  0F80               	addlw	128
   902  000532  ECB2  F003         	call	_LCDCmd
   903                           
   904                           ;./lcd.h: 75:   }
   905  000536  EFC2  F002         	goto	l1737
   906  00053A                     l1727:
   907  00053A  0E02               	movlw	2
   908  00053C  1862               	xorwf	LCDGoto@p_1^0,w,c
   909  00053E  A4D8               	btfss	status,2,c
   910  000540  EFA4  F002         	goto	u851
   911  000544  EFA6  F002         	goto	u850
   912  000548                     u851:
   913  000548  EFAD  F002         	goto	l1731
   914  00054C                     u850:
   915  00054C                     
   916                           ;./lcd.h: 77:     LCDCmd(0xC0 +((p_2-1)%16));
   917  00054C  0463               	decf	LCDGoto@p_2^0,w,c
   918  00054E  0B0F               	andlw	15
   919  000550  0FC0               	addlw	192
   920  000552  ECB2  F003         	call	_LCDCmd
   921                           
   922                           ;./lcd.h: 78:   }
   923  000556  EFC2  F002         	goto	l1737
   924  00055A                     l1731:
   925  00055A  0E03               	movlw	3
   926  00055C  1862               	xorwf	LCDGoto@p_1^0,w,c
   927  00055E  A4D8               	btfss	status,2,c
   928  000560  EFB4  F002         	goto	u861
   929  000564  EFB6  F002         	goto	u860
   930  000568                     u861:
   931  000568  EFBD  F002         	goto	l1735
   932  00056C                     u860:
   933  00056C                     
   934                           ;./lcd.h: 80:     LCDCmd(0x90 +((p_2-1)%16));
   935  00056C  0463               	decf	LCDGoto@p_2^0,w,c
   936  00056E  0B0F               	andlw	15
   937  000570  0F90               	addlw	144
   938  000572  ECB2  F003         	call	_LCDCmd
   939                           
   940                           ;./lcd.h: 81:   }
   941  000576  EFC2  F002         	goto	l1737
   942  00057A                     l1735:
   943                           
   944                           ;./lcd.h: 83:     LCDCmd(0xD0 +((p_2-1)%16));
   945  00057A  0463               	decf	LCDGoto@p_2^0,w,c
   946  00057C  0B0F               	andlw	15
   947  00057E  0FD0               	addlw	208
   948  000580  ECB2  F003         	call	_LCDCmd
   949  000584                     l1737:
   950                           
   951                           ;./lcd.h: 85:   lcd_x = p_2;
   952  000584  C063  F014         	movff	LCDGoto@p_2,_lcd_x
   953  000588                     
   954                           ;./lcd.h: 86:   lcd_y = p_1;
   955  000588  C062  F013         	movff	LCDGoto@p_1,_lcd_y
   956  00058C  0012               	return		;funcret
   957  00058E                     __end_of_LCDGoto:
   958                           	callstack 0
   959                           
   960 ;; *************** function _initADC *****************
   961 ;; Defined at:
   962 ;;		line 35 in file "./adc.h"
   963 ;; Parameters:    Size  Location     Type
   964 ;;		None
   965 ;; Auto vars:     Size  Location     Type
   966 ;;		None
   967 ;; Return value:  Size  Location     Type
   968 ;;                  1    wreg      void 
   969 ;; Registers used:
   970 ;;		None
   971 ;; Tracked objects:
   972 ;;		On entry : 0/0
   973 ;;		On exit  : 0/0
   974 ;;		Unchanged: 0/0
   975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   979 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   980 ;;Total ram usage:        0 bytes
   981 ;; Hardware stack levels used:    1
   982 ;; Hardware stack levels required when called:    4
   983 ;; This function calls:
   984 ;;		Nothing
   985 ;; This function is called by:
   986 ;;		_main
   987 ;; This function uses a non-reentrant model
   988 ;;
   989                           
   990                           	psect	text3
   991  0007C4                     __ptext3:
   992                           	callstack 0
   993  0007C4                     _initADC:
   994                           	callstack 26
   995  0007C4                     
   996                           ;./adc.h: 37:         ADCON1bits.PCFG3 = 1;
   997  0007C4  86C1               	bsf	193,3,c	;volatile
   998                           
   999                           ;./adc.h: 38:         ADCON1bits.PCFG2 = 1;
  1000  0007C6  84C1               	bsf	193,2,c	;volatile
  1001                           
  1002                           ;./adc.h: 39:         ADCON1bits.PCFG1 = 0;
  1003  0007C8  92C1               	bcf	193,1,c	;volatile
  1004                           
  1005                           ;./adc.h: 40:         ADCON1bits.PCFG0 = 0;
  1006  0007CA  90C1               	bcf	193,0,c	;volatile
  1007                           
  1008                           ;./adc.h: 42:         ADCON1bits.VCFG0 = 0;
  1009  0007CC  98C1               	bcf	193,4,c	;volatile
  1010                           
  1011                           ;./adc.h: 43:         ADCON1bits.VCFG1 = 0;
  1012  0007CE  9AC1               	bcf	193,5,c	;volatile
  1013                           
  1014                           ;./adc.h: 45:         TRISAbits.RA0 = 1;
  1015  0007D0  8092               	bsf	146,0,c	;volatile
  1016                           
  1017                           ;./adc.h: 46:         TRISAbits.RA1 = 1;
  1018  0007D2  8292               	bsf	146,1,c	;volatile
  1019                           
  1020                           ;./adc.h: 47:         TRISAbits.RA2 = 0;
  1021  0007D4  9492               	bcf	146,2,c	;volatile
  1022                           
  1023                           ;./adc.h: 56:         ADCON2bits.ADCS2 = 0;
  1024  0007D6  94C0               	bcf	192,2,c	;volatile
  1025                           
  1026                           ;./adc.h: 57:         ADCON2bits.ADCS1 = 1;
  1027  0007D8  82C0               	bsf	192,1,c	;volatile
  1028                           
  1029                           ;./adc.h: 58:         ADCON2bits.ADCS0 = 0;
  1030  0007DA  90C0               	bcf	192,0,c	;volatile
  1031                           
  1032                           ;./adc.h: 60:         ADCON2bits.ACQT2 = 0;
  1033  0007DC  9AC0               	bcf	192,5,c	;volatile
  1034                           
  1035                           ;./adc.h: 61:         ADCON2bits.ACQT1 = 1;
  1036  0007DE  88C0               	bsf	192,4,c	;volatile
  1037                           
  1038                           ;./adc.h: 62:         ADCON2bits.ACQT0 = 0;
  1039  0007E0  96C0               	bcf	192,3,c	;volatile
  1040                           
  1041                           ;./adc.h: 64:         ADCON2bits.ADFM = 1;
  1042  0007E2  8EC0               	bsf	192,7,c	;volatile
  1043                           
  1044                           ;./adc.h: 66:         ADCON0bits.ADON = 1;
  1045  0007E4  80C2               	bsf	194,0,c	;volatile
  1046  0007E6  0012               	return		;funcret
  1047  0007E8                     __end_of_initADC:
  1048                           	callstack 0
  1049                           
  1050 ;; *************** function _LCDAddSpecialCharacter *****************
  1051 ;; Defined at:
  1052 ;;		line 129 in file "./lcd.h"
  1053 ;; Parameters:    Size  Location     Type
  1054 ;;  character_in    1    wreg     unsigned char 
  1055 ;;  data            2   13[COMRAM] PTR unsigned char 
  1056 ;;		 -> frisbee_target(8), frisbee(8), selected_teamB_player_with_frisbee(8), selected_teamB_player(8), 
  1057 ;;		 -> teamB_player(8), selected_teamA_player_with_frisbee(8), selected_teamA_player(8), teamA_player(8), 
  1058 ;; Auto vars:     Size  Location     Type
  1059 ;;  character_in    1   15[COMRAM] unsigned char 
  1060 ;;  i               1   16[COMRAM] unsigned char 
  1061 ;; Return value:  Size  Location     Type
  1062 ;;                  1    wreg      void 
  1063 ;; Registers used:
  1064 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1065 ;; Tracked objects:
  1066 ;;		On entry : 0/0
  1067 ;;		On exit  : 0/0
  1068 ;;		Unchanged: 0/0
  1069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1070 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1071 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1073 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1074 ;;Total ram usage:        4 bytes
  1075 ;; Hardware stack levels used:    1
  1076 ;; Hardware stack levels required when called:    5
  1077 ;; This function calls:
  1078 ;;		_LCDCmd
  1079 ;;		_LCDDat
  1080 ;; This function is called by:
  1081 ;;		_main
  1082 ;; This function uses a non-reentrant model
  1083 ;;
  1084                           
  1085                           	psect	text4
  1086  000696                     __ptext4:
  1087                           	callstack 0
  1088  000696                     _LCDAddSpecialCharacter:
  1089                           	callstack 25
  1090                           
  1091                           ;incstack = 0
  1092                           ;LCDAddSpecialCharacter@character_index stored from wreg
  1093  000696  6E64               	movwf	LCDAddSpecialCharacter@character_index^0,c
  1094  000698                     
  1095                           ;./lcd.h: 135:     LCDCmd(0b01000000+(character_index*8));
  1096  000698  5064               	movf	LCDAddSpecialCharacter@character_index^0,w,c
  1097  00069A  0D08               	mullw	8
  1098  00069C  50F3               	movf	243,w,c
  1099  00069E  0F40               	addlw	64
  1100  0006A0  ECB2  F003         	call	_LCDCmd
  1101  0006A4                     
  1102                           ;./lcd.h: 136:     for(byte i=0; i < 8; i++) {
  1103  0006A4  0E00               	movlw	0
  1104  0006A6  6E65               	movwf	LCDAddSpecialCharacter@i^0,c
  1105  0006A8                     l1771:
  1106                           
  1107                           ;./lcd.h: 137:         LCDDat(data[i]);
  1108  0006A8  5065               	movf	LCDAddSpecialCharacter@i^0,w,c
  1109  0006AA  2462               	addwf	LCDAddSpecialCharacter@data^0,w,c
  1110  0006AC  6ED9               	movwf	fsr2l,c
  1111  0006AE  0E00               	movlw	0
  1112  0006B0  2063               	addwfc	(LCDAddSpecialCharacter@data+1)^0,w,c
  1113  0006B2  6EDA               	movwf	fsr2h,c
  1114  0006B4  50DF               	movf	indf2,w,c
  1115  0006B6  EC67  F003         	call	_LCDDat
  1116  0006BA                     
  1117                           ;./lcd.h: 138:     }
  1118  0006BA  2A65               	incf	LCDAddSpecialCharacter@i^0,f,c
  1119  0006BC  0E07               	movlw	7
  1120  0006BE  6465               	cpfsgt	LCDAddSpecialCharacter@i^0,c
  1121  0006C0  EF64  F003         	goto	u871
  1122  0006C4  EF66  F003         	goto	u870
  1123  0006C8                     u871:
  1124  0006C8  EF54  F003         	goto	l1771
  1125  0006CC                     u870:
  1126  0006CC  0012               	return		;funcret
  1127  0006CE                     __end_of_LCDAddSpecialCharacter:
  1128                           	callstack 0
  1129                           
  1130 ;; *************** function _LCDDat *****************
  1131 ;; Defined at:
  1132 ;;		line 58 in file "./lcd.h"
  1133 ;; Parameters:    Size  Location     Type
  1134 ;;  dat             1    wreg     unsigned char 
  1135 ;; Auto vars:     Size  Location     Type
  1136 ;;  dat             1   12[COMRAM] unsigned char 
  1137 ;; Return value:  Size  Location     Type
  1138 ;;                  1    wreg      void 
  1139 ;; Registers used:
  1140 ;;		wreg
  1141 ;; Tracked objects:
  1142 ;;		On entry : 0/0
  1143 ;;		On exit  : 0/0
  1144 ;;		Unchanged: 0/0
  1145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1147 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1148 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1149 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1150 ;;Total ram usage:        2 bytes
  1151 ;; Hardware stack levels used:    1
  1152 ;; Hardware stack levels required when called:    4
  1153 ;; This function calls:
  1154 ;;		Nothing
  1155 ;; This function is called by:
  1156 ;;		_LCDAddSpecialCharacter
  1157 ;;		_setLCD
  1158 ;;		_LCDStr
  1159 ;; This function uses a non-reentrant model
  1160 ;;
  1161                           
  1162                           	psect	text5
  1163  0006CE                     __ptext5:
  1164                           	callstack 0
  1165  0006CE                     _LCDDat:
  1166                           	callstack 25
  1167                           
  1168                           ;incstack = 0
  1169                           ;LCDDat@dat stored from wreg
  1170  0006CE  6E61               	movwf	LCDDat@dat^0,c
  1171  0006D0                     
  1172                           ;./lcd.h: 59:   PORTEbits.RE1 = 0;
  1173  0006D0  9284               	bcf	132,1,c	;volatile
  1174                           
  1175                           ;./lcd.h: 60:   PORTEbits.RE2 = 1;
  1176  0006D2  8484               	bsf	132,2,c	;volatile
  1177  0006D4                     
  1178                           ;./lcd.h: 61:   PORTD = dat;
  1179  0006D4  C061  FF83         	movff	LCDDat@dat,3971	;volatile
  1180  0006D8                     
  1181                           ;./lcd.h: 62:   PORTEbits.RE1 = 1;
  1182  0006D8  8284               	bsf	132,1,c	;volatile
  1183  0006DA                     
  1184                           ;./lcd.h: 63:   _delay((unsigned long)((2000)*(40000000L/4000000.0)));
  1185  0006DA  0E1A               	movlw	26
  1186  0006DC  6E60               	movwf	??_LCDDat^0,c
  1187  0006DE  0EF8               	movlw	248
  1188  0006E0                     u967:
  1189  0006E0  2EE8               	decfsz	wreg,f,c
  1190  0006E2  D7FE               	bra	u967
  1191  0006E4  2E60               	decfsz	??_LCDDat^0,f,c
  1192  0006E6  D7FC               	bra	u967
  1193  0006E8  D000               	nop2	
  1194  0006EA                     
  1195                           ;./lcd.h: 64:   PORTEbits.RE1 = 0;
  1196  0006EA  9284               	bcf	132,1,c	;volatile
  1197  0006EC                     
  1198                           ;./lcd.h: 65:   _delay((unsigned long)((2000)*(40000000L/4000000.0)));
  1199  0006EC  0E1A               	movlw	26
  1200  0006EE  6E60               	movwf	??_LCDDat^0,c
  1201  0006F0  0EF8               	movlw	248
  1202  0006F2                     u977:
  1203  0006F2  2EE8               	decfsz	wreg,f,c
  1204  0006F4  D7FE               	bra	u977
  1205  0006F6  2E60               	decfsz	??_LCDDat^0,f,c
  1206  0006F8  D7FC               	bra	u977
  1207  0006FA  D000               	nop2	
  1208  0006FC                     
  1209                           ;./lcd.h: 66:   PORTEbits.RE2 = 0;
  1210  0006FC  9484               	bcf	132,2,c	;volatile
  1211  0006FE  0012               	return		;funcret
  1212  000700                     __end_of_LCDDat:
  1213                           	callstack 0
  1214                           
  1215 ;; *************** function _InitLCD *****************
  1216 ;; Defined at:
  1217 ;;		line 108 in file "./lcd.h"
  1218 ;; Parameters:    Size  Location     Type
  1219 ;;		None
  1220 ;; Auto vars:     Size  Location     Type
  1221 ;;		None
  1222 ;; Return value:  Size  Location     Type
  1223 ;;                  1    wreg      void 
  1224 ;; Registers used:
  1225 ;;		wreg, status,2, cstack
  1226 ;; Tracked objects:
  1227 ;;		On entry : 0/0
  1228 ;;		On exit  : 0/0
  1229 ;;		Unchanged: 0/0
  1230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1234 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1235 ;;Total ram usage:        0 bytes
  1236 ;; Hardware stack levels used:    1
  1237 ;; Hardware stack levels required when called:    5
  1238 ;; This function calls:
  1239 ;;		_LCDCmd
  1240 ;; This function is called by:
  1241 ;;		_main
  1242 ;; This function uses a non-reentrant model
  1243 ;;
  1244                           
  1245                           	psect	text6
  1246  000700                     __ptext6:
  1247                           	callstack 0
  1248  000700                     _InitLCD:
  1249                           	callstack 25
  1250  000700                     
  1251                           ;./lcd.h: 109:   TRISEbits.RE1 = 0;
  1252  000700  9296               	bcf	150,1,c	;volatile
  1253                           
  1254                           ;./lcd.h: 110:   TRISEbits.RE2 = 0;
  1255  000702  9496               	bcf	150,2,c	;volatile
  1256  000704                     
  1257                           ;./lcd.h: 111:   TRISD = 0;
  1258  000704  0E00               	movlw	0
  1259  000706  6E95               	movwf	149,c	;volatile
  1260  000708                     
  1261                           ;./lcd.h: 113:   PORTEbits.RE1 = 0;
  1262  000708  9284               	bcf	132,1,c	;volatile
  1263  00070A                     
  1264                           ;./lcd.h: 114:   PORTEbits.RE2 = 0;
  1265  00070A  9484               	bcf	132,2,c	;volatile
  1266  00070C                     
  1267                           ;./lcd.h: 115:   LCDCmd(0x38);
  1268  00070C  0E38               	movlw	56
  1269  00070E  ECB2  F003         	call	_LCDCmd
  1270  000712                     
  1271                           ;./lcd.h: 116:   LCDCmd(0x08);
  1272  000712  0E08               	movlw	8
  1273  000714  ECB2  F003         	call	_LCDCmd
  1274  000718                     
  1275                           ;./lcd.h: 117:   LCDCmd(0x0C);
  1276  000718  0E0C               	movlw	12
  1277  00071A  ECB2  F003         	call	_LCDCmd
  1278  00071E                     
  1279                           ;./lcd.h: 118:   LCDCmd(0x06);
  1280  00071E  0E06               	movlw	6
  1281  000720  ECB2  F003         	call	_LCDCmd
  1282  000724                     
  1283                           ;./lcd.h: 119:   LCDCmd(0x01);
  1284  000724  0E01               	movlw	1
  1285  000726  ECB2  F003         	call	_LCDCmd
  1286  00072A                     
  1287                           ;./lcd.h: 120:   LCDCmd(0x80);
  1288  00072A  0E80               	movlw	128
  1289  00072C  ECB2  F003         	call	_LCDCmd
  1290  000730  0012               	return		;funcret
  1291  000732                     __end_of_InitLCD:
  1292                           	callstack 0
  1293                           
  1294 ;; *************** function _LCDCmd *****************
  1295 ;; Defined at:
  1296 ;;		line 48 in file "./lcd.h"
  1297 ;; Parameters:    Size  Location     Type
  1298 ;;  cmd             1    wreg     unsigned char 
  1299 ;; Auto vars:     Size  Location     Type
  1300 ;;  cmd             1   12[COMRAM] unsigned char 
  1301 ;; Return value:  Size  Location     Type
  1302 ;;                  1    wreg      void 
  1303 ;; Registers used:
  1304 ;;		wreg
  1305 ;; Tracked objects:
  1306 ;;		On entry : 0/0
  1307 ;;		On exit  : 0/0
  1308 ;;		Unchanged: 0/0
  1309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1311 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1312 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1313 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1314 ;;Total ram usage:        2 bytes
  1315 ;; Hardware stack levels used:    1
  1316 ;; Hardware stack levels required when called:    4
  1317 ;; This function calls:
  1318 ;;		Nothing
  1319 ;; This function is called by:
  1320 ;;		_LCDGoto
  1321 ;;		_InitLCD
  1322 ;;		_LCDAddSpecialCharacter
  1323 ;;		_main
  1324 ;; This function uses a non-reentrant model
  1325 ;;
  1326                           
  1327                           	psect	text7
  1328  000764                     __ptext7:
  1329                           	callstack 0
  1330  000764                     _LCDCmd:
  1331                           	callstack 24
  1332                           
  1333                           ;incstack = 0
  1334                           ;LCDCmd@cmd stored from wreg
  1335  000764  6E61               	movwf	LCDCmd@cmd^0,c
  1336  000766                     
  1337                           ;./lcd.h: 49:   PORTEbits.RE1 = 0;
  1338  000766  9284               	bcf	132,1,c	;volatile
  1339                           
  1340                           ;./lcd.h: 50:   PORTEbits.RE2 = 0;
  1341  000768  9484               	bcf	132,2,c	;volatile
  1342  00076A                     
  1343                           ;./lcd.h: 51:   PORTD = cmd;
  1344  00076A  C061  FF83         	movff	LCDCmd@cmd,3971	;volatile
  1345  00076E                     
  1346                           ;./lcd.h: 52:   PORTEbits.RE1 = 1;
  1347  00076E  8284               	bsf	132,1,c	;volatile
  1348  000770                     
  1349                           ;./lcd.h: 53:   _delay((unsigned long)((2000)*(40000000L/4000000.0)));
  1350  000770  0E1A               	movlw	26
  1351  000772  6E60               	movwf	??_LCDCmd^0,c
  1352  000774  0EF8               	movlw	248
  1353  000776                     u987:
  1354  000776  2EE8               	decfsz	wreg,f,c
  1355  000778  D7FE               	bra	u987
  1356  00077A  2E60               	decfsz	??_LCDCmd^0,f,c
  1357  00077C  D7FC               	bra	u987
  1358  00077E  D000               	nop2	
  1359  000780                     
  1360                           ;./lcd.h: 54:   PORTEbits.RE1 = 0;
  1361  000780  9284               	bcf	132,1,c	;volatile
  1362  000782                     
  1363                           ;./lcd.h: 55:   _delay((unsigned long)((2000)*(40000000L/4000000.0)));
  1364  000782  0E1A               	movlw	26
  1365  000784  6E60               	movwf	??_LCDCmd^0,c
  1366  000786  0EF8               	movlw	248
  1367  000788                     u997:
  1368  000788  2EE8               	decfsz	wreg,f,c
  1369  00078A  D7FE               	bra	u997
  1370  00078C  2E60               	decfsz	??_LCDCmd^0,f,c
  1371  00078E  D7FC               	bra	u997
  1372  000790  D000               	nop2	
  1373  000792  0012               	return		;funcret
  1374  000794                     __end_of_LCDCmd:
  1375                           	callstack 0
  1376                           
  1377 ;; *************** function _FNC *****************
  1378 ;; Defined at:
  1379 ;;		line 30 in file "main.c"
  1380 ;; Parameters:    Size  Location     Type
  1381 ;;		None
  1382 ;; Auto vars:     Size  Location     Type
  1383 ;;		None
  1384 ;; Return value:  Size  Location     Type
  1385 ;;                  1    wreg      void 
  1386 ;; Registers used:
  1387 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1388 ;; Tracked objects:
  1389 ;;		On entry : 0/0
  1390 ;;		On exit  : 0/0
  1391 ;;		Unchanged: 0/0
  1392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1395 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1396 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1397 ;;Total ram usage:        3 bytes
  1398 ;; Hardware stack levels used:    1
  1399 ;; Hardware stack levels required when called:    3
  1400 ;; This function calls:
  1401 ;;		i2_LCDCmd
  1402 ;;		i2_setLCD
  1403 ;; This function is called by:
  1404 ;;		Interrupt level 2
  1405 ;; This function uses a non-reentrant model
  1406 ;;
  1407                           
  1408                           	psect	intcode
  1409  000008                     __pintcode:
  1410                           	callstack 0
  1411  000008                     _FNC:
  1412                           	callstack 24
  1413                           
  1414                           ;incstack = 0
  1415  000008  826B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1416  00000A  ED73  F001         	call	int_func,f	;refresh shadow registers
  1417                           
  1418                           	psect	intcode_body
  1419  0002E6                     __pintcode_body:
  1420                           	callstack 24
  1421  0002E6                     int_func:
  1422                           	callstack 24
  1423  0002E6  0006               	pop		; remove dummy address from shadow register refresh
  1424  0002E8  CFD9 F05E          	movff	fsr2l,??_FNC+1
  1425  0002EC  CFDA F05F          	movff	fsr2h,??_FNC+2
  1426  0002F0                     
  1427                           ;main.c: 32:     if(INTCONbits.INT0IF)
  1428  0002F0  A2F2               	btfss	242,1,c	;volatile
  1429  0002F2  EF7D  F001         	goto	i2u72_41
  1430  0002F6  EF7F  F001         	goto	i2u72_40
  1431  0002FA                     i2u72_41:
  1432  0002FA  EF82  F001         	goto	i2l1595
  1433  0002FE                     i2u72_40:
  1434  0002FE                     
  1435                           ;main.c: 33:     {;main.c: 35:         CONVERT = 1;
  1436  0002FE  0E01               	movlw	1
  1437  000300  6E6A               	movwf	_CONVERT^0,c	;volatile
  1438  000302                     
  1439                           ;main.c: 36:         INTCONbits.INT0IF = 0;
  1440  000302  92F2               	bcf	242,1,c	;volatile
  1441  000304                     i2l1595:
  1442                           
  1443                           ;main.c: 38:     if(INTCONbits.RBIF)
  1444  000304  A0F2               	btfss	242,0,c	;volatile
  1445  000306  EF87  F001         	goto	i2u73_41
  1446  00030A  EF89  F001         	goto	i2u73_40
  1447  00030E                     i2u73_41:
  1448  00030E  EF1F  F002         	goto	i2l162
  1449  000312                     i2u73_40:
  1450  000312                     
  1451                           ;main.c: 39:     {;main.c: 40:         if (PORTBbits.RB4 == 1)
  1452  000312  A881               	btfss	129,4,c	;volatile
  1453  000314  EF8E  F001         	goto	i2u74_41
  1454  000318  EF90  F001         	goto	i2u74_40
  1455  00031C                     i2u74_41:
  1456  00031C  EFAD  F001         	goto	i2l151
  1457  000320                     i2u74_40:
  1458  000320                     
  1459                           ;main.c: 41:         {;main.c: 42:             if(locations[selectedChar][1] != 1) locat
      +                          ions[selectedChar][1]--;
  1460  000320  90D8               	bcf	status,0,c
  1461  000322  3468               	rlcf	_selectedChar^0,w,c
  1462  000324  6ED9               	movwf	fsr2l,c
  1463  000326  3469               	rlcf	(_selectedChar+1)^0,w,c
  1464  000328  6EDA               	movwf	fsr2h,c
  1465  00032A  0E02               	movlw	low (_locations+1)
  1466  00032C  26D9               	addwf	fsr2l,f,c
  1467  00032E  0E00               	movlw	high (_locations+1)
  1468  000330  22DA               	addwfc	fsr2h,f,c
  1469  000332  04DE               	decf	postinc2,w,c
  1470  000334  B4D8               	btfsc	status,2,c
  1471  000336  EF9F  F001         	goto	i2u75_41
  1472  00033A  EFA1  F001         	goto	i2u75_40
  1473  00033E                     i2u75_41:
  1474  00033E  EF19  F002         	goto	i2l1615
  1475  000342                     i2u75_40:
  1476  000342  90D8               	bcf	status,0,c
  1477  000344  3468               	rlcf	_selectedChar^0,w,c
  1478  000346  6ED9               	movwf	fsr2l,c
  1479  000348  3469               	rlcf	(_selectedChar+1)^0,w,c
  1480  00034A  6EDA               	movwf	fsr2h,c
  1481  00034C  0E02               	movlw	low (_locations+1)
  1482  00034E  26D9               	addwf	fsr2l,f,c
  1483  000350  0E00               	movlw	high (_locations+1)
  1484  000352  22DA               	addwfc	fsr2h,f,c
  1485  000354  06DF               	decf	indf2,f,c
  1486  000356  EF19  F002         	goto	i2l1615
  1487  00035A                     i2l151:
  1488  00035A  AA81               	btfss	129,5,c	;volatile
  1489  00035C  EFB2  F001         	goto	i2u76_41
  1490  000360  EFB4  F001         	goto	i2u76_40
  1491  000364                     i2u76_41:
  1492  000364  EFD2  F001         	goto	i2l154
  1493  000368                     i2u76_40:
  1494  000368                     
  1495                           ;main.c: 45:         {;main.c: 46:             if(locations[selectedChar][0] != 16) loca
      +                          tions[selectedChar][0]++;
  1496  000368  90D8               	bcf	status,0,c
  1497  00036A  3468               	rlcf	_selectedChar^0,w,c
  1498  00036C  6ED9               	movwf	fsr2l,c
  1499  00036E  3469               	rlcf	(_selectedChar+1)^0,w,c
  1500  000370  6EDA               	movwf	fsr2h,c
  1501  000372  0E01               	movlw	low _locations
  1502  000374  26D9               	addwf	fsr2l,f,c
  1503  000376  0E00               	movlw	high _locations
  1504  000378  22DA               	addwfc	fsr2h,f,c
  1505  00037A  0E10               	movlw	16
  1506  00037C  18DE               	xorwf	postinc2,w,c
  1507  00037E  B4D8               	btfsc	status,2,c
  1508  000380  EFC4  F001         	goto	i2u77_41
  1509  000384  EFC6  F001         	goto	i2u77_40
  1510  000388                     i2u77_41:
  1511  000388  EF19  F002         	goto	i2l1615
  1512  00038C                     i2u77_40:
  1513  00038C  90D8               	bcf	status,0,c
  1514  00038E  3468               	rlcf	_selectedChar^0,w,c
  1515  000390  6ED9               	movwf	fsr2l,c
  1516  000392  3469               	rlcf	(_selectedChar+1)^0,w,c
  1517  000394  6EDA               	movwf	fsr2h,c
  1518  000396  0E01               	movlw	low _locations
  1519  000398  26D9               	addwf	fsr2l,f,c
  1520  00039A  0E00               	movlw	high _locations
  1521  00039C  22DA               	addwfc	fsr2h,f,c
  1522  00039E  2ADF               	incf	indf2,f,c
  1523  0003A0  EF19  F002         	goto	i2l1615
  1524  0003A4                     i2l154:
  1525  0003A4  AC81               	btfss	129,6,c	;volatile
  1526  0003A6  EFD7  F001         	goto	i2u78_41
  1527  0003AA  EFD9  F001         	goto	i2u78_40
  1528  0003AE                     i2u78_41:
  1529  0003AE  EFF7  F001         	goto	i2l157
  1530  0003B2                     i2u78_40:
  1531  0003B2                     
  1532                           ;main.c: 49:         {;main.c: 50:             if(locations[selectedChar][1] != 4) locat
      +                          ions[selectedChar][1]++;
  1533  0003B2  90D8               	bcf	status,0,c
  1534  0003B4  3468               	rlcf	_selectedChar^0,w,c
  1535  0003B6  6ED9               	movwf	fsr2l,c
  1536  0003B8  3469               	rlcf	(_selectedChar+1)^0,w,c
  1537  0003BA  6EDA               	movwf	fsr2h,c
  1538  0003BC  0E02               	movlw	low (_locations+1)
  1539  0003BE  26D9               	addwf	fsr2l,f,c
  1540  0003C0  0E00               	movlw	high (_locations+1)
  1541  0003C2  22DA               	addwfc	fsr2h,f,c
  1542  0003C4  0E04               	movlw	4
  1543  0003C6  18DE               	xorwf	postinc2,w,c
  1544  0003C8  B4D8               	btfsc	status,2,c
  1545  0003CA  EFE9  F001         	goto	i2u79_41
  1546  0003CE  EFEB  F001         	goto	i2u79_40
  1547  0003D2                     i2u79_41:
  1548  0003D2  EF19  F002         	goto	i2l1615
  1549  0003D6                     i2u79_40:
  1550  0003D6  90D8               	bcf	status,0,c
  1551  0003D8  3468               	rlcf	_selectedChar^0,w,c
  1552  0003DA  6ED9               	movwf	fsr2l,c
  1553  0003DC  3469               	rlcf	(_selectedChar+1)^0,w,c
  1554  0003DE  6EDA               	movwf	fsr2h,c
  1555  0003E0  0E02               	movlw	low (_locations+1)
  1556  0003E2  26D9               	addwf	fsr2l,f,c
  1557  0003E4  0E00               	movlw	high (_locations+1)
  1558  0003E6  22DA               	addwfc	fsr2h,f,c
  1559  0003E8  2ADF               	incf	indf2,f,c
  1560  0003EA  EF19  F002         	goto	i2l1615
  1561  0003EE                     i2l157:
  1562  0003EE  AE81               	btfss	129,7,c	;volatile
  1563  0003F0  EFFC  F001         	goto	i2u80_41
  1564  0003F4  EFFE  F001         	goto	i2u80_40
  1565  0003F8                     i2u80_41:
  1566  0003F8  EF19  F002         	goto	i2l1615
  1567  0003FC                     i2u80_40:
  1568  0003FC                     
  1569                           ;main.c: 53:         {;main.c: 54:             if(locations[selectedChar][0] != 1) locat
      +                          ions[selectedChar][0]--;
  1570  0003FC  90D8               	bcf	status,0,c
  1571  0003FE  3468               	rlcf	_selectedChar^0,w,c
  1572  000400  6ED9               	movwf	fsr2l,c
  1573  000402  3469               	rlcf	(_selectedChar+1)^0,w,c
  1574  000404  6EDA               	movwf	fsr2h,c
  1575  000406  0E01               	movlw	low _locations
  1576  000408  26D9               	addwf	fsr2l,f,c
  1577  00040A  0E00               	movlw	high _locations
  1578  00040C  22DA               	addwfc	fsr2h,f,c
  1579  00040E  04DE               	decf	postinc2,w,c
  1580  000410  B4D8               	btfsc	status,2,c
  1581  000412  EF0D  F002         	goto	i2u81_41
  1582  000416  EF0F  F002         	goto	i2u81_40
  1583  00041A                     i2u81_41:
  1584  00041A  EF19  F002         	goto	i2l1615
  1585  00041E                     i2u81_40:
  1586  00041E  90D8               	bcf	status,0,c
  1587  000420  3468               	rlcf	_selectedChar^0,w,c
  1588  000422  6ED9               	movwf	fsr2l,c
  1589  000424  3469               	rlcf	(_selectedChar+1)^0,w,c
  1590  000426  6EDA               	movwf	fsr2h,c
  1591  000428  0E01               	movlw	low _locations
  1592  00042A  26D9               	addwf	fsr2l,f,c
  1593  00042C  0E00               	movlw	high _locations
  1594  00042E  22DA               	addwfc	fsr2h,f,c
  1595  000430  06DF               	decf	indf2,f,c
  1596  000432                     i2l1615:
  1597                           
  1598                           ;main.c: 56:             LCDCmd(0x01);
  1599  000432  0E01               	movlw	1
  1600  000434  ECCA  F003         	call	i2_LCDCmd
  1601  000438                     
  1602                           ;main.c: 57:             setLCD();
  1603  000438  ECBE  F000         	call	i2_setLCD	;wreg free
  1604  00043C                     
  1605                           ;main.c: 59:             INTCONbits.RBIF = 0;
  1606  00043C  90F2               	bcf	242,0,c	;volatile
  1607  00043E                     i2l162:
  1608  00043E  C05F  FFDA         	movff	??_FNC+2,fsr2h
  1609  000442  C05E  FFD9         	movff	??_FNC+1,fsr2l
  1610  000446  926B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1611  000448  0011               	retfie		f
  1612  00044A                     __end_of_FNC:
  1613                           	callstack 0
  1614                           
  1615 ;; *************** function i2_setLCD *****************
  1616 ;; Defined at:
  1617 ;;		line 63 in file "main.c"
  1618 ;; Parameters:    Size  Location     Type
  1619 ;;		None
  1620 ;; Auto vars:     Size  Location     Type
  1621 ;;  i               2    6[COMRAM] unsigned short 
  1622 ;; Return value:  Size  Location     Type
  1623 ;;                  1    wreg      void 
  1624 ;; Registers used:
  1625 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1626 ;; Tracked objects:
  1627 ;;		On entry : 0/0
  1628 ;;		On exit  : 0/0
  1629 ;;		Unchanged: 0/0
  1630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1632 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1633 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1634 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1635 ;;Total ram usage:        4 bytes
  1636 ;; Hardware stack levels used:    1
  1637 ;; Hardware stack levels required when called:    2
  1638 ;; This function calls:
  1639 ;;		i2_LCDDat
  1640 ;;		i2_LCDGoto
  1641 ;; This function is called by:
  1642 ;;		_FNC
  1643 ;; This function uses a non-reentrant model
  1644 ;;
  1645                           
  1646                           	psect	text9
  1647  00017C                     __ptext9:
  1648                           	callstack 0
  1649  00017C                     i2_setLCD:
  1650                           	callstack 24
  1651  00017C                     
  1652                           ;main.c: 65:     for(unsigned short i = 0; i < 5; i++)
  1653  00017C  0E00               	movlw	0
  1654  00017E  6E5C               	movwf	(i2setLCD@i+1)^0,c
  1655  000180  0E00               	movlw	0
  1656  000182  6E5B               	movwf	i2setLCD@i^0,c
  1657  000184                     i2l1457:
  1658                           
  1659                           ;main.c: 66:     {;main.c: 67:         if(selectedChar == i)
  1660  000184  505B               	movf	i2setLCD@i^0,w,c
  1661  000186  1868               	xorwf	_selectedChar^0,w,c
  1662  000188  E107               	bnz	i2u53_41
  1663  00018A  505C               	movf	(i2setLCD@i+1)^0,w,c
  1664  00018C  1869               	xorwf	(_selectedChar+1)^0,w,c
  1665  00018E  A4D8               	btfss	status,2,c
  1666  000190  EFCC  F000         	goto	i2u53_41
  1667  000194  EFCE  F000         	goto	i2u53_40
  1668  000198                     i2u53_41:
  1669  000198  EF11  F001         	goto	i2l1469
  1670  00019C                     i2u53_40:
  1671  00019C                     
  1672                           ;main.c: 68:         {;main.c: 69:             if(i < 2)
  1673  00019C  505C               	movf	(i2setLCD@i+1)^0,w,c
  1674  00019E  E107               	bnz	i2u54_41
  1675  0001A0  0E02               	movlw	2
  1676  0001A2  5C5B               	subwf	i2setLCD@i^0,w,c
  1677  0001A4  B0D8               	btfsc	status,0,c
  1678  0001A6  EFD7  F000         	goto	i2u54_41
  1679  0001AA  EFD9  F000         	goto	i2u54_40
  1680  0001AE                     i2u54_41:
  1681  0001AE  EFF5  F000         	goto	i2l1465
  1682  0001B2                     i2u54_40:
  1683  0001B2                     
  1684                           ;main.c: 70:             {;main.c: 71:                 LCDGoto(locations[i][0],locations
      +                          [i][1]);
  1685  0001B2  90D8               	bcf	status,0,c
  1686  0001B4  345B               	rlcf	i2setLCD@i^0,w,c
  1687  0001B6  6ED9               	movwf	fsr2l,c
  1688  0001B8  345C               	rlcf	(i2setLCD@i+1)^0,w,c
  1689  0001BA  6EDA               	movwf	fsr2h,c
  1690  0001BC  0E02               	movlw	low (_locations+1)
  1691  0001BE  26D9               	addwf	fsr2l,f,c
  1692  0001C0  0E00               	movlw	high (_locations+1)
  1693  0001C2  22DA               	addwfc	fsr2h,f,c
  1694  0001C4  50DF               	movf	indf2,w,c
  1695  0001C6  6E57               	movwf	i2LCDGoto@p_1^0,c
  1696  0001C8  90D8               	bcf	status,0,c
  1697  0001CA  345B               	rlcf	i2setLCD@i^0,w,c
  1698  0001CC  6ED9               	movwf	fsr2l,c
  1699  0001CE  345C               	rlcf	(i2setLCD@i+1)^0,w,c
  1700  0001D0  6EDA               	movwf	fsr2h,c
  1701  0001D2  0E01               	movlw	low _locations
  1702  0001D4  26D9               	addwf	fsr2l,f,c
  1703  0001D6  0E00               	movlw	high _locations
  1704  0001D8  22DA               	addwfc	fsr2h,f,c
  1705  0001DA  50DF               	movf	indf2,w,c
  1706  0001DC  ECC7  F002         	call	i2_LCDGoto
  1707  0001E0                     
  1708                           ;main.c: 72:                 LCDDat(1);
  1709  0001E0  0E01               	movlw	1
  1710  0001E2  EC99  F003         	call	i2_LCDDat
  1711                           
  1712                           ;main.c: 73:             }
  1713  0001E6  EF65  F001         	goto	i2l1485
  1714  0001EA                     i2l1465:
  1715                           
  1716                           ;main.c: 75:             {;main.c: 76:                 LCDGoto(locations[i][0],locations
      +                          [i][1]);
  1717  0001EA  90D8               	bcf	status,0,c
  1718  0001EC  345B               	rlcf	i2setLCD@i^0,w,c
  1719  0001EE  6ED9               	movwf	fsr2l,c
  1720  0001F0  345C               	rlcf	(i2setLCD@i+1)^0,w,c
  1721  0001F2  6EDA               	movwf	fsr2h,c
  1722  0001F4  0E02               	movlw	low (_locations+1)
  1723  0001F6  26D9               	addwf	fsr2l,f,c
  1724  0001F8  0E00               	movlw	high (_locations+1)
  1725  0001FA  22DA               	addwfc	fsr2h,f,c
  1726  0001FC  50DF               	movf	indf2,w,c
  1727  0001FE  6E57               	movwf	i2LCDGoto@p_1^0,c
  1728  000200  90D8               	bcf	status,0,c
  1729  000202  345B               	rlcf	i2setLCD@i^0,w,c
  1730  000204  6ED9               	movwf	fsr2l,c
  1731  000206  345C               	rlcf	(i2setLCD@i+1)^0,w,c
  1732  000208  6EDA               	movwf	fsr2h,c
  1733  00020A  0E01               	movlw	low _locations
  1734  00020C  26D9               	addwf	fsr2l,f,c
  1735  00020E  0E00               	movlw	high _locations
  1736  000210  22DA               	addwfc	fsr2h,f,c
  1737  000212  50DF               	movf	indf2,w,c
  1738  000214  ECC7  F002         	call	i2_LCDGoto
  1739  000218                     
  1740                           ;main.c: 77:                 LCDDat(4);
  1741  000218  0E04               	movlw	4
  1742  00021A  EC99  F003         	call	i2_LCDDat
  1743  00021E  EF65  F001         	goto	i2l1485
  1744  000222                     i2l1469:
  1745                           
  1746                           ;main.c: 81:         {;main.c: 82:             LCDGoto(locations[i][0],locations[i][1]);
  1747  000222  90D8               	bcf	status,0,c
  1748  000224  345B               	rlcf	i2setLCD@i^0,w,c
  1749  000226  6ED9               	movwf	fsr2l,c
  1750  000228  345C               	rlcf	(i2setLCD@i+1)^0,w,c
  1751  00022A  6EDA               	movwf	fsr2h,c
  1752  00022C  0E02               	movlw	low (_locations+1)
  1753  00022E  26D9               	addwf	fsr2l,f,c
  1754  000230  0E00               	movlw	high (_locations+1)
  1755  000232  22DA               	addwfc	fsr2h,f,c
  1756  000234  50DF               	movf	indf2,w,c
  1757  000236  6E57               	movwf	i2LCDGoto@p_1^0,c
  1758  000238  90D8               	bcf	status,0,c
  1759  00023A  345B               	rlcf	i2setLCD@i^0,w,c
  1760  00023C  6ED9               	movwf	fsr2l,c
  1761  00023E  345C               	rlcf	(i2setLCD@i+1)^0,w,c
  1762  000240  6EDA               	movwf	fsr2h,c
  1763  000242  0E01               	movlw	low _locations
  1764  000244  26D9               	addwf	fsr2l,f,c
  1765  000246  0E00               	movlw	high _locations
  1766  000248  22DA               	addwfc	fsr2h,f,c
  1767  00024A  50DF               	movf	indf2,w,c
  1768  00024C  ECC7  F002         	call	i2_LCDGoto
  1769                           
  1770                           ;main.c: 83:             switch(i)
  1771  000250  EF43  F001         	goto	i2l1483
  1772  000254                     i2l1471:
  1773                           
  1774                           ;main.c: 86:                     LCDDat(0);
  1775  000254  0E00               	movlw	0
  1776  000256  EC99  F003         	call	i2_LCDDat
  1777                           
  1778                           ;main.c: 87:                     break;
  1779  00025A  EF65  F001         	goto	i2l1485
  1780  00025E                     i2l1473:
  1781                           
  1782                           ;main.c: 89:                     LCDDat(0);
  1783  00025E  0E00               	movlw	0
  1784  000260  EC99  F003         	call	i2_LCDDat
  1785                           
  1786                           ;main.c: 90:                     break;
  1787  000264  EF65  F001         	goto	i2l1485
  1788  000268                     i2l1475:
  1789                           
  1790                           ;main.c: 92:                     LCDDat(3);
  1791  000268  0E03               	movlw	3
  1792  00026A  EC99  F003         	call	i2_LCDDat
  1793                           
  1794                           ;main.c: 93:                     break;
  1795  00026E  EF65  F001         	goto	i2l1485
  1796  000272                     i2l1477:
  1797                           
  1798                           ;main.c: 95:                     LCDDat(3);
  1799  000272  0E03               	movlw	3
  1800  000274  EC99  F003         	call	i2_LCDDat
  1801                           
  1802                           ;main.c: 96:                     break;
  1803  000278  EF65  F001         	goto	i2l1485
  1804  00027C                     i2l1479:
  1805                           
  1806                           ;main.c: 98:                     LCDDat(6);
  1807  00027C  0E06               	movlw	6
  1808  00027E  EC99  F003         	call	i2_LCDDat
  1809                           
  1810                           ;main.c: 99:                     break;
  1811  000282  EF65  F001         	goto	i2l1485
  1812  000286                     i2l1483:
  1813  000286  C05B  F059         	movff	i2setLCD@i,??i2_setLCD
  1814  00028A  C05C  F05A         	movff	i2setLCD@i+1,??i2_setLCD+1
  1815                           
  1816                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1817                           ; Switch size 1, requested type "simple"
  1818                           ; Number of cases is 1, Range of values is 0 to 0
  1819                           ; switch strategies available:
  1820                           ; Name         Instructions Cycles
  1821                           ; simple_byte            4     3 (average)
  1822                           ;	Chosen strategy is simple_byte
  1823  00028E  505A               	movf	(??i2_setLCD+1)^0,w,c
  1824  000290  0A00               	xorlw	0	; case 0
  1825  000292  B4D8               	btfsc	status,2,c
  1826  000294  EF4E  F001         	goto	i2l1917
  1827  000298  EF65  F001         	goto	i2l1485
  1828  00029C                     i2l1917:
  1829                           
  1830                           ; Switch size 1, requested type "simple"
  1831                           ; Number of cases is 5, Range of values is 0 to 4
  1832                           ; switch strategies available:
  1833                           ; Name         Instructions Cycles
  1834                           ; simple_byte           16     9 (average)
  1835                           ;	Chosen strategy is simple_byte
  1836  00029C  5059               	movf	??i2_setLCD^0,w,c
  1837  00029E  0A00               	xorlw	0	; case 0
  1838  0002A0  B4D8               	btfsc	status,2,c
  1839  0002A2  EF2A  F001         	goto	i2l1471
  1840  0002A6  0A01               	xorlw	1	; case 1
  1841  0002A8  B4D8               	btfsc	status,2,c
  1842  0002AA  EF2F  F001         	goto	i2l1473
  1843  0002AE  0A03               	xorlw	3	; case 2
  1844  0002B0  B4D8               	btfsc	status,2,c
  1845  0002B2  EF34  F001         	goto	i2l1475
  1846  0002B6  0A01               	xorlw	1	; case 3
  1847  0002B8  B4D8               	btfsc	status,2,c
  1848  0002BA  EF39  F001         	goto	i2l1477
  1849  0002BE  0A07               	xorlw	7	; case 4
  1850  0002C0  B4D8               	btfsc	status,2,c
  1851  0002C2  EF3E  F001         	goto	i2l1479
  1852  0002C6  EF65  F001         	goto	i2l1485
  1853  0002CA                     i2l1485:
  1854                           
  1855                           ;main.c: 102:     }
  1856  0002CA  4A5B               	infsnz	i2setLCD@i^0,f,c
  1857  0002CC  2A5C               	incf	(i2setLCD@i+1)^0,f,c
  1858  0002CE  505C               	movf	(i2setLCD@i+1)^0,w,c
  1859  0002D0  E109               	bnz	i2u55_40
  1860  0002D2  0E05               	movlw	5
  1861  0002D4  5C5B               	subwf	i2setLCD@i^0,w,c
  1862  0002D6  A0D8               	btfss	status,0,c
  1863  0002D8  EF70  F001         	goto	i2u55_41
  1864  0002DC  EF72  F001         	goto	i2u55_40
  1865  0002E0                     i2u55_41:
  1866  0002E0  EFC2  F000         	goto	i2l1457
  1867  0002E4                     i2u55_40:
  1868  0002E4  0012               	return		;funcret
  1869  0002E6                     __end_ofi2_setLCD:
  1870                           	callstack 0
  1871                           
  1872 ;; *************** function i2_LCDGoto *****************
  1873 ;; Defined at:
  1874 ;;		line 72 in file "./lcd.h"
  1875 ;; Parameters:    Size  Location     Type
  1876 ;;  p_2             1    wreg     unsigned char 
  1877 ;;  p_1             1    2[COMRAM] unsigned char 
  1878 ;; Auto vars:     Size  Location     Type
  1879 ;;  p_2             1    3[COMRAM] unsigned char 
  1880 ;; Return value:  Size  Location     Type
  1881 ;;                  1    wreg      void 
  1882 ;; Registers used:
  1883 ;;		wreg, status,2, status,0, cstack
  1884 ;; Tracked objects:
  1885 ;;		On entry : 0/0
  1886 ;;		On exit  : 0/0
  1887 ;;		Unchanged: 0/0
  1888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1889 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1890 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1892 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1893 ;;Total ram usage:        2 bytes
  1894 ;; Hardware stack levels used:    1
  1895 ;; Hardware stack levels required when called:    1
  1896 ;; This function calls:
  1897 ;;		i2_LCDCmd
  1898 ;; This function is called by:
  1899 ;;		i2_setLCD
  1900 ;; This function uses a non-reentrant model
  1901 ;;
  1902                           
  1903                           	psect	text10
  1904  00058E                     __ptext10:
  1905                           	callstack 0
  1906  00058E                     i2_LCDGoto:
  1907                           	callstack 24
  1908                           
  1909                           ;incstack = 0
  1910                           ;i2LCDGoto@p_2 stored from wreg
  1911  00058E  6E58               	movwf	i2LCDGoto@p_2^0,c
  1912  000590                     
  1913                           ;./lcd.h: 73:   if(p_1==1) {
  1914  000590  0457               	decf	i2LCDGoto@p_1^0,w,c
  1915  000592  A4D8               	btfss	status,2,c
  1916  000594  EFCE  F002         	goto	i2u46_41
  1917  000598  EFD0  F002         	goto	i2u46_40
  1918  00059C                     i2u46_41:
  1919  00059C  EFD7  F002         	goto	i2l1359
  1920  0005A0                     i2u46_40:
  1921  0005A0                     
  1922                           ;./lcd.h: 74:     LCDCmd(0x80 +((p_2-1)%16));
  1923  0005A0  0458               	decf	i2LCDGoto@p_2^0,w,c
  1924  0005A2  0B0F               	andlw	15
  1925  0005A4  0F80               	addlw	128
  1926  0005A6  ECCA  F003         	call	i2_LCDCmd
  1927                           
  1928                           ;./lcd.h: 75:   }
  1929  0005AA  EFFC  F002         	goto	i2l1369
  1930  0005AE                     i2l1359:
  1931  0005AE  0E02               	movlw	2
  1932  0005B0  1857               	xorwf	i2LCDGoto@p_1^0,w,c
  1933  0005B2  A4D8               	btfss	status,2,c
  1934  0005B4  EFDE  F002         	goto	i2u47_41
  1935  0005B8  EFE0  F002         	goto	i2u47_40
  1936  0005BC                     i2u47_41:
  1937  0005BC  EFE7  F002         	goto	i2l1363
  1938  0005C0                     i2u47_40:
  1939  0005C0                     
  1940                           ;./lcd.h: 77:     LCDCmd(0xC0 +((p_2-1)%16));
  1941  0005C0  0458               	decf	i2LCDGoto@p_2^0,w,c
  1942  0005C2  0B0F               	andlw	15
  1943  0005C4  0FC0               	addlw	192
  1944  0005C6  ECCA  F003         	call	i2_LCDCmd
  1945                           
  1946                           ;./lcd.h: 78:   }
  1947  0005CA  EFFC  F002         	goto	i2l1369
  1948  0005CE                     i2l1363:
  1949  0005CE  0E03               	movlw	3
  1950  0005D0  1857               	xorwf	i2LCDGoto@p_1^0,w,c
  1951  0005D2  A4D8               	btfss	status,2,c
  1952  0005D4  EFEE  F002         	goto	i2u48_41
  1953  0005D8  EFF0  F002         	goto	i2u48_40
  1954  0005DC                     i2u48_41:
  1955  0005DC  EFF7  F002         	goto	i2l1367
  1956  0005E0                     i2u48_40:
  1957  0005E0                     
  1958                           ;./lcd.h: 80:     LCDCmd(0x90 +((p_2-1)%16));
  1959  0005E0  0458               	decf	i2LCDGoto@p_2^0,w,c
  1960  0005E2  0B0F               	andlw	15
  1961  0005E4  0F90               	addlw	144
  1962  0005E6  ECCA  F003         	call	i2_LCDCmd
  1963                           
  1964                           ;./lcd.h: 81:   }
  1965  0005EA  EFFC  F002         	goto	i2l1369
  1966  0005EE                     i2l1367:
  1967                           
  1968                           ;./lcd.h: 83:     LCDCmd(0xD0 +((p_2-1)%16));
  1969  0005EE  0458               	decf	i2LCDGoto@p_2^0,w,c
  1970  0005F0  0B0F               	andlw	15
  1971  0005F2  0FD0               	addlw	208
  1972  0005F4  ECCA  F003         	call	i2_LCDCmd
  1973  0005F8                     i2l1369:
  1974                           
  1975                           ;./lcd.h: 85:   lcd_x = p_2;
  1976  0005F8  C058  F014         	movff	i2LCDGoto@p_2,_lcd_x
  1977  0005FC                     
  1978                           ;./lcd.h: 86:   lcd_y = p_1;
  1979  0005FC  C057  F013         	movff	i2LCDGoto@p_1,_lcd_y
  1980  000600  0012               	return		;funcret
  1981  000602                     __end_ofi2_LCDGoto:
  1982                           	callstack 0
  1983                           
  1984 ;; *************** function i2_LCDCmd *****************
  1985 ;; Defined at:
  1986 ;;		line 48 in file "./lcd.h"
  1987 ;; Parameters:    Size  Location     Type
  1988 ;;  cmd             1    wreg     unsigned char 
  1989 ;; Auto vars:     Size  Location     Type
  1990 ;;  cmd             1    1[COMRAM] unsigned char 
  1991 ;; Return value:  Size  Location     Type
  1992 ;;                  1    wreg      void 
  1993 ;; Registers used:
  1994 ;;		wreg
  1995 ;; Tracked objects:
  1996 ;;		On entry : 0/0
  1997 ;;		On exit  : 0/0
  1998 ;;		Unchanged: 0/0
  1999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2001 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2002 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2003 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2004 ;;Total ram usage:        2 bytes
  2005 ;; Hardware stack levels used:    1
  2006 ;; This function calls:
  2007 ;;		Nothing
  2008 ;; This function is called by:
  2009 ;;		_FNC
  2010 ;;		i2_LCDGoto
  2011 ;; This function uses a non-reentrant model
  2012 ;;
  2013                           
  2014                           	psect	text11
  2015  000794                     __ptext11:
  2016                           	callstack 0
  2017  000794                     i2_LCDCmd:
  2018                           	callstack 24
  2019                           
  2020                           ;incstack = 0
  2021                           ;i2LCDCmd@cmd stored from wreg
  2022  000794  6E56               	movwf	i2LCDCmd@cmd^0,c
  2023  000796                     
  2024                           ;./lcd.h: 49:   PORTEbits.RE1 = 0;
  2025  000796  9284               	bcf	132,1,c	;volatile
  2026                           
  2027                           ;./lcd.h: 50:   PORTEbits.RE2 = 0;
  2028  000798  9484               	bcf	132,2,c	;volatile
  2029  00079A                     
  2030                           ;./lcd.h: 51:   PORTD = cmd;
  2031  00079A  C056  FF83         	movff	i2LCDCmd@cmd,3971	;volatile
  2032  00079E                     
  2033                           ;./lcd.h: 52:   PORTEbits.RE1 = 1;
  2034  00079E  8284               	bsf	132,1,c	;volatile
  2035  0007A0                     
  2036                           ;./lcd.h: 53:   _delay((unsigned long)((2000)*(40000000L/4000000.0)));
  2037  0007A0  0E1A               	movlw	26
  2038  0007A2  6E55               	movwf	??i2_LCDCmd^0,c
  2039  0007A4  0EF8               	movlw	248
  2040  0007A6                     i2u100_47:
  2041  0007A6  2EE8               	decfsz	wreg,f,c
  2042  0007A8  D7FE               	bra	i2u100_47
  2043  0007AA  2E55               	decfsz	??i2_LCDCmd^0,f,c
  2044  0007AC  D7FC               	bra	i2u100_47
  2045  0007AE  D000               	nop2	
  2046  0007B0                     
  2047                           ;./lcd.h: 54:   PORTEbits.RE1 = 0;
  2048  0007B0  9284               	bcf	132,1,c	;volatile
  2049  0007B2                     
  2050                           ;./lcd.h: 55:   _delay((unsigned long)((2000)*(40000000L/4000000.0)));
  2051  0007B2  0E1A               	movlw	26
  2052  0007B4  6E55               	movwf	??i2_LCDCmd^0,c
  2053  0007B6  0EF8               	movlw	248
  2054  0007B8                     i2u101_47:
  2055  0007B8  2EE8               	decfsz	wreg,f,c
  2056  0007BA  D7FE               	bra	i2u101_47
  2057  0007BC  2E55               	decfsz	??i2_LCDCmd^0,f,c
  2058  0007BE  D7FC               	bra	i2u101_47
  2059  0007C0  D000               	nop2	
  2060  0007C2  0012               	return		;funcret
  2061  0007C4                     __end_ofi2_LCDCmd:
  2062                           	callstack 0
  2063                           
  2064 ;; *************** function i2_LCDDat *****************
  2065 ;; Defined at:
  2066 ;;		line 58 in file "./lcd.h"
  2067 ;; Parameters:    Size  Location     Type
  2068 ;;  dat             1    wreg     unsigned char 
  2069 ;; Auto vars:     Size  Location     Type
  2070 ;;  dat             1    1[COMRAM] unsigned char 
  2071 ;; Return value:  Size  Location     Type
  2072 ;;                  1    wreg      void 
  2073 ;; Registers used:
  2074 ;;		wreg
  2075 ;; Tracked objects:
  2076 ;;		On entry : 0/0
  2077 ;;		On exit  : 0/0
  2078 ;;		Unchanged: 0/0
  2079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2081 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2082 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2083 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2084 ;;Total ram usage:        2 bytes
  2085 ;; Hardware stack levels used:    1
  2086 ;; This function calls:
  2087 ;;		Nothing
  2088 ;; This function is called by:
  2089 ;;		i2_setLCD
  2090 ;; This function uses a non-reentrant model
  2091 ;;
  2092                           
  2093                           	psect	text12
  2094  000732                     __ptext12:
  2095                           	callstack 0
  2096  000732                     i2_LCDDat:
  2097                           	callstack 25
  2098                           
  2099                           ;incstack = 0
  2100                           ;i2LCDDat@dat stored from wreg
  2101  000732  6E56               	movwf	i2LCDDat@dat^0,c
  2102  000734                     
  2103                           ;./lcd.h: 59:   PORTEbits.RE1 = 0;
  2104  000734  9284               	bcf	132,1,c	;volatile
  2105                           
  2106                           ;./lcd.h: 60:   PORTEbits.RE2 = 1;
  2107  000736  8484               	bsf	132,2,c	;volatile
  2108  000738                     
  2109                           ;./lcd.h: 61:   PORTD = dat;
  2110  000738  C056  FF83         	movff	i2LCDDat@dat,3971	;volatile
  2111  00073C                     
  2112                           ;./lcd.h: 62:   PORTEbits.RE1 = 1;
  2113  00073C  8284               	bsf	132,1,c	;volatile
  2114  00073E                     
  2115                           ;./lcd.h: 63:   _delay((unsigned long)((2000)*(40000000L/4000000.0)));
  2116  00073E  0E1A               	movlw	26
  2117  000740  6E55               	movwf	??i2_LCDDat^0,c
  2118  000742  0EF8               	movlw	248
  2119  000744                     i2u102_47:
  2120  000744  2EE8               	decfsz	wreg,f,c
  2121  000746  D7FE               	bra	i2u102_47
  2122  000748  2E55               	decfsz	??i2_LCDDat^0,f,c
  2123  00074A  D7FC               	bra	i2u102_47
  2124  00074C  D000               	nop2	
  2125  00074E                     
  2126                           ;./lcd.h: 64:   PORTEbits.RE1 = 0;
  2127  00074E  9284               	bcf	132,1,c	;volatile
  2128  000750                     
  2129                           ;./lcd.h: 65:   _delay((unsigned long)((2000)*(40000000L/4000000.0)));
  2130  000750  0E1A               	movlw	26
  2131  000752  6E55               	movwf	??i2_LCDDat^0,c
  2132  000754  0EF8               	movlw	248
  2133  000756                     i2u103_47:
  2134  000756  2EE8               	decfsz	wreg,f,c
  2135  000758  D7FE               	bra	i2u103_47
  2136  00075A  2E55               	decfsz	??i2_LCDDat^0,f,c
  2137  00075C  D7FC               	bra	i2u103_47
  2138  00075E  D000               	nop2	
  2139  000760                     
  2140                           ;./lcd.h: 66:   PORTEbits.RE2 = 0;
  2141  000760  9484               	bcf	132,2,c	;volatile
  2142  000762  0012               	return		;funcret
  2143  000764                     __end_ofi2_LCDDat:
  2144                           	callstack 0
  2145  0000                     
  2146                           	psect	rparam
  2147  0000                     
  2148                           	psect	temp
  2149  00006B                     btemp:
  2150                           	callstack 0
  2151  00006B                     	ds	1
  2152  0000                     int$flags	set	btemp
  2153  0000                     wtemp8	set	btemp+1
  2154  0000                     ttemp5	set	btemp+1
  2155  0000                     ttemp6	set	btemp+4
  2156  0000                     ttemp7	set	btemp+8
  2157                           
  2158                           	psect	idloc
  2159                           
  2160                           ;Config register IDLOC0 @ 0x200000
  2161                           ;	unspecified, using default values
  2162  200000                     	org	2097152
  2163  200000  FF                 	db	255
  2164                           
  2165                           ;Config register IDLOC1 @ 0x200001
  2166                           ;	unspecified, using default values
  2167  200001                     	org	2097153
  2168  200001  FF                 	db	255
  2169                           
  2170                           ;Config register IDLOC2 @ 0x200002
  2171                           ;	unspecified, using default values
  2172  200002                     	org	2097154
  2173  200002  FF                 	db	255
  2174                           
  2175                           ;Config register IDLOC3 @ 0x200003
  2176                           ;	unspecified, using default values
  2177  200003                     	org	2097155
  2178  200003  FF                 	db	255
  2179                           
  2180                           ;Config register IDLOC4 @ 0x200004
  2181                           ;	unspecified, using default values
  2182  200004                     	org	2097156
  2183  200004  FF                 	db	255
  2184                           
  2185                           ;Config register IDLOC5 @ 0x200005
  2186                           ;	unspecified, using default values
  2187  200005                     	org	2097157
  2188  200005  FF                 	db	255
  2189                           
  2190                           ;Config register IDLOC6 @ 0x200006
  2191                           ;	unspecified, using default values
  2192  200006                     	org	2097158
  2193  200006  FF                 	db	255
  2194                           
  2195                           ;Config register IDLOC7 @ 0x200007
  2196                           ;	unspecified, using default values
  2197  200007                     	org	2097159
  2198  200007  FF                 	db	255
  2199                           
  2200                           	psect	config
  2201                           
  2202                           ; Padding undefined space
  2203  300000                     	org	3145728
  2204  300000  FF                 	db	255
  2205                           
  2206                           ;Config register CONFIG1H @ 0x300001
  2207                           ;	Oscillator Selection bits
  2208                           ;	OSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  2209                           ;	Fail-Safe Clock Monitor Enable bit
  2210                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2211                           ;	Internal/External Oscillator Switchover bit
  2212                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2213  300001                     	org	3145729
  2214  300001  08                 	db	8
  2215                           
  2216                           ;Config register CONFIG2L @ 0x300002
  2217                           ;	Power-up Timer Enable bit
  2218                           ;	PWRT = OFF, PWRT disabled
  2219                           ;	Brown-out Reset Enable bits
  2220                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  2221                           ;	Brown Out Reset Voltage bits
  2222                           ;	BORV = 3, Minimum setting
  2223  300002                     	org	3145730
  2224  300002  1F                 	db	31
  2225                           
  2226                           ;Config register CONFIG2H @ 0x300003
  2227                           ;	Watchdog Timer Enable bit
  2228                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2229                           ;	Watchdog Timer Postscale Select bits
  2230                           ;	WDTPS = 32768, 1:32768
  2231  300003                     	org	3145731
  2232  300003  1E                 	db	30
  2233                           
  2234                           ; Padding undefined space
  2235  300004                     	org	3145732
  2236  300004  FF                 	db	255
  2237                           
  2238                           ;Config register CONFIG3H @ 0x300005
  2239                           ;	CCP2 MUX bit
  2240                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  2241                           ;	PORTB A/D Enable bit
  2242                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  2243                           ;	Low-Power Timer1 Oscillator Enable bit
  2244                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2245                           ;	MCLR Pin Enable bit
  2246                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2247  300005                     	org	3145733
  2248  300005  83                 	db	131
  2249                           
  2250                           ;Config register CONFIG4L @ 0x300006
  2251                           ;	Stack Full/Underflow Reset Enable bit
  2252                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2253                           ;	Single-Supply ICSP Enable bit
  2254                           ;	LVP = OFF, Single-Supply ICSP disabled
  2255                           ;	Extended Instruction Set Enable bit
  2256                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2257                           ;	Background Debugger Enable bit
  2258                           ;	DEBUG = 0x1, unprogrammed default
  2259  300006                     	org	3145734
  2260  300006  81                 	db	129
  2261                           
  2262                           ; Padding undefined space
  2263  300007                     	org	3145735
  2264  300007  FF                 	db	255
  2265                           
  2266                           ;Config register CONFIG5L @ 0x300008
  2267                           ;	Code Protection bit
  2268                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  2269                           ;	Code Protection bit
  2270                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  2271                           ;	Code Protection bit
  2272                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  2273                           ;	Code Protection bit
  2274                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  2275  300008                     	org	3145736
  2276  300008  0F                 	db	15
  2277                           
  2278                           ;Config register CONFIG5H @ 0x300009
  2279                           ;	Boot Block Code Protection bit
  2280                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  2281                           ;	Data EEPROM Code Protection bit
  2282                           ;	CPD = OFF, Data EEPROM not code-protected
  2283  300009                     	org	3145737
  2284  300009  C0                 	db	192
  2285                           
  2286                           ;Config register CONFIG6L @ 0x30000A
  2287                           ;	Write Protection bit
  2288                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  2289                           ;	Write Protection bit
  2290                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  2291                           ;	Write Protection bit
  2292                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  2293                           ;	Write Protection bit
  2294                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  2295  30000A                     	org	3145738
  2296  30000A  0F                 	db	15
  2297                           
  2298                           ;Config register CONFIG6H @ 0x30000B
  2299                           ;	Configuration Register Write Protection bit
  2300                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2301                           ;	Boot Block Write Protection bit
  2302                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  2303                           ;	Data EEPROM Write Protection bit
  2304                           ;	WRTD = OFF, Data EEPROM not write-protected
  2305  30000B                     	org	3145739
  2306  30000B  E0                 	db	224
  2307                           
  2308                           ;Config register CONFIG7L @ 0x30000C
  2309                           ;	Table Read Protection bit
  2310                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  2311                           ;	Table Read Protection bit
  2312                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2313                           ;	Table Read Protection bit
  2314                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  2315                           ;	Table Read Protection bit
  2316                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  2317  30000C                     	org	3145740
  2318  30000C  0F                 	db	15
  2319                           
  2320                           ;Config register CONFIG7H @ 0x30000D
  2321                           ;	Boot Block Table Read Protection bit
  2322                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  2323  30000D                     	org	3145741
  2324  30000D  40                 	db	64
  2325                           tosu	equ	0xFFF
  2326                           tosh	equ	0xFFE
  2327                           tosl	equ	0xFFD
  2328                           stkptr	equ	0xFFC
  2329                           pclatu	equ	0xFFB
  2330                           pclath	equ	0xFFA
  2331                           pcl	equ	0xFF9
  2332                           tblptru	equ	0xFF8
  2333                           tblptrh	equ	0xFF7
  2334                           tblptrl	equ	0xFF6
  2335                           tablat	equ	0xFF5
  2336                           prodh	equ	0xFF4
  2337                           prodl	equ	0xFF3
  2338                           indf0	equ	0xFEF
  2339                           postinc0	equ	0xFEE
  2340                           postdec0	equ	0xFED
  2341                           preinc0	equ	0xFEC
  2342                           plusw0	equ	0xFEB
  2343                           fsr0h	equ	0xFEA
  2344                           fsr0l	equ	0xFE9
  2345                           wreg	equ	0xFE8
  2346                           indf1	equ	0xFE7
  2347                           postinc1	equ	0xFE6
  2348                           postdec1	equ	0xFE5
  2349                           preinc1	equ	0xFE4
  2350                           plusw1	equ	0xFE3
  2351                           fsr1h	equ	0xFE2
  2352                           fsr1l	equ	0xFE1
  2353                           bsr	equ	0xFE0
  2354                           indf2	equ	0xFDF
  2355                           postinc2	equ	0xFDE
  2356                           postdec2	equ	0xFDD
  2357                           preinc2	equ	0xFDC
  2358                           plusw2	equ	0xFDB
  2359                           fsr2h	equ	0xFDA
  2360                           fsr2l	equ	0xFD9
  2361                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        84
    BSS         73
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     19     106
    BANK0           128     12      82
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    LCDAddSpecialCharacter@data	PTR unsigned char  size(2) Largest target is 8
		 -> frisbee_target(COMRAM[8]), frisbee(COMRAM[8]), selected_teamB_player_with_frisbee(COMRAM[8]), selected_teamB_player(COMRAM[8]), 
		 -> teamB_player(COMRAM[8]), selected_teamA_player_with_frisbee(COMRAM[8]), selected_teamA_player(COMRAM[8]), teamA_player(COMRAM[8]), 


Critical Paths under _main in COMRAM

    _main->_setLCD
    _setLCD->_LCDGoto
    _LCDGoto->_LCDCmd
    _LCDAddSpecialCharacter->_LCDCmd
    _LCDAddSpecialCharacter->_LCDDat
    _InitLCD->_LCDCmd

Critical Paths under _FNC in COMRAM

    _FNC->i2_setLCD
    i2_setLCD->i2_LCDGoto
    i2_LCDGoto->i2_LCDCmd

Critical Paths under _main in BANK0

    None.

Critical Paths under _FNC in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _FNC in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _FNC in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _FNC in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _FNC in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _FNC in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _FNC in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _FNC in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _FNC in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _FNC in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _FNC in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _FNC in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _FNC in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _FNC in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _FNC in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _FNC in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0    1969
                                              0 BANK0     12    12      0
                            _InitLCD
             _LCDAddSpecialCharacter
                             _LCDCmd
                            _initADC
                             _setLCD
 ---------------------------------------------------------------------------------
 (1) _setLCD                                               4     4      0     958
                                             15 COMRAM     4     4      0
                             _LCDDat
                            _LCDGoto
 ---------------------------------------------------------------------------------
 (2) _LCDGoto                                              2     1      1     580
                                             13 COMRAM     2     1      1
                             _LCDCmd
 ---------------------------------------------------------------------------------
 (1) _initADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCDAddSpecialCharacter                               4     2      2     943
                                             13 COMRAM     4     2      2
                             _LCDCmd
                             _LCDDat
 ---------------------------------------------------------------------------------
 (2) _LCDDat                                               2     2      0      31
                                             11 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _InitLCD                                              0     0      0      31
                             _LCDCmd
 ---------------------------------------------------------------------------------
 (3) _LCDCmd                                               2     2      0      31
                                             11 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _FNC                                                  3     3      0     586
                                              8 COMRAM     3     3      0
                           i2_LCDCmd
                           i2_setLCD
 ---------------------------------------------------------------------------------
 (5) i2_setLCD                                             4     4      0     564
                                              4 COMRAM     4     4      0
                           i2_LCDDat
                          i2_LCDGoto
 ---------------------------------------------------------------------------------
 (6) i2_LCDGoto                                            2     1      1     298
                                              2 COMRAM     2     1      1
                           i2_LCDCmd
 ---------------------------------------------------------------------------------
 (7) i2_LCDCmd                                             2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (6) i2_LCDDat                                             2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitLCD
     _LCDCmd
   _LCDAddSpecialCharacter
     _LCDCmd
     _LCDDat
   _LCDCmd
   _initADC
   _setLCD
     _LCDDat
     _LCDGoto
       _LCDCmd

 _FNC (ROOT)
   i2_LCDCmd
   i2_setLCD
     i2_LCDDat
     i2_LCDGoto
       i2_LCDCmd

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      C      52       5       64.1%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     13      6A       1       84.1%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      BC      34        0.0%
DATA                 0      0      BC       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Wed May 24 15:38:20 2023

                                   l52 0792                                     l45 07E6  
                                   l55 06FE                                     l80 06CC  
                                   l64 058C                                     l75 0730  
           LCDAddSpecialCharacter@data 0062  LCDAddSpecialCharacter@character_index 0064  
                                  l178 017A                                    _FNC 0008  
                                  u900 017A                                    u901 0176  
                                  u840 052C                                    u841 0528  
                                  u850 054C                                    u851 0548  
                                  u860 056C                                    u861 0568  
                                  u941 04C8                                    u870 06CC  
                                  u950 0504                                    u871 06C8  
                                  u951 0500                                    u880 0032  
                                  u881 002E                                    u890 0048  
                                  u891 0044                                    u967 06E0  
                                  u977 06F2                                    u987 0776  
                                  u997 0788                                    wreg 000FE8  
                      __end_of_LCDGoto 058E                                   ?_FNC 0055  
                                 l1701 076E                                   l1703 0770  
                                 l1711 06D4                                   l1705 0780  
                                 l1721 06FC                                   l1713 06D8  
                                 l1801 00FE                                   l1707 0782  
                                 l1715 06DA                                   l1731 055A  
                                 l1723 051C                                   l1803 0108  
                                 l1811 0160                                   l1717 06EA  
                                 l1709 06D0                                   l1741 07C4  
                                 l1733 056C                                   l1725 052C  
                                 l1813 0164                                   l1805 0112  
                                 l1901 0504                                   l1751 070C  
                                 l1743 0700                                   l1719 06EC  
                                 l1735 057A                                   l1727 053A  
                                 l1903 050A                                   l1761 072A  
                                 l1753 0712                                   l1745 0704  
                                 l1729 054C                                   l1737 0584  
                                 l1809 011C                                   l1905 050E  
                                 l1841 044E                                   l1755 0718  
                                 l1747 0708                                   l1771 06A8  
                                 l1763 0698                                   l1739 0588  
                                 l1915 0132                                   l1851 048A  
                                 l1843 0452                                   l1757 071E  
                                 l1749 070A                                   l1773 06BA  
                                 l1765 06A4                                   l1861 04CE  
                                 l1853 0498                                   l1845 0460  
                                 l1759 0724                                   l1775 06BC  
                                 l1791 0080                                   l1783 001A  
                                 l1871 04D6                                   l1863 04CE  
                                 l1855 04A6                                   l1847 046E  
                                 l1839 044A                                   l1697 0766  
                                 l1793 00AE                                   l1785 0032  
                                 l1777 0012                                   l1881 04E0  
                                 l1873 04D8                                   l1865 04D0  
                                 l1857 04B4                                   l1849 047C  
                                 l1699 076A                                   l1787 0048  
                                 l1795 00B8                                   l1891 04EA  
                                 l1883 04E2                                   l1875 04DA  
                                 l1867 04D2                                   l1859 04C2  
                                 l1797 00EA                                   l1789 0076  
                                 l1893 04EC                                   l1885 04E4  
                                 l1877 04DC                                   l1869 04D4  
                                 l1799 00F4                                   l1895 04EE  
                                 l1887 04E6                                   l1879 04DE  
                                 l1897 04F0                                   l1889 04E8  
                                 l1899 04F4                                   i2l52 07C2  
                                 i2l55 0762                                   i2l64 0600  
                                 _main 044A                                   fsr2h 000FDA  
                                 indf2 000FDF                                   fsr1l 000FE1  
                                 fsr2l 000FD9                                   btemp 006B  
                                 prodl 000FF3                                   start 000E  
                         ___param_bank 000000                        __end_of_InitLCD 0732  
                                ??_FNC 005D                     __size_ofi2_LCDGoto 0074  
                                ?_main 0055                       __end_ofi2_LCDDat 0764  
                     __end_ofi2_LCDCmd 07C4                                  i2l151 035A  
                                i2l154 03A4                                  i2l162 043E  
                                i2l157 03EE                                  i2l178 02E4  
                                _PORTD 000F83                                  _TRISD 000F95  
                      __end_of_initADC 07E8                                  _lcd_x 0014  
                                _lcd_y 0013                                  tablat 000FF5  
                                ttemp5 006C                                  ttemp6 006F  
                                ttemp7 0073                                  status 000FD8  
                                wtemp8 006C                       __end_ofi2_setLCD 02E6  
                      __initialization 0656                           __end_of_main 051A  
                               ??_main 0068                          __activetblptr 000002  
                            ??_LCDGoto 0063                                 _ADRESH 000FC4  
                               _ADRESL 000FC3                                 _LCDDat 06CE  
                               _LCDCmd 0764                      __end_ofi2_LCDGoto 0602  
                               i2l1301 079E                                 i2l1303 07A0  
                               i2l1305 07B0                                 i2l1307 07B2  
                               i2l1341 0734                                 i2l1351 0750  
                               i2l1343 0738                                 i2l1353 0760  
                               i2l1345 073C                                 i2l1361 05C0  
                               i2l1601 0342                                 i2l1347 073E  
                               i2l1371 05FC                                 i2l1363 05CE  
                               i2l1355 0590                                 i2l1451 017C  
                               i2l1611 03FC                                 i2l1603 0368  
                               i2l1349 074E                                 i2l1365 05E0  
                               i2l1357 05A0                                 i2l1461 01B2  
                               i2l1613 041E                                 i2l1605 038C  
                               i2l1367 05EE                                 i2l1359 05AE  
                               i2l1471 0254                                 i2l1463 01E0  
                               i2l1607 03B2                                 i2l1615 0432  
                               i2l1297 0796                                 i2l1369 05F8  
                               i2l1473 025E                                 i2l1465 01EA  
                               i2l1457 0184                                 i2l1617 0438  
                               i2l1609 03D6                                 i2l1299 079A  
                               i2l1475 0268                                 i2l1483 0286  
                               i2l1467 0218                                 i2l1459 019C  
                               i2l1619 043C                                 i2l1477 0272  
                               i2l1485 02CA                                 i2l1469 0222  
                               i2l1487 02CE                                 i2l1479 027C  
                               i2l1591 02FE                                 i2l1593 0302  
                               i2l1595 0304                                 i2l1917 029C  
                               i2l1597 0312                                 i2l1589 02F0  
                               i2l1599 0320                              ??_InitLCD 0062  
                               _setLCD 0012                                 clear_0 067C  
                            ??_initADC 0060                           __pdataCOMRAM 0001  
                        _frisbee_steps 0080                                 tblptrh 000FF7  
                               tblptrl 000FF6                                 tblptru 000FF8  
                            LCDDat@dat 0061                              LCDCmd@cmd 0061  
                           __accesstop 0080                __end_of__initialization 0688  
                        ___rparam_used 000001                              ?i2_LCDDat 0055  
                            ?i2_LCDCmd 0055                         __pcstackCOMRAM 0055  
             ??_LCDAddSpecialCharacter 0064                              ?i2_setLCD 0055  
                              ?_LCDDat 0055                                ?_LCDCmd 0055  
                           __pbssBANK0 0080                           i2LCDGoto@p_1 0057  
                         i2LCDGoto@p_2 0058                             ??i2_LCDDat 0055  
                           ??i2_LCDCmd 0055                                ?_setLCD 0055  
                              _CONVERT 006A                                _LCDGoto 051A  
                           ??i2_setLCD 0059                                i2u53_40 019C  
                              i2u53_41 0198                                i2u46_40 05A0  
                              i2u54_40 01B2                                i2u46_41 059C  
                              i2u54_41 01AE                                i2u47_40 05C0  
                              i2u55_40 02E4                                i2u47_41 05BC  
                              i2u55_41 02E0                                i2u48_40 05E0  
                              i2u80_40 03FC                                i2u72_40 02FE  
                              i2u48_41 05DC                                i2u80_41 03F8  
                              i2u72_41 02FA                                i2u81_40 041E  
                              i2u73_40 0312                                i2u81_41 041A  
                              i2u73_41 030E                                i2u74_40 0320  
                              i2u74_41 031C                                i2u75_40 0342  
                              i2u75_41 033E                                i2u76_40 0368  
                              i2u76_41 0364                                i2u77_40 038C  
                              i2u77_41 0388                                i2u78_40 03B2  
                              i2u78_41 03AE                                i2u79_40 03D6  
                              i2u79_41 03D2                        __size_of_LCDDat 0032  
                      __size_of_LCDCmd 0030                                _InitLCD 0700  
                              __Hparam 0000                                __Lparam 0000  
      __size_of_LCDAddSpecialCharacter 0038                                __pcinit 0656  
                      __size_of_setLCD 016A                                __ramtop 1000  
                              __ptext0 044A                                __ptext1 0012  
                              __ptext2 051A                                __ptext3 07C4  
                              __ptext4 0696                                __ptext5 06CE  
                              __ptext6 0700                                __ptext7 0764  
                              __ptext9 017C                                _initADC 07C4  
                         __size_of_FNC 0442                                _frisbee 001D  
                       __pintcode_body 02E6                   end_of_initialization 0688  
                       _frisbee_target 0015                                setLCD@i 0066  
                        __Lmediumconst 0000                                int_func 02E6  
                            i2_LCDGoto 058E                                postdec1 000FE5  
                              postinc0 000FEE                                postinc2 000FDE  
                            _PORTBbits 000F81                              _PORTEbits 000F84  
                            _TRISAbits 000F92                              _TRISBbits 000F93  
                            _TRISEbits 000F96                 _LCDAddSpecialCharacter 0696  
                       __end_of_LCDDat 0700                         __end_of_LCDCmd 0794  
                           LCDGoto@p_1 0062                             LCDGoto@p_2 0063  
                           ?i2_LCDGoto 0057                             main@values 00C6  
   _selected_teamA_player_with_frisbee 002D                      __size_ofi2_LCDDat 0032  
                    __size_ofi2_LCDCmd 0030                          __pidataCOMRAM 0602  
                            i2setLCD@i 005B                         __end_of_setLCD 017C  
                  start_initialization 0656                            __end_of_FNC 044A  
                    __size_ofi2_setLCD 016A                               ??_LCDDat 0060  
                             ??_LCDCmd 0060                LCDAddSpecialCharacter@i 0065  
                             ??_setLCD 0064                               ?_LCDGoto 0062  
                          __pbssCOMRAM 0068                          __pcstackBANK0 00C6  
                          i2LCDDat@dat 0056                            i2LCDCmd@cmd 0056  
                             ?_InitLCD 0055                            ??i2_LCDGoto 0058  
                            _character 000B                              __pintcode 0008  
                             ?_initADC 0055                           _teamA_player 004D  
                         _teamB_player 0045                              _locations 0001  
                _selected_teamA_player 003D                  _selected_teamB_player 0035  
                             i2_LCDDat 0732                               i2_LCDCmd 0794  
                             i2u100_47 07A6                               i2u101_47 07B8  
                             i2u102_47 0744                               i2u103_47 0756  
                             _PIR1bits 000F9E                              main@F3012 00BC  
                           _ADCON0bits 000FC2                             _ADCON1bits 000FC1  
                           _ADCON2bits 000FC0                               i2_setLCD 017C  
                     __size_of_LCDGoto 0074                ?_LCDAddSpecialCharacter 0062  
                          _INTCON2bits 000FF1                              copy_data0 066A  
                     __size_of_InitLCD 0032                               __Hrparam 0000  
                             __Lrparam 0000                           _selectedChar 0068  
       __end_of_LCDAddSpecialCharacter 06CE                       __size_of_initADC 0024  
                             __ptext10 058E                               __ptext11 0794  
                             __ptext12 0732                          __size_of_main 00D0  
   _selected_teamB_player_with_frisbee 0025                               int$flags 006B  
                           _INTCONbits 000FF2                               intlevel2 0000  
